-- phpMyAdmin SQL Dump
-- version 4.6.4
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: 2017-06-16 06:43:22
-- 服务器版本： 5.7.14
-- PHP Version: 5.6.25

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `huangqunzhan`
--

-- --------------------------------------------------------

--
-- 表的结构 `answer_paper`
--

CREATE TABLE `answer_paper` (
  `id` int(10) UNSIGNED NOT NULL COMMENT '主键',
  `studentid` varchar(8) NOT NULL COMMENT '学号',
  `paper_id` int(10) UNSIGNED NOT NULL COMMENT '试卷号',
  `select_question_id` int(10) UNSIGNED NOT NULL COMMENT '题号',
  `answer` varchar(100) DEFAULT NULL COMMENT '选择状态',
  `memo` varchar(32) DEFAULT NULL COMMENT '备注'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `answer_paper`
--

INSERT INTO `answer_paper` (`id`, `studentid`, `paper_id`, `select_question_id`, `answer`, `memo`) VALUES
(1557, '07160801', 27, 40, '', NULL),
(1558, '07160801', 27, 41, '', NULL),
(1559, '07160801', 27, 42, '', NULL),
(1560, '07160801', 27, 43, '', NULL),
(1561, '07160801', 27, 44, '', NULL),
(1562, '07160801', 27, 45, '', NULL),
(1563, '07160801', 27, 46, '', NULL),
(1564, '07160801', 27, 47, '', NULL),
(1565, '07160801', 27, 48, '', NULL),
(1566, '07160801', 27, 49, '', NULL),
(1567, '07160801', 27, 50, '', NULL),
(1568, '07160801', 27, 51, '', NULL),
(1569, '07160801', 27, 52, '', NULL),
(1570, '07160801', 27, 53, '', NULL),
(1571, '07160801', 27, 54, '', NULL),
(1572, '07160801', 27, 55, '', NULL),
(1573, '07160801', 27, 56, '', NULL),
(1574, '07160801', 27, 57, '', NULL),
(1575, '07160801', 27, 58, '', NULL),
(1576, '07160801', 27, 59, '', NULL),
(1577, '07160801', 27, 60, '', NULL),
(1578, '07160801', 27, 61, '', NULL),
(1579, '07160801', 27, 62, '', NULL),
(1580, '07160801', 27, 63, '', NULL),
(1581, '07160801', 27, 64, '', NULL),
(1582, '07160801', 27, 65, '', NULL),
(1583, '07160801', 27, 66, '', NULL),
(1584, '07160801', 27, 67, '', NULL),
(1585, '07160801', 27, 68, '', NULL),
(1586, '07160801', 27, 69, '', NULL),
(1587, '07160801', 27, 70, '', NULL),
(1588, '07160801', 27, 71, '', NULL),
(1589, '07160801', 27, 72, '', NULL),
(1590, '07160801', 27, 73, '', NULL),
(1591, '07160713', 28, 66, '', NULL),
(1592, '07160713', 28, 67, '', NULL),
(1593, '07160713', 28, 68, '', NULL),
(1594, '07160713', 28, 69, '', NULL),
(1595, '07160713', 28, 70, '', NULL),
(1596, '07160713', 28, 71, '', NULL),
(1597, '07160713', 28, 72, '', NULL),
(1598, '07160713', 28, 73, '', NULL),
(1599, '07160713', 28, 74, '', NULL),
(1600, '07160713', 28, 75, '', NULL),
(1601, '07160713', 28, 76, '', NULL),
(1602, '07160713', 28, 77, '', NULL),
(1603, '07160713', 28, 78, '', NULL),
(1604, '07160713', 28, 79, '', NULL),
(1605, '07160713', 28, 80, '', NULL),
(1606, '07160713', 28, 81, '', NULL),
(1607, '07160713', 28, 82, '', NULL),
(1608, '07160713', 28, 84, '', NULL),
(1609, '07160713', 28, 85, '', NULL),
(1610, '07160713', 28, 86, '', NULL),
(1611, '07160713', 28, 87, '', NULL),
(1612, '07160713', 28, 88, '', NULL),
(1613, '07160713', 28, 89, '', NULL),
(1614, '07160713', 28, 90, '', NULL),
(1615, '07160713', 28, 91, '', NULL),
(1616, '07160713', 28, 92, '', NULL),
(1617, '07160713', 28, 93, '', NULL),
(1618, '07160713', 28, 94, '', NULL),
(1619, '07160713', 28, 95, '', NULL),
(1620, '07160713', 28, 96, '', NULL),
(1621, '07160713', 28, 97, '', NULL),
(1622, '07160713', 28, 98, '', NULL),
(1623, '07160713', 28, 99, '', NULL),
(1624, '07160713', 28, 100, '', NULL),
(1625, '07160713', 28, 101, '', NULL),
(1626, '07160713', 28, 102, '', NULL),
(1627, '07160713', 28, 103, '', NULL),
(1628, '07160713', 28, 104, '', NULL),
(1629, '07160713', 29, 100, '', NULL),
(1630, '07160713', 29, 101, '', NULL),
(1631, '07160713', 29, 102, '', NULL),
(1632, '07160713', 29, 103, '', NULL),
(1633, '07160713', 29, 104, '', NULL),
(1634, '07160713', 29, 105, '', NULL),
(1635, '07160713', 29, 106, '', NULL),
(1636, '07160713', 29, 107, '', NULL),
(1637, '07160713', 29, 108, '', NULL),
(1638, '07160713', 29, 109, '', NULL),
(1639, '07160713', 29, 110, '', NULL),
(1640, '07160713', 29, 111, '', NULL),
(1641, '07160713', 29, 112, '', NULL),
(1642, '07160713', 29, 113, '', NULL),
(1643, '07160713', 29, 114, '', NULL),
(1644, '07160713', 29, 115, '', NULL),
(1645, '07160713', 29, 116, '', NULL),
(1646, '07160713', 29, 117, '', NULL),
(1647, '07160713', 29, 118, '', NULL),
(1648, '07160713', 29, 119, '', NULL),
(1649, '07160713', 29, 120, '', NULL),
(1650, '07160713', 29, 123, '', NULL),
(1651, '07160713', 29, 124, '', NULL),
(1652, '07160713', 29, 125, '', NULL),
(1653, '07160713', 29, 126, '', NULL),
(1654, '07160713', 29, 127, '', NULL),
(1655, '07160713', 29, 128, '', NULL),
(1656, '07160713', 29, 129, '', NULL),
(1657, '07160713', 29, 130, '', NULL),
(1658, '07160713', 29, 131, '', NULL),
(1659, '07160713', 29, 132, '', NULL),
(1660, '07160713', 29, 133, '', NULL),
(1661, '07160713', 29, 134, '', NULL),
(1662, '07160713', 29, 135, '', NULL),
(1663, '07160713', 29, 136, '', NULL),
(1664, '07160713', 30, 130, '', NULL),
(1665, '07160713', 30, 131, '', NULL),
(1666, '07160713', 30, 132, '', NULL),
(1667, '07160713', 30, 133, '', NULL),
(1668, '07160713', 30, 134, '', NULL),
(1669, '07160713', 30, 135, '', NULL),
(1670, '07160713', 30, 136, '', NULL),
(1671, '07160713', 30, 137, '', NULL),
(1672, '07160713', 30, 138, '', NULL),
(1673, '07160713', 30, 139, '', NULL),
(1674, '07160713', 30, 140, '', NULL),
(1675, '07160713', 30, 141, '', NULL),
(1676, '07160713', 30, 142, '', NULL),
(1677, '07160713', 30, 143, '', NULL),
(1678, '07160713', 30, 144, '', NULL),
(1679, '07160713', 30, 145, '', NULL),
(1680, '07160713', 30, 146, '', NULL),
(1681, '07160713', 30, 147, '', NULL),
(1682, '07160713', 30, 148, '', NULL),
(1683, '07160713', 30, 149, '', NULL),
(1684, '07160713', 30, 150, '', NULL),
(1685, '07160713', 30, 151, '', NULL),
(1686, '07160713', 30, 152, '', NULL),
(1687, '07160713', 30, 153, '', NULL),
(1688, '07160713', 30, 154, '', NULL),
(1689, '07160713', 30, 155, '', NULL),
(1690, '07160713', 30, 156, '', NULL),
(1691, '07160713', 30, 157, '', NULL),
(1692, '07160713', 30, 158, '', NULL),
(1693, '07160713', 30, 159, '', NULL),
(1694, '07160713', 30, 160, '', NULL),
(1695, '07160713', 30, 161, '', NULL),
(1696, '07160713', 30, 162, '', NULL),
(1697, '07160713', 30, 163, '', NULL),
(1698, '07160713', 30, 164, '', NULL),
(1699, '07160713', 30, 165, '', NULL),
(1700, '07160713', 30, 166, '', NULL),
(1701, '07160712', 26, 14, '', NULL),
(1702, '07160712', 26, 15, '', NULL),
(1703, '07160712', 26, 16, '', NULL),
(1704, '07160712', 26, 17, '', NULL),
(1705, '07160712', 26, 18, '', NULL),
(1706, '07160712', 26, 19, '', NULL),
(1707, '07160712', 26, 20, '', NULL),
(1708, '07160712', 26, 21, '', NULL),
(1709, '07160712', 26, 22, '', NULL),
(1710, '07160712', 26, 23, '', NULL),
(1711, '07160712', 26, 24, '', NULL),
(1712, '07160712', 26, 25, '', NULL),
(1713, '07160712', 26, 26, '', NULL),
(1714, '07160712', 26, 27, '', NULL),
(1715, '07160712', 26, 28, '', NULL),
(1716, '07160712', 26, 29, '', NULL),
(1717, '07160712', 26, 30, '', NULL),
(1718, '07160712', 26, 31, '', NULL),
(1719, '07160712', 26, 32, '', NULL),
(1720, '07160712', 26, 33, '', NULL),
(1721, '07160712', 26, 34, '', NULL),
(1722, '07160712', 26, 35, '', NULL),
(1723, '07160712', 26, 36, '', NULL),
(1724, '07160712', 26, 37, '', NULL),
(1725, '07160712', 26, 38, '', NULL),
(1726, '07160712', 26, 39, '', NULL),
(1727, '07160713', 31, 163, '', NULL),
(1728, '07160713', 31, 164, '', NULL),
(1729, '07160713', 31, 165, '', NULL),
(1730, '07160713', 31, 166, '', NULL),
(1731, '07160713', 31, 167, '', NULL),
(1732, '07160713', 31, 168, '', NULL),
(1733, '07160713', 31, 169, '', NULL),
(1734, '07160713', 31, 170, '', NULL),
(1735, '07160713', 31, 171, '', NULL),
(1736, '07160713', 31, 172, '', NULL),
(1737, '07160713', 31, 173, '', NULL),
(1738, '07160713', 31, 174, '', NULL),
(1739, '07160713', 31, 175, '', NULL),
(1740, '07160713', 31, 176, '', NULL),
(1741, '07160713', 31, 177, '', NULL),
(1742, '07160713', 31, 178, '', NULL),
(1743, '07160713', 31, 179, '', NULL),
(1744, '07160713', 31, 180, '', NULL),
(1745, '07160713', 31, 181, '', NULL),
(1746, '07160713', 31, 182, '', NULL),
(1747, '07160713', 31, 183, '', NULL),
(1748, '07160713', 31, 184, '', NULL),
(1749, '07160713', 31, 185, '', NULL),
(1750, '07160713', 31, 186, '', NULL),
(1751, '07160713', 31, 187, '', NULL),
(1752, '07160713', 31, 188, '', NULL),
(1753, '07160713', 31, 189, '', NULL),
(1754, '07160713', 31, 190, '', NULL),
(1755, '07160713', 31, 191, '', NULL),
(1756, '07160713', 31, 192, '', NULL),
(1757, '07160713', 31, 193, '', NULL),
(1758, '07160713', 31, 194, '', NULL),
(1759, '07160713', 31, 195, '', NULL),
(1760, '07160713', 31, 196, '', NULL),
(1761, '07160713', 31, 197, '', NULL),
(1762, '07160713', 31, 198, '', NULL),
(1763, '07160713', 31, 199, '', NULL),
(1764, '07160713', 32, 200, '', NULL),
(1765, '07160713', 32, 201, '', NULL),
(1766, '07160713', 32, 202, '', NULL),
(1767, '07160713', 32, 203, '', NULL),
(1768, '07160713', 32, 204, '', NULL),
(1769, '07160713', 32, 205, '', NULL),
(1770, '07160713', 32, 206, '', NULL),
(1771, '07160713', 32, 207, '', NULL),
(1772, '07160713', 32, 208, '', NULL),
(1773, '07160713', 32, 209, '', NULL),
(1774, '07160713', 32, 210, '', NULL),
(1775, '07160713', 32, 211, '', NULL),
(1776, '07160713', 32, 212, '', NULL),
(1777, '07160713', 32, 213, '', NULL),
(1778, '07160713', 32, 214, '', NULL),
(1779, '07160713', 32, 215, '', NULL),
(1780, '07160713', 32, 216, '', NULL),
(1781, '07160713', 32, 217, '', NULL),
(1782, '07160713', 32, 218, '', NULL),
(1783, '07160713', 32, 219, '', NULL),
(1784, '07160713', 32, 220, '', NULL),
(1785, '07160713', 32, 221, '', NULL),
(1786, '07160713', 32, 222, '', NULL),
(1787, '07160713', 32, 223, '', NULL),
(1788, '07160713', 32, 224, '', NULL),
(1789, '07160713', 32, 225, '', NULL),
(1790, '07160713', 32, 226, '', NULL),
(1791, '07160713', 32, 227, '', NULL),
(1792, '07160713', 32, 228, '', NULL),
(1793, '07160713', 32, 229, '', NULL),
(1794, '07160712', 27, 40, '', NULL),
(1795, '07160712', 27, 41, '', NULL),
(1796, '07160712', 27, 42, '', NULL),
(1797, '07160712', 27, 43, '', NULL),
(1798, '07160712', 27, 44, '', NULL),
(1799, '07160712', 27, 45, '', NULL),
(1800, '07160712', 27, 46, '', NULL),
(1801, '07160712', 27, 47, '', NULL),
(1802, '07160712', 27, 48, '', NULL),
(1803, '07160712', 27, 49, '', NULL),
(1804, '07160712', 27, 50, '', NULL),
(1805, '07160712', 27, 51, '', NULL),
(1806, '07160712', 27, 52, '', NULL),
(1807, '07160712', 27, 53, '', NULL),
(1808, '07160712', 27, 54, '', NULL),
(1809, '07160712', 27, 55, '', NULL),
(1810, '07160712', 27, 56, '', NULL),
(1811, '07160712', 27, 57, '', NULL),
(1812, '07160712', 27, 58, '', NULL),
(1813, '07160712', 27, 59, '', NULL),
(1814, '07160712', 27, 60, '', NULL),
(1815, '07160712', 27, 61, '', NULL),
(1816, '07160712', 27, 62, '', NULL),
(1817, '07160712', 27, 63, '', NULL),
(1818, '07160712', 27, 64, '', NULL),
(1819, '07160712', 27, 65, '', NULL),
(1820, '07160712', 27, 66, '', NULL),
(1821, '07160712', 27, 67, '', NULL),
(1822, '07160712', 27, 68, '', NULL),
(1823, '07160712', 27, 69, '', NULL),
(1824, '07160712', 27, 70, '', NULL),
(1825, '07160712', 27, 71, '', NULL),
(1826, '07160712', 27, 72, '', NULL),
(1827, '07160712', 27, 73, '', NULL);

-- --------------------------------------------------------

--
-- 表的结构 `exercise_answer`
--

CREATE TABLE `exercise_answer` (
  `id` int(10) UNSIGNED NOT NULL COMMENT '主键',
  `studentid` varchar(8) NOT NULL COMMENT '学号',
  `paper_id` int(10) UNSIGNED NOT NULL COMMENT '试卷号',
  `select_question_id` int(10) UNSIGNED NOT NULL COMMENT '题号',
  `answer` varchar(100) DEFAULT NULL COMMENT '选择状态',
  `memo` varchar(32) DEFAULT NULL COMMENT '备注'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `exercise_answer`
--

INSERT INTO `exercise_answer` (`id`, `studentid`, `paper_id`, `select_question_id`, `answer`, `memo`) VALUES
(56, '07160801', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(57, '07160801', 26, 15, 'a:2:{i:57;i:0;i:59;i:1;}', NULL),
(58, '07160801', 26, 16, 'a:2:{i:63;i:0;i:64;i:1;}', NULL),
(59, '07160801', 26, 17, 'a:2:{i:68;i:0;i:67;i:1;}', NULL),
(60, '07160801', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(61, '07160801', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(62, '07160801', 26, 20, 'a:2:{i:78;i:0;i:80;i:1;}', NULL),
(63, '07160801', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(64, '07160801', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(65, '07160801', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(66, '07160801', 26, 24, 'a:2:{i:94;i:0;i:96;i:1;}', NULL),
(67, '07160801', 26, 25, 'a:2:{i:99;i:0;i:97;i:1;}', NULL),
(68, '07160801', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(69, '07160801', 26, 27, 'a:2:{i:106;i:0;i:105;i:1;}', NULL),
(70, '07160801', 26, 28, 'a:2:{i:111;i:0;i:112;i:1;}', NULL),
(71, '07160801', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(72, '07160801', 26, 30, 'a:2:{i:120;i:0;i:117;i:1;}', NULL),
(73, '07160801', 26, 31, 'a:2:{i:123;i:0;i:121;i:1;}', NULL),
(74, '07160801', 26, 32, 'a:2:{i:127;i:0;i:125;i:1;}', NULL),
(75, '07160801', 26, 33, 'a:2:{i:131;i:0;i:130;i:1;}', NULL),
(76, '07160801', 26, 34, 'a:3:{i:135;i:0;i:134;i:0;i:133;i:1;}', NULL),
(77, '07160801', 26, 35, 'a:2:{i:139;i:0;i:140;i:1;}', NULL),
(78, '07160801', 26, 36, 'a:1:{i:143;i:1;}', NULL),
(79, '07160801', 26, 37, 'a:2:{i:147;i:0;i:148;i:1;}', NULL),
(80, '07160801', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(81, '07160801', 26, 39, 'a:2:{i:153;i:0;i:156;i:1;}', NULL),
(82, '07160701', 26, 14, 'a:2:{i:55;i:0;i:56;i:1;}', NULL),
(83, '07160701', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(84, '07160701', 26, 16, 'a:2:{i:62;i:0;i:64;i:1;}', NULL),
(85, '07160701', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(86, '07160701', 26, 18, 'a:2:{i:69;i:0;i:72;i:1;}', NULL),
(87, '07160701', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(88, '07160701', 26, 20, 'a:2:{i:80;i:1;i:79;i:0;}', NULL),
(89, '07160701', 26, 21, 'a:2:{i:82;i:0;i:83;i:1;}', NULL),
(90, '07160701', 26, 22, 'a:2:{i:86;i:0;i:87;i:1;}', NULL),
(91, '07160701', 26, 23, 'a:3:{i:91;i:0;i:92;i:0;i:90;i:1;}', NULL),
(92, '07160701', 26, 24, 'a:2:{i:95;i:0;i:94;i:1;}', NULL),
(93, '07160701', 26, 25, 'a:2:{i:100;i:0;i:97;i:1;}', NULL),
(94, '07160701', 26, 26, 'a:2:{i:103;i:1;i:102;i:0;}', NULL),
(95, '07160701', 26, 27, 'a:2:{i:107;i:0;i:105;i:1;}', NULL),
(96, '07160701', 26, 28, 'a:2:{i:111;i:0;i:112;i:1;}', NULL),
(97, '07160701', 26, 29, 'a:3:{i:115;i:0;i:116;i:0;i:113;i:1;}', NULL),
(98, '07160701', 26, 30, 'a:1:{i:118;i:1;}', NULL),
(99, '07160701', 26, 31, 'a:1:{i:122;i:1;}', NULL),
(100, '07160701', 26, 32, 'a:3:{i:127;i:0;i:125;i:1;i:126;i:0;}', NULL),
(101, '07160701', 26, 33, 'a:2:{i:130;i:0;i:131;i:1;}', NULL),
(102, '07160701', 26, 34, 'a:2:{i:135;i:0;i:134;i:1;}', NULL),
(103, '07160701', 26, 35, 'a:2:{i:138;i:0;i:140;i:1;}', NULL),
(104, '07160701', 26, 36, 'a:2:{i:144;i:0;i:142;i:1;}', NULL),
(105, '07160701', 26, 37, 'a:2:{i:145;i:0;i:148;i:1;}', NULL),
(106, '07160701', 26, 38, 'a:2:{i:152;i:0;i:149;i:1;}', NULL),
(107, '07160701', 26, 39, 'a:2:{i:154;i:0;i:153;i:1;}', NULL),
(108, '07160702', 32, 200, 'a:2:{i:796;i:0;i:797;i:1;}', NULL),
(109, '07160702', 32, 201, 'a:2:{i:800;i:0;i:798;i:1;}', NULL),
(110, '07160702', 32, 202, 'a:1:{i:802;i:1;}', NULL),
(111, '07160702', 32, 203, 'a:2:{i:806;i:0;i:809;i:1;}', NULL),
(112, '07160702', 32, 204, 'a:2:{i:813;i:0;i:812;i:1;}', NULL),
(113, '07160702', 32, 205, 'a:1:{i:814;i:1;}', NULL),
(114, '07160702', 32, 206, 'a:1:{i:820;i:1;}', NULL),
(115, '07160702', 32, 207, 'a:2:{i:823;i:1;i:825;i:0;}', NULL),
(116, '07160702', 32, 208, 'a:2:{i:827;i:0;i:826;i:1;}', NULL),
(117, '07160702', 32, 209, 'a:2:{i:833;i:0;i:831;i:1;}', NULL),
(118, '07160702', 32, 210, 'a:2:{i:836;i:0;i:835;i:1;}', NULL),
(119, '07160702', 32, 211, 'a:2:{i:840;i:1;i:838;i:0;}', NULL),
(120, '07160702', 32, 212, 'a:1:{i:844;i:1;}', NULL),
(121, '07160702', 32, 213, 'a:1:{i:846;i:1;}', NULL),
(122, '07160702', 32, 214, 'a:1:{i:853;i:1;}', NULL),
(123, '07160702', 32, 215, 'a:1:{i:854;i:1;}', NULL),
(124, '07160702', 32, 216, 'a:1:{i:861;i:1;}', NULL),
(125, '07160702', 32, 217, 'a:1:{i:865;i:1;}', NULL),
(126, '07160702', 32, 218, 'a:2:{i:868;i:0;i:866;i:1;}', NULL),
(127, '07160702', 32, 219, 'a:2:{i:871;i:1;i:873;i:0;}', NULL),
(128, '07160702', 32, 220, 'a:2:{i:875;i:0;i:877;i:1;}', NULL),
(129, '07160702', 32, 221, 'a:2:{i:879;i:0;i:881;i:1;}', NULL),
(130, '07160702', 32, 222, 'a:1:{i:883;i:1;}', NULL),
(131, '07160702', 32, 223, 'a:2:{i:886;i:0;i:887;i:1;}', NULL),
(132, '07160702', 32, 224, 'a:1:{i:891;i:1;}', NULL),
(133, '07160702', 32, 225, 'a:1:{i:894;i:1;}', NULL),
(134, '07160702', 32, 226, 'a:2:{i:901;i:0;i:898;i:1;}', NULL),
(135, '07160702', 32, 227, 'a:1:{i:904;i:1;}', NULL),
(136, '07160702', 32, 228, 'a:2:{i:906;i:0;i:907;i:1;}', NULL),
(137, '07160702', 32, 229, 'a:2:{i:910;i:1;i:911;i:0;}', NULL),
(138, '07160717', 26, 14, 'a:3:{i:55;i:0;i:54;i:0;i:56;i:1;}', NULL),
(139, '07160717', 26, 15, 'a:2:{i:60;i:1;i:59;i:0;}', NULL),
(140, '07160717', 26, 16, 'a:2:{i:64;i:1;i:63;i:0;}', NULL),
(141, '07160717', 26, 17, 'a:2:{i:67;i:1;i:66;i:0;}', NULL),
(142, '07160717', 26, 18, 'a:3:{i:69;i:0;i:70;i:0;i:71;i:1;}', NULL),
(143, '07160717', 26, 19, 'a:3:{i:75;i:0;i:73;i:1;i:76;i:0;}', NULL),
(144, '07160717', 26, 20, 'a:1:{i:80;i:1;}', NULL),
(145, '07160717', 26, 21, 'a:2:{i:83;i:1;i:84;i:0;}', NULL),
(146, '07160717', 26, 22, 'a:2:{i:87;i:1;i:86;i:0;}', NULL),
(147, '07160717', 26, 23, 'a:2:{i:90;i:1;i:91;i:0;}', NULL),
(148, '07160717', 26, 24, 'a:2:{i:94;i:0;i:96;i:1;}', NULL),
(149, '07160717', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(150, '07160717', 26, 26, 'a:2:{i:103;i:1;i:102;i:0;}', NULL),
(151, '07160717', 26, 27, 'a:3:{i:107;i:0;i:106;i:0;i:105;i:1;}', NULL),
(152, '07160717', 26, 28, 'a:2:{i:110;i:0;i:112;i:1;}', NULL),
(153, '07160717', 26, 29, 'a:2:{i:113;i:0;i:115;i:1;}', NULL),
(154, '07160717', 26, 30, 'a:2:{i:118;i:0;i:117;i:1;}', NULL),
(155, '07160717', 26, 31, 'a:2:{i:123;i:0;i:121;i:1;}', NULL),
(156, '07160717', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(157, '07160717', 26, 33, 'a:2:{i:129;i:0;i:130;i:1;}', NULL),
(158, '07160717', 26, 34, 'a:2:{i:133;i:1;i:134;i:0;}', NULL),
(159, '07160717', 26, 35, 'a:3:{i:137;i:0;i:138;i:0;i:140;i:1;}', NULL),
(160, '07160717', 26, 36, 'a:2:{i:141;i:0;i:143;i:1;}', NULL),
(161, '07160717', 26, 37, 'a:2:{i:148;i:1;i:146;i:0;}', NULL),
(162, '07160717', 26, 38, 'a:3:{i:151;i:0;i:149;i:1;i:152;i:0;}', NULL),
(163, '07160717', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(164, '07160709', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(165, '07160709', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(166, '07160709', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(167, '07160709', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(168, '07160709', 26, 18, 'a:2:{i:69;i:0;i:71;i:1;}', NULL),
(169, '07160709', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(170, '07160709', 26, 20, 'a:2:{i:79;i:0;i:80;i:1;}', NULL),
(171, '07160709', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(172, '07160709', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(173, '07160709', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(174, '07160709', 26, 24, 'a:2:{i:94;i:0;i:96;i:1;}', NULL),
(175, '07160709', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(176, '07160709', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(177, '07160709', 26, 27, 'a:1:{i:106;i:1;}', NULL),
(178, '07160709', 26, 28, 'a:1:{i:110;i:1;}', NULL),
(179, '07160709', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(180, '07160709', 26, 30, 'a:3:{i:118;i:0;i:119;i:0;i:117;i:1;}', NULL),
(181, '07160709', 26, 31, 'a:1:{i:121;i:1;}', NULL),
(182, '07160709', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(183, '07160709', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(184, '07160709', 26, 34, 'a:2:{i:135;i:0;i:133;i:1;}', NULL),
(185, '07160709', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(186, '07160709', 26, 36, 'a:1:{i:143;i:1;}', NULL),
(187, '07160709', 26, 37, 'a:2:{i:146;i:0;i:148;i:1;}', NULL),
(188, '07160709', 26, 38, 'a:2:{i:149;i:1;i:152;i:0;}', NULL),
(189, '07160709', 26, 39, 'a:2:{i:153;i:0;i:156;i:1;}', NULL),
(190, '07160748', 26, 14, 'a:2:{i:55;i:0;i:56;i:1;}', NULL),
(191, '07160748', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(192, '07160748', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(193, '07160748', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(194, '07160748', 26, 18, 'a:2:{i:69;i:0;i:71;i:1;}', NULL),
(195, '07160748', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(196, '07160748', 26, 20, 'a:2:{i:78;i:0;i:80;i:1;}', NULL),
(197, '07160748', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(198, '07160748', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(199, '07160748', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(200, '07160748', 26, 24, 'a:2:{i:95;i:0;i:96;i:1;}', NULL),
(201, '07160748', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(202, '07160748', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(203, '07160748', 26, 27, 'a:2:{i:106;i:0;i:105;i:1;}', NULL),
(204, '07160748', 26, 28, 'a:2:{i:110;i:0;i:112;i:1;}', NULL),
(205, '07160748', 26, 29, 'a:2:{i:114;i:0;i:115;i:1;}', NULL),
(206, '07160748', 26, 30, 'a:1:{i:118;i:1;}', NULL),
(207, '07160748', 26, 31, 'a:2:{i:124;i:0;i:121;i:1;}', NULL),
(208, '07160748', 26, 32, 'a:2:{i:126;i:0;i:125;i:1;}', NULL),
(209, '07160748', 26, 33, 'a:2:{i:132;i:0;i:130;i:1;}', NULL),
(210, '07160748', 26, 34, 'a:1:{i:133;i:1;}', NULL),
(211, '07160748', 26, 35, 'a:2:{i:140;i:1;i:137;i:0;}', NULL),
(212, '07160748', 26, 36, 'a:1:{i:143;i:1;}', NULL),
(213, '07160748', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(214, '07160748', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(215, '07160748', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(216, '07160718', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(217, '07160718', 26, 15, 'a:1:{i:58;i:1;}', NULL),
(218, '07160718', 26, 16, 'a:1:{i:61;i:1;}', NULL),
(219, '07160718', 26, 17, 'a:1:{i:66;i:1;}', NULL),
(220, '07160718', 26, 18, 'a:2:{i:69;i:0;i:72;i:1;}', NULL),
(221, '07160718', 26, 19, 'a:1:{i:75;i:1;}', NULL),
(222, '07160718', 26, 20, 'a:1:{i:80;i:1;}', NULL),
(223, '07160718', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(224, '07160718', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(225, '07160718', 26, 23, 'a:1:{i:89;i:1;}', NULL),
(226, '07160718', 26, 24, 'a:1:{i:95;i:1;}', NULL),
(227, '07160718', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(228, '07160718', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(229, '07160718', 26, 27, 'a:1:{i:106;i:1;}', NULL),
(230, '07160718', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(231, '07160718', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(232, '07160718', 26, 30, 'a:3:{i:119;i:0;i:120;i:0;i:118;i:1;}', NULL),
(233, '07160718', 26, 31, 'a:1:{i:121;i:1;}', NULL),
(234, '07160718', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(235, '07160718', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(236, '07160718', 26, 34, 'a:1:{i:135;i:1;}', NULL),
(237, '07160718', 26, 35, 'a:1:{i:137;i:1;}', NULL),
(238, '07160718', 26, 36, 'a:2:{i:142;i:0;i:144;i:1;}', NULL),
(239, '07160718', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(240, '07160718', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(241, '07160718', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(242, '07160719', 26, 14, 'a:2:{i:56;i:1;i:55;i:0;}', NULL),
(243, '07160719', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(244, '07160719', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(245, '07160719', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(246, '07160719', 26, 18, 'a:2:{i:69;i:0;i:71;i:1;}', NULL),
(247, '07160719', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(248, '07160719', 26, 20, 'a:2:{i:78;i:0;i:80;i:1;}', NULL),
(249, '07160719', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(250, '07160719', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(251, '07160719', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(252, '07160719', 26, 24, 'a:3:{i:93;i:0;i:94;i:0;i:96;i:1;}', NULL),
(253, '07160719', 26, 25, 'a:4:{i:97;i:1;i:98;i:0;i:99;i:0;i:100;i:0;}', NULL),
(254, '07160719', 26, 26, 'a:2:{i:101;i:0;i:103;i:1;}', NULL),
(255, '07160719', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(256, '07160719', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(257, '07160719', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(258, '07160719', 26, 30, 'a:2:{i:119;i:0;i:117;i:1;}', NULL),
(259, '07160719', 26, 31, 'a:1:{i:121;i:1;}', NULL),
(260, '07160719', 26, 32, 'a:2:{i:126;i:0;i:125;i:1;}', NULL),
(261, '07160719', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(262, '07160719', 26, 34, 'a:4:{i:134;i:0;i:135;i:0;i:136;i:0;i:133;i:1;}', NULL),
(263, '07160719', 26, 35, 'a:4:{i:138;i:0;i:137;i:0;i:139;i:0;i:140;i:1;}', NULL),
(264, '07160719', 26, 36, 'a:2:{i:142;i:0;i:143;i:1;}', NULL),
(265, '07160719', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(266, '07160719', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(267, '07160719', 26, 39, 'a:4:{i:155;i:0;i:156;i:1;i:153;i:0;i:154;i:0;}', NULL),
(268, '07160719', 32, 200, '', NULL),
(269, '07160719', 32, 201, '', NULL),
(270, '07160719', 32, 202, '', NULL),
(271, '07160719', 32, 203, '', NULL),
(272, '07160719', 32, 204, '', NULL),
(273, '07160719', 32, 205, '', NULL),
(274, '07160719', 32, 206, '', NULL),
(275, '07160719', 32, 207, '', NULL),
(276, '07160719', 32, 208, '', NULL),
(277, '07160719', 32, 209, '', NULL),
(278, '07160719', 32, 210, '', NULL),
(279, '07160719', 32, 211, '', NULL),
(280, '07160719', 32, 212, '', NULL),
(281, '07160719', 32, 213, '', NULL),
(282, '07160719', 32, 214, '', NULL),
(283, '07160719', 32, 215, '', NULL),
(284, '07160719', 32, 216, '', NULL),
(285, '07160719', 32, 217, '', NULL),
(286, '07160719', 32, 218, '', NULL),
(287, '07160719', 32, 219, '', NULL),
(288, '07160719', 32, 220, '', NULL),
(289, '07160719', 32, 221, '', NULL),
(290, '07160719', 32, 222, '', NULL),
(291, '07160719', 32, 223, '', NULL),
(292, '07160719', 32, 224, '', NULL),
(293, '07160719', 32, 225, '', NULL),
(294, '07160719', 32, 226, '', NULL),
(295, '07160719', 32, 227, '', NULL),
(296, '07160719', 32, 228, '', NULL),
(297, '07160719', 32, 229, '', NULL),
(298, '07160721', 26, 14, 'a:2:{i:56;i:1;i:55;i:0;}', NULL),
(299, '07160721', 26, 15, 'a:2:{i:59;i:1;i:60;i:0;}', NULL),
(300, '07160721', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(301, '07160721', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(302, '07160721', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(303, '07160721', 26, 19, 'a:3:{i:75;i:0;i:76;i:0;i:73;i:1;}', NULL),
(304, '07160721', 26, 20, 'a:1:{i:80;i:1;}', NULL),
(305, '07160721', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(306, '07160721', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(307, '07160721', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(308, '07160721', 26, 24, 'a:2:{i:95;i:0;i:96;i:1;}', NULL),
(309, '07160721', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(310, '07160721', 26, 26, 'a:2:{i:104;i:0;i:103;i:1;}', NULL),
(311, '07160721', 26, 27, 'a:2:{i:106;i:0;i:105;i:1;}', NULL),
(312, '07160721', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(313, '07160721', 26, 29, 'a:2:{i:114;i:0;i:115;i:1;}', NULL),
(314, '07160721', 26, 30, 'a:2:{i:119;i:0;i:117;i:1;}', NULL),
(315, '07160721', 26, 31, 'a:1:{i:121;i:1;}', NULL),
(316, '07160721', 26, 32, 'a:2:{i:126;i:0;i:125;i:1;}', NULL),
(317, '07160721', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(318, '07160721', 26, 34, 'a:2:{i:135;i:0;i:133;i:1;}', NULL),
(319, '07160721', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(320, '07160721', 26, 36, 'a:2:{i:144;i:0;i:143;i:1;}', NULL),
(321, '07160721', 26, 37, 'a:3:{i:146;i:0;i:147;i:0;i:148;i:1;}', NULL),
(322, '07160721', 26, 38, 'a:2:{i:152;i:0;i:149;i:1;}', NULL),
(323, '07160721', 26, 39, 'a:2:{i:153;i:0;i:156;i:1;}', NULL),
(324, '07160724', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(325, '07160724', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(326, '07160724', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(327, '07160724', 26, 17, 'a:2:{i:66;i:0;i:67;i:1;}', NULL),
(328, '07160724', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(329, '07160724', 26, 19, 'a:2:{i:76;i:0;i:73;i:1;}', NULL),
(330, '07160724', 26, 20, 'a:1:{i:80;i:1;}', NULL),
(331, '07160724', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(332, '07160724', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(333, '07160724', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(334, '07160724', 26, 24, 'a:3:{i:93;i:0;i:94;i:0;i:96;i:1;}', NULL),
(335, '07160724', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(336, '07160724', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(337, '07160724', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(338, '07160724', 26, 28, 'a:2:{i:110;i:0;i:112;i:1;}', NULL),
(339, '07160724', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(340, '07160724', 26, 30, 'a:2:{i:118;i:0;i:117;i:1;}', NULL),
(341, '07160724', 26, 31, 'a:3:{i:123;i:0;i:124;i:0;i:121;i:1;}', NULL),
(342, '07160724', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(343, '07160724', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(344, '07160724', 26, 34, 'a:2:{i:134;i:0;i:133;i:1;}', NULL),
(345, '07160724', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(346, '07160724', 26, 36, 'a:2:{i:141;i:0;i:143;i:1;}', NULL),
(347, '07160724', 26, 37, 'a:2:{i:147;i:0;i:148;i:1;}', NULL),
(348, '07160724', 26, 38, 'a:4:{i:149;i:1;i:150;i:0;i:152;i:0;i:151;i:0;}', NULL),
(349, '07160724', 26, 39, 'a:3:{i:154;i:0;i:155;i:0;i:156;i:1;}', NULL),
(350, '07160741', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(351, '07160741', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(352, '07160741', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(353, '07160741', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(354, '07160741', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(355, '07160741', 26, 19, 'a:4:{i:76;i:0;i:74;i:0;i:73;i:1;i:75;i:0;}', NULL),
(356, '07160741', 26, 20, 'a:1:{i:80;i:1;}', NULL),
(357, '07160741', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(358, '07160741', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(359, '07160741', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(360, '07160741', 26, 24, 'a:2:{i:95;i:0;i:96;i:1;}', NULL),
(361, '07160741', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(362, '07160741', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(363, '07160741', 26, 27, 'a:2:{i:106;i:0;i:105;i:1;}', NULL),
(364, '07160741', 26, 28, 'a:2:{i:110;i:0;i:112;i:1;}', NULL),
(365, '07160741', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(366, '07160741', 26, 30, 'a:2:{i:118;i:0;i:117;i:1;}', NULL),
(367, '07160741', 26, 31, 'a:2:{i:123;i:0;i:121;i:1;}', NULL),
(368, '07160741', 26, 32, 'a:2:{i:125;i:1;i:126;i:0;}', NULL),
(369, '07160741', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(370, '07160741', 26, 34, 'a:2:{i:135;i:0;i:133;i:1;}', NULL),
(371, '07160741', 26, 35, 'a:2:{i:137;i:0;i:140;i:1;}', NULL),
(372, '07160741', 26, 36, 'a:2:{i:143;i:1;i:141;i:0;}', NULL),
(373, '07160741', 26, 37, 'a:2:{i:146;i:0;i:148;i:1;}', NULL),
(374, '07160741', 26, 38, 'a:2:{i:149;i:1;i:151;i:0;}', NULL),
(375, '07160741', 26, 39, 'a:2:{i:154;i:0;i:156;i:1;}', NULL),
(376, '07160708', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(377, '07160708', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(378, '07160708', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(379, '07160708', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(380, '07160708', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(381, '07160708', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(382, '07160708', 26, 20, 'a:1:{i:80;i:1;}', NULL),
(383, '07160708', 26, 21, 'a:2:{i:81;i:0;i:83;i:1;}', NULL),
(384, '07160708', 26, 22, 'a:2:{i:87;i:1;i:88;i:0;}', NULL),
(385, '07160708', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(386, '07160708', 26, 24, 'a:2:{i:95;i:0;i:96;i:1;}', NULL),
(387, '07160708', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(388, '07160708', 26, 26, 'a:2:{i:103;i:1;i:104;i:0;}', NULL),
(389, '07160708', 26, 27, 'a:2:{i:106;i:0;i:105;i:1;}', NULL),
(390, '07160708', 26, 28, 'a:2:{i:110;i:0;i:112;i:1;}', NULL),
(391, '07160708', 26, 29, 'a:2:{i:113;i:0;i:115;i:1;}', NULL),
(392, '07160708', 26, 30, 'a:4:{i:118;i:0;i:120;i:0;i:117;i:1;i:119;i:0;}', NULL),
(393, '07160708', 26, 31, 'a:3:{i:123;i:0;i:124;i:0;i:121;i:1;}', NULL),
(394, '07160708', 26, 32, 'a:3:{i:126;i:0;i:127;i:0;i:125;i:1;}', NULL),
(395, '07160708', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(396, '07160708', 26, 34, 'a:1:{i:133;i:1;}', NULL),
(397, '07160708', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(398, '07160708', 26, 36, 'a:4:{i:143;i:1;i:141;i:0;i:144;i:0;i:142;i:0;}', NULL),
(399, '07160708', 26, 37, 'a:2:{i:147;i:0;i:148;i:1;}', NULL),
(400, '07160708', 26, 38, 'a:2:{i:152;i:0;i:149;i:1;}', NULL),
(401, '07160708', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(402, '07160726', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(403, '07160726', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(404, '07160726', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(405, '07160726', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(406, '07160726', 26, 18, 'a:1:{i:69;i:1;}', NULL),
(407, '07160726', 26, 19, 'a:1:{i:75;i:1;}', NULL),
(408, '07160726', 26, 20, 'a:1:{i:78;i:1;}', NULL),
(409, '07160726', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(410, '07160726', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(411, '07160726', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(412, '07160726', 26, 24, 'a:1:{i:95;i:1;}', NULL),
(413, '07160726', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(414, '07160726', 26, 26, 'a:2:{i:101;i:1;i:102;i:0;}', NULL),
(415, '07160726', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(416, '07160726', 26, 28, 'a:1:{i:111;i:1;}', NULL),
(417, '07160726', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(418, '07160726', 26, 30, 'a:1:{i:117;i:1;}', NULL),
(419, '07160726', 26, 31, 'a:2:{i:121;i:0;i:124;i:1;}', NULL),
(420, '07160726', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(421, '07160726', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(422, '07160726', 26, 34, 'a:1:{i:133;i:1;}', NULL),
(423, '07160726', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(424, '07160726', 26, 36, 'a:1:{i:143;i:1;}', NULL),
(425, '07160726', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(426, '07160726', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(427, '07160726', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(428, '07160712', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(429, '07160712', 26, 15, 'a:1:{i:58;i:1;}', NULL),
(430, '07160712', 26, 16, 'a:1:{i:62;i:1;}', NULL),
(431, '07160712', 26, 17, 'a:1:{i:68;i:1;}', NULL),
(432, '07160712', 26, 18, 'a:1:{i:69;i:1;}', NULL),
(433, '07160712', 26, 19, 'a:1:{i:76;i:1;}', NULL),
(434, '07160712', 26, 20, 'a:1:{i:77;i:1;}', NULL),
(435, '07160712', 26, 21, 'a:1:{i:81;i:1;}', NULL),
(436, '07160712', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(437, '07160712', 26, 23, 'a:3:{i:90;i:1;i:92;i:0;i:91;i:0;}', NULL),
(438, '07160712', 26, 24, 'a:1:{i:93;i:1;}', NULL),
(439, '07160712', 26, 25, 'a:1:{i:100;i:1;}', NULL),
(440, '07160712', 26, 26, 'a:1:{i:101;i:1;}', NULL),
(441, '07160712', 26, 27, 'a:1:{i:107;i:1;}', NULL),
(442, '07160712', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(443, '07160712', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(444, '07160712', 26, 30, 'a:1:{i:119;i:1;}', NULL),
(445, '07160712', 26, 31, 'a:1:{i:121;i:1;}', NULL),
(446, '07160712', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(447, '07160712', 26, 33, 'a:1:{i:132;i:1;}', NULL),
(448, '07160712', 26, 34, 'a:1:{i:133;i:1;}', NULL),
(449, '07160712', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(450, '07160712', 26, 36, 'a:1:{i:141;i:1;}', NULL),
(451, '07160712', 26, 37, 'a:1:{i:146;i:1;}', NULL),
(452, '07160712', 26, 38, 'a:1:{i:151;i:1;}', NULL),
(453, '07160712', 26, 39, 'a:1:{i:153;i:1;}', NULL),
(454, '07160732', 26, 14, 'a:2:{i:56;i:1;i:55;i:0;}', NULL),
(455, '07160732', 26, 15, 'a:2:{i:59;i:1;i:58;i:0;}', NULL),
(456, '07160732', 26, 16, 'a:2:{i:63;i:0;i:64;i:1;}', NULL),
(457, '07160732', 26, 17, 'a:2:{i:67;i:1;i:66;i:0;}', NULL),
(458, '07160732', 26, 18, 'a:3:{i:69;i:0;i:70;i:0;i:71;i:1;}', NULL),
(459, '07160732', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(460, '07160732', 26, 20, 'a:2:{i:80;i:1;i:79;i:0;}', NULL),
(461, '07160732', 26, 21, 'a:2:{i:83;i:1;i:82;i:0;}', NULL),
(462, '07160732', 26, 22, 'a:2:{i:87;i:1;i:86;i:0;}', NULL),
(463, '07160732', 26, 23, 'a:2:{i:90;i:1;i:89;i:0;}', NULL),
(464, '07160732', 26, 24, 'a:3:{i:94;i:0;i:96;i:1;i:95;i:0;}', NULL),
(465, '07160732', 26, 25, 'a:2:{i:100;i:0;i:97;i:1;}', NULL),
(466, '07160732', 26, 26, 'a:2:{i:103;i:1;i:102;i:0;}', NULL),
(467, '07160732', 26, 27, 'a:2:{i:105;i:1;i:106;i:0;}', NULL),
(468, '07160732', 26, 28, 'a:2:{i:112;i:1;i:111;i:0;}', NULL),
(469, '07160732', 26, 29, 'a:2:{i:115;i:1;i:114;i:0;}', NULL),
(470, '07160732', 26, 30, 'a:2:{i:117;i:1;i:118;i:0;}', NULL),
(471, '07160732', 26, 31, 'a:2:{i:123;i:1;i:122;i:0;}', NULL),
(472, '07160732', 26, 32, 'a:2:{i:125;i:1;i:126;i:0;}', NULL),
(473, '07160732', 26, 33, 'a:2:{i:130;i:1;i:129;i:0;}', NULL),
(474, '07160732', 26, 34, 'a:2:{i:133;i:1;i:134;i:0;}', NULL),
(475, '07160732', 26, 35, 'a:2:{i:140;i:1;i:139;i:0;}', NULL),
(476, '07160732', 26, 36, 'a:2:{i:143;i:1;i:142;i:0;}', NULL),
(477, '07160732', 26, 37, 'a:2:{i:148;i:1;i:147;i:0;}', NULL),
(478, '07160732', 26, 38, 'a:2:{i:149;i:1;i:150;i:0;}', NULL),
(479, '07160732', 26, 39, 'a:2:{i:154;i:0;i:156;i:1;}', NULL),
(480, '07160723', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(481, '07160723', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(482, '07160723', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(483, '07160723', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(484, '07160723', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(485, '07160723', 26, 19, 'a:1:{i:75;i:1;}', NULL),
(486, '07160723', 26, 20, 'a:1:{i:78;i:1;}', NULL),
(487, '07160723', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(488, '07160723', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(489, '07160723', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(490, '07160723', 26, 24, 'a:1:{i:94;i:1;}', NULL),
(491, '07160723', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(492, '07160723', 26, 26, 'a:1:{i:101;i:1;}', NULL),
(493, '07160723', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(494, '07160723', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(495, '07160723', 26, 29, 'a:1:{i:113;i:1;}', NULL),
(496, '07160723', 26, 30, 'a:1:{i:120;i:1;}', NULL),
(497, '07160723', 26, 31, 'a:1:{i:124;i:1;}', NULL),
(498, '07160723', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(499, '07160723', 26, 33, 'a:1:{i:132;i:1;}', NULL),
(500, '07160723', 26, 34, 'a:1:{i:133;i:1;}', NULL),
(501, '07160723', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(502, '07160723', 26, 36, 'a:1:{i:143;i:1;}', NULL),
(503, '07160723', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(504, '07160723', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(505, '07160723', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(506, '07160705', 27, 40, 'a:2:{i:157;i:0;i:159;i:1;}', NULL),
(507, '07160705', 27, 41, 'a:2:{i:163;i:0;i:161;i:1;}', NULL),
(508, '07160705', 27, 42, 'a:2:{i:165;i:0;i:166;i:1;}', NULL),
(509, '07160705', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(510, '07160705', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(511, '07160705', 27, 45, 'a:1:{i:178;i:1;}', NULL),
(512, '07160705', 27, 46, 'a:2:{i:183;i:0;i:182;i:1;}', NULL),
(513, '07160705', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(514, '07160705', 27, 48, 'a:2:{i:189;i:1;i:190;i:0;}', NULL),
(515, '07160705', 27, 49, 'a:2:{i:193;i:0;i:194;i:1;}', NULL),
(516, '07160705', 27, 50, 'a:2:{i:197;i:0;i:198;i:1;}', NULL),
(517, '07160705', 27, 51, 'a:1:{i:201;i:1;}', NULL),
(518, '07160705', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(519, '07160705', 27, 53, 'a:4:{i:209;i:1;i:210;i:0;i:211;i:0;i:212;i:0;}', NULL),
(520, '07160705', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(521, '07160705', 27, 55, 'a:2:{i:219;i:0;i:217;i:1;}', NULL),
(522, '07160705', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(523, '07160705', 27, 57, 'a:2:{i:225;i:0;i:228;i:1;}', NULL),
(524, '07160705', 27, 58, 'a:2:{i:229;i:0;i:230;i:1;}', NULL),
(525, '07160705', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(526, '07160705', 27, 60, 'a:3:{i:237;i:0;i:239;i:0;i:240;i:1;}', NULL),
(527, '07160705', 27, 61, 'a:3:{i:243;i:0;i:242;i:0;i:244;i:1;}', NULL),
(528, '07160705', 27, 62, 'a:2:{i:248;i:0;i:246;i:1;}', NULL),
(529, '07160705', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(530, '07160705', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(531, '07160705', 27, 65, 'a:1:{i:259;i:1;}', NULL),
(532, '07160705', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(533, '07160705', 27, 67, 'a:2:{i:268;i:1;i:265;i:0;}', NULL),
(534, '07160705', 27, 68, 'a:1:{i:269;i:1;}', NULL),
(535, '07160705', 27, 69, 'a:1:{i:273;i:1;}', NULL),
(536, '07160705', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(537, '07160705', 27, 71, 'a:2:{i:282;i:0;i:281;i:1;}', NULL),
(538, '07160705', 27, 72, 'a:2:{i:285;i:0;i:288;i:1;}', NULL),
(539, '07160705', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(540, '07160704', 26, 14, 'a:2:{i:56;i:1;i:55;i:0;}', NULL),
(541, '07160704', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(542, '07160704', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(543, '07160704', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(544, '07160704', 26, 18, 'a:1:{i:69;i:1;}', NULL),
(545, '07160704', 26, 19, 'a:1:{i:73;i:1;}', NULL),
(546, '07160704', 26, 20, 'a:1:{i:78;i:1;}', NULL),
(547, '07160704', 26, 21, 'a:2:{i:83;i:1;i:82;i:0;}', NULL),
(548, '07160704', 26, 22, 'a:1:{i:85;i:1;}', NULL),
(549, '07160704', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(550, '07160704', 26, 24, 'a:1:{i:94;i:1;}', NULL),
(551, '07160704', 26, 25, 'a:1:{i:99;i:1;}', NULL),
(552, '07160704', 26, 26, 'a:1:{i:102;i:1;}', NULL),
(553, '07160704', 26, 27, 'a:2:{i:105;i:0;i:106;i:1;}', NULL),
(554, '07160704', 26, 28, '', NULL),
(555, '07160704', 26, 29, '', NULL),
(556, '07160704', 26, 30, '', NULL),
(557, '07160704', 26, 31, '', NULL),
(558, '07160704', 26, 32, '', NULL),
(559, '07160704', 26, 33, '', NULL),
(560, '07160704', 26, 34, '', NULL),
(561, '07160704', 26, 35, '', NULL),
(562, '07160704', 26, 36, '', NULL),
(563, '07160704', 26, 37, '', NULL),
(564, '07160704', 26, 38, '', NULL),
(565, '07160704', 26, 39, '', NULL),
(566, '07160728', 26, 14, 'a:2:{i:56;i:1;i:55;i:0;}', NULL),
(567, '07160728', 26, 15, 'a:2:{i:59;i:1;i:60;i:0;}', NULL),
(568, '07160728', 26, 16, 'a:2:{i:64;i:1;i:63;i:0;}', NULL),
(569, '07160728', 26, 17, 'a:3:{i:65;i:0;i:66;i:0;i:67;i:1;}', NULL),
(570, '07160728', 26, 18, 'a:2:{i:71;i:1;i:72;i:0;}', NULL),
(571, '07160728', 26, 19, 'a:2:{i:73;i:1;i:75;i:0;}', NULL),
(572, '07160728', 26, 20, 'a:2:{i:80;i:1;i:78;i:0;}', NULL),
(573, '07160728', 26, 21, 'a:2:{i:83;i:1;i:82;i:0;}', NULL),
(574, '07160728', 26, 22, 'a:2:{i:87;i:1;i:86;i:0;}', NULL),
(575, '07160728', 26, 23, 'a:2:{i:90;i:1;i:89;i:0;}', NULL),
(576, '07160728', 26, 24, 'a:3:{i:95;i:0;i:94;i:0;i:96;i:1;}', NULL),
(577, '07160728', 26, 25, 'a:3:{i:97;i:1;i:99;i:0;i:100;i:0;}', NULL),
(578, '07160728', 26, 26, 'a:2:{i:101;i:0;i:103;i:1;}', NULL),
(579, '07160728', 26, 27, 'a:2:{i:105;i:1;i:106;i:0;}', NULL),
(580, '07160728', 26, 28, 'a:2:{i:110;i:0;i:112;i:1;}', NULL),
(581, '07160728', 26, 29, 'a:3:{i:113;i:0;i:115;i:1;i:116;i:0;}', NULL),
(582, '07160728', 26, 30, 'a:4:{i:119;i:0;i:118;i:0;i:120;i:0;i:117;i:1;}', NULL),
(583, '07160728', 26, 31, 'a:2:{i:121;i:1;i:122;i:0;}', NULL),
(584, '07160728', 26, 32, 'a:2:{i:125;i:1;i:126;i:0;}', NULL),
(585, '07160728', 26, 33, 'a:2:{i:130;i:1;i:131;i:0;}', NULL),
(586, '07160728', 26, 34, 'a:2:{i:135;i:0;i:133;i:1;}', NULL),
(587, '07160728', 26, 35, 'a:2:{i:140;i:1;i:139;i:0;}', NULL),
(588, '07160728', 26, 36, 'a:2:{i:144;i:0;i:143;i:1;}', NULL),
(589, '07160728', 26, 37, 'a:3:{i:145;i:0;i:148;i:1;i:147;i:0;}', NULL),
(590, '07160728', 26, 38, 'a:2:{i:149;i:1;i:150;i:0;}', NULL),
(591, '07160728', 26, 39, 'a:3:{i:153;i:0;i:156;i:1;i:155;i:0;}', NULL),
(592, '07160714', 26, 14, 'a:2:{i:56;i:1;i:55;i:0;}', NULL),
(593, '07160714', 26, 15, 'a:2:{i:59;i:1;i:60;i:0;}', NULL),
(594, '07160714', 26, 16, 'a:2:{i:64;i:1;i:63;i:0;}', NULL),
(595, '07160714', 26, 17, 'a:2:{i:67;i:1;i:66;i:0;}', NULL),
(596, '07160714', 26, 18, 'a:2:{i:69;i:0;i:71;i:1;}', NULL),
(597, '07160714', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(598, '07160714', 26, 20, 'a:2:{i:77;i:0;i:80;i:1;}', NULL),
(599, '07160714', 26, 21, 'a:2:{i:83;i:1;i:82;i:0;}', NULL),
(600, '07160714', 26, 22, 'a:2:{i:87;i:1;i:88;i:0;}', NULL),
(601, '07160714', 26, 23, 'a:2:{i:90;i:1;i:91;i:0;}', NULL),
(602, '07160714', 26, 24, 'a:3:{i:93;i:0;i:95;i:0;i:96;i:1;}', NULL),
(603, '07160714', 26, 25, 'a:2:{i:97;i:1;i:98;i:0;}', NULL),
(604, '07160714', 26, 26, 'a:3:{i:101;i:0;i:104;i:0;i:103;i:1;}', NULL),
(605, '07160714', 26, 27, 'a:2:{i:105;i:1;i:106;i:0;}', NULL),
(606, '07160714', 26, 28, 'a:2:{i:112;i:1;i:111;i:0;}', NULL),
(607, '07160714', 26, 29, 'a:2:{i:115;i:1;i:116;i:0;}', NULL),
(608, '07160714', 26, 30, 'a:2:{i:118;i:0;i:117;i:1;}', NULL),
(609, '07160714', 26, 31, 'a:2:{i:121;i:1;i:123;i:0;}', NULL),
(610, '07160714', 26, 32, 'a:2:{i:128;i:0;i:125;i:1;}', NULL),
(611, '07160714', 26, 33, 'a:2:{i:129;i:0;i:130;i:1;}', NULL),
(612, '07160714', 26, 34, 'a:2:{i:133;i:1;i:134;i:0;}', NULL),
(613, '07160714', 26, 35, 'a:2:{i:140;i:1;i:139;i:0;}', NULL),
(614, '07160714', 26, 36, 'a:2:{i:142;i:0;i:143;i:1;}', NULL),
(615, '07160714', 26, 37, 'a:2:{i:145;i:0;i:148;i:1;}', NULL),
(616, '07160714', 26, 38, 'a:2:{i:149;i:1;i:150;i:0;}', NULL),
(617, '07160714', 26, 39, 'a:2:{i:154;i:0;i:156;i:1;}', NULL),
(618, '07160722', 26, 14, 'a:2:{i:56;i:1;i:55;i:0;}', NULL),
(619, '07160722', 26, 15, 'a:2:{i:59;i:1;i:58;i:0;}', NULL),
(620, '07160722', 26, 16, 'a:2:{i:64;i:1;i:61;i:0;}', NULL),
(621, '07160722', 26, 17, 'a:2:{i:67;i:1;i:65;i:0;}', NULL),
(622, '07160722', 26, 18, 'a:2:{i:71;i:1;i:69;i:0;}', NULL),
(623, '07160722', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(624, '07160722', 26, 20, 'a:3:{i:80;i:1;i:77;i:0;i:78;i:0;}', NULL),
(625, '07160722', 26, 21, 'a:2:{i:83;i:1;i:81;i:0;}', NULL),
(626, '07160722', 26, 22, 'a:2:{i:87;i:1;i:88;i:0;}', NULL),
(627, '07160722', 26, 23, 'a:2:{i:90;i:1;i:91;i:0;}', NULL),
(628, '07160722', 26, 24, 'a:3:{i:93;i:0;i:94;i:0;i:96;i:1;}', NULL),
(629, '07160722', 26, 25, 'a:2:{i:97;i:1;i:98;i:0;}', NULL),
(630, '07160722', 26, 26, 'a:2:{i:103;i:1;i:102;i:0;}', NULL),
(631, '07160722', 26, 27, 'a:2:{i:105;i:1;i:106;i:0;}', NULL),
(632, '07160722', 26, 28, 'a:3:{i:110;i:0;i:111;i:0;i:112;i:1;}', NULL),
(633, '07160722', 26, 29, 'a:2:{i:115;i:1;i:113;i:0;}', NULL),
(634, '07160722', 26, 30, 'a:2:{i:118;i:0;i:117;i:1;}', NULL),
(635, '07160722', 26, 31, 'a:2:{i:123;i:0;i:121;i:1;}', NULL),
(636, '07160722', 26, 32, 'a:3:{i:127;i:0;i:126;i:0;i:125;i:1;}', NULL),
(637, '07160722', 26, 33, 'a:2:{i:130;i:1;i:131;i:0;}', NULL),
(638, '07160722', 26, 34, 'a:2:{i:133;i:1;i:135;i:0;}', NULL),
(639, '07160722', 26, 35, 'a:4:{i:140;i:1;i:137;i:0;i:138;i:0;i:139;i:0;}', NULL),
(640, '07160722', 26, 36, 'a:2:{i:143;i:1;i:141;i:0;}', NULL),
(641, '07160722', 26, 37, 'a:2:{i:148;i:1;i:147;i:0;}', NULL),
(642, '07160722', 26, 38, 'a:2:{i:149;i:1;i:150;i:0;}', NULL),
(643, '07160722', 26, 39, 'a:2:{i:156;i:1;i:155;i:0;}', NULL),
(644, '07160727', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(645, '07160727', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(646, '07160727', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(647, '07160727', 26, 17, 'a:2:{i:66;i:0;i:67;i:1;}', NULL),
(648, '07160727', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(649, '07160727', 26, 19, 'a:1:{i:73;i:1;}', NULL),
(650, '07160727', 26, 20, 'a:2:{i:78;i:0;i:80;i:1;}', NULL),
(651, '07160727', 26, 21, 'a:2:{i:83;i:1;i:82;i:0;}', NULL),
(652, '07160727', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(653, '07160727', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(654, '07160727', 26, 24, 'a:3:{i:93;i:0;i:94;i:0;i:96;i:1;}', NULL),
(655, '07160727', 26, 25, 'a:2:{i:100;i:0;i:97;i:1;}', NULL),
(656, '07160727', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(657, '07160727', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(658, '07160727', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(659, '07160727', 26, 29, 'a:2:{i:113;i:0;i:115;i:1;}', NULL),
(660, '07160727', 26, 30, 'a:4:{i:118;i:0;i:117;i:0;i:119;i:1;i:120;i:0;}', NULL),
(661, '07160727', 26, 31, 'a:1:{i:121;i:1;}', NULL),
(662, '07160727', 26, 32, 'a:3:{i:127;i:0;i:126;i:0;i:125;i:1;}', NULL),
(663, '07160727', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(664, '07160727', 26, 34, 'a:1:{i:133;i:1;}', NULL),
(665, '07160727', 26, 35, 'a:3:{i:137;i:0;i:138;i:0;i:140;i:1;}', NULL),
(666, '07160727', 26, 36, 'a:1:{i:143;i:1;}', NULL),
(667, '07160727', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(668, '07160727', 26, 38, 'a:2:{i:152;i:0;i:149;i:1;}', NULL),
(669, '07160727', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(670, '07160742', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(671, '07160742', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(672, '07160742', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(673, '07160742', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(674, '07160742', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(675, '07160742', 26, 19, 'a:1:{i:75;i:1;}', NULL),
(676, '07160742', 26, 20, 'a:1:{i:80;i:1;}', NULL),
(677, '07160742', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(678, '07160742', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(679, '07160742', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(680, '07160742', 26, 24, 'a:1:{i:94;i:1;}', NULL),
(681, '07160742', 26, 25, 'a:3:{i:97;i:0;i:98;i:0;i:100;i:1;}', NULL),
(682, '07160742', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(683, '07160742', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(684, '07160742', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(685, '07160742', 26, 29, 'a:1:{i:116;i:1;}', NULL),
(686, '07160742', 26, 30, 'a:1:{i:117;i:1;}', NULL),
(687, '07160742', 26, 31, 'a:1:{i:123;i:1;}', NULL),
(688, '07160742', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(689, '07160742', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(690, '07160742', 26, 34, 'a:1:{i:133;i:1;}', NULL),
(691, '07160742', 26, 35, 'a:4:{i:137;i:0;i:138;i:0;i:139;i:0;i:140;i:1;}', NULL),
(692, '07160742', 26, 36, 'a:1:{i:141;i:1;}', NULL),
(693, '07160742', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(694, '07160742', 26, 38, 'a:1:{i:151;i:1;}', NULL),
(695, '07160742', 26, 39, 'a:1:{i:153;i:1;}', NULL),
(696, '07160735', 26, 14, 'a:2:{i:56;i:1;i:54;i:0;}', NULL),
(697, '07160735', 26, 15, 'a:2:{i:60;i:0;i:59;i:1;}', NULL),
(698, '07160735', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(699, '07160735', 26, 17, 'a:3:{i:66;i:0;i:65;i:0;i:67;i:1;}', NULL),
(700, '07160735', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(701, '07160735', 26, 19, 'a:3:{i:73;i:1;i:74;i:0;i:75;i:0;}', NULL),
(702, '07160735', 26, 20, 'a:4:{i:78;i:0;i:77;i:0;i:79;i:0;i:80;i:1;}', NULL),
(703, '07160735', 26, 21, 'a:4:{i:81;i:0;i:82;i:0;i:84;i:0;i:83;i:1;}', NULL),
(704, '07160735', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(705, '07160735', 26, 23, 'a:2:{i:89;i:0;i:90;i:1;}', NULL),
(706, '07160735', 26, 24, 'a:1:{i:94;i:1;}', NULL),
(707, '07160735', 26, 25, 'a:2:{i:97;i:1;i:100;i:0;}', NULL),
(708, '07160735', 26, 26, 'a:2:{i:104;i:0;i:103;i:1;}', NULL),
(709, '07160735', 26, 27, 'a:2:{i:106;i:0;i:105;i:1;}', NULL),
(710, '07160735', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(711, '07160735', 26, 29, 'a:2:{i:116;i:0;i:115;i:1;}', NULL),
(712, '07160735', 26, 30, 'a:4:{i:118;i:0;i:117;i:0;i:119;i:0;i:120;i:1;}', NULL),
(713, '07160735', 26, 31, 'a:1:{i:124;i:1;}', NULL),
(714, '07160735', 26, 32, 'a:2:{i:127;i:0;i:125;i:1;}', NULL),
(715, '07160735', 26, 33, 'a:3:{i:130;i:0;i:131;i:0;i:132;i:1;}', NULL),
(716, '07160735', 26, 34, 'a:4:{i:135;i:0;i:133;i:1;i:134;i:0;i:136;i:0;}', NULL),
(717, '07160735', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(718, '07160735', 26, 36, 'a:1:{i:142;i:1;}', NULL),
(719, '07160735', 26, 37, 'a:2:{i:146;i:0;i:148;i:1;}', NULL),
(720, '07160735', 26, 38, 'a:1:{i:151;i:1;}', NULL),
(721, '07160735', 26, 39, 'a:2:{i:153;i:0;i:156;i:1;}', NULL),
(722, '07160705', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(723, '07160705', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(724, '07160705', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(725, '07160705', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(726, '07160705', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(727, '07160705', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(728, '07160705', 28, 72, 'a:1:{i:288;i:1;}', NULL),
(729, '07160705', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(730, '07160705', 28, 74, 'a:1:{i:296;i:1;}', NULL),
(731, '07160705', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(732, '07160705', 28, 76, 'a:1:{i:303;i:1;}', NULL),
(733, '07160705', 28, 77, 'a:1:{i:307;i:1;}', NULL),
(734, '07160705', 28, 78, 'a:2:{i:310;i:0;i:311;i:1;}', NULL),
(735, '07160705', 28, 79, 'a:1:{i:313;i:1;}', NULL),
(736, '07160705', 28, 80, 'a:1:{i:318;i:1;}', NULL),
(737, '07160705', 28, 81, 'a:1:{i:323;i:1;}', NULL),
(738, '07160705', 28, 82, 'a:1:{i:327;i:1;}', NULL),
(739, '07160705', 28, 84, 'a:1:{i:336;i:1;}', NULL),
(740, '07160705', 28, 85, 'a:1:{i:340;i:1;}', NULL),
(741, '07160705', 28, 86, 'a:2:{i:342;i:0;i:344;i:1;}', NULL),
(742, '07160705', 28, 87, 'a:1:{i:345;i:1;}', NULL),
(743, '07160705', 28, 88, 'a:1:{i:350;i:1;}', NULL),
(744, '07160705', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(745, '07160705', 28, 90, 'a:1:{i:359;i:1;}', NULL),
(746, '07160705', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(747, '07160705', 28, 92, 'a:1:{i:366;i:1;}', NULL),
(748, '07160705', 28, 93, 'a:2:{i:372;i:0;i:369;i:1;}', NULL),
(749, '07160705', 28, 94, 'a:1:{i:374;i:1;}', NULL),
(750, '07160705', 28, 95, 'a:1:{i:378;i:1;}', NULL),
(751, '07160705', 28, 96, 'a:1:{i:381;i:1;}', NULL),
(752, '07160705', 28, 97, 'a:1:{i:387;i:1;}', NULL),
(753, '07160705', 28, 98, 'a:1:{i:392;i:1;}', NULL),
(754, '07160705', 28, 99, 'a:1:{i:396;i:1;}', NULL),
(755, '07160705', 28, 100, 'a:1:{i:400;i:1;}', NULL),
(756, '07160705', 28, 101, 'a:1:{i:402;i:1;}', NULL),
(757, '07160705', 28, 102, 'a:1:{i:405;i:1;}', NULL),
(758, '07160705', 28, 103, 'a:1:{i:409;i:1;}', NULL),
(759, '07160705', 28, 104, 'a:1:{i:414;i:1;}', NULL),
(760, '07160728', 27, 40, 'a:4:{i:157;i:0;i:160;i:0;i:159;i:1;i:158;i:0;}', NULL),
(761, '07160728', 27, 41, 'a:4:{i:164;i:0;i:163;i:0;i:162;i:0;i:161;i:1;}', NULL),
(762, '07160728', 27, 42, 'a:2:{i:167;i:0;i:166;i:1;}', NULL),
(763, '07160728', 27, 43, 'a:3:{i:171;i:1;i:172;i:0;i:170;i:0;}', NULL),
(764, '07160728', 27, 44, 'a:2:{i:173;i:1;i:174;i:0;}', NULL),
(765, '07160728', 27, 45, 'a:3:{i:179;i:0;i:178;i:1;i:177;i:0;}', NULL),
(766, '07160728', 27, 46, 'a:3:{i:182;i:1;i:183;i:0;i:181;i:0;}', NULL),
(767, '07160728', 27, 47, 'a:2:{i:188;i:1;i:187;i:0;}', NULL),
(768, '07160728', 27, 48, 'a:2:{i:189;i:1;i:190;i:0;}', NULL),
(769, '07160728', 27, 49, 'a:4:{i:196;i:0;i:195;i:0;i:194;i:1;i:193;i:0;}', NULL),
(770, '07160728', 27, 50, 'a:2:{i:199;i:0;i:198;i:1;}', NULL),
(771, '07160728', 27, 51, 'a:3:{i:203;i:0;i:204;i:0;i:201;i:1;}', NULL),
(772, '07160728', 27, 52, 'a:3:{i:206;i:1;i:207;i:0;i:205;i:0;}', NULL),
(773, '07160728', 27, 53, 'a:2:{i:209;i:1;i:210;i:0;}', NULL),
(774, '07160728', 27, 54, 'a:2:{i:216;i:1;i:215;i:0;}', NULL),
(775, '07160728', 27, 55, 'a:2:{i:217;i:1;i:218;i:0;}', NULL),
(776, '07160728', 27, 56, 'a:3:{i:224;i:0;i:223;i:1;i:222;i:0;}', NULL),
(777, '07160728', 27, 57, 'a:2:{i:228;i:1;i:227;i:0;}', NULL),
(778, '07160728', 27, 58, 'a:4:{i:229;i:0;i:232;i:0;i:231;i:0;i:230;i:1;}', NULL),
(779, '07160728', 27, 59, 'a:3:{i:234;i:0;i:235;i:0;i:233;i:1;}', NULL),
(780, '07160728', 27, 60, 'a:2:{i:240;i:1;i:239;i:0;}', NULL),
(781, '07160728', 27, 61, 'a:3:{i:241;i:0;i:244;i:1;i:243;i:0;}', NULL),
(782, '07160728', 27, 62, 'a:2:{i:246;i:1;i:247;i:0;}', NULL),
(783, '07160728', 27, 63, 'a:2:{i:251;i:1;i:252;i:0;}', NULL),
(784, '07160728', 27, 64, 'a:2:{i:256;i:1;i:255;i:0;}', NULL),
(785, '07160728', 27, 65, 'a:3:{i:260;i:0;i:259;i:1;i:258;i:0;}', NULL),
(786, '07160728', 27, 66, 'a:3:{i:264;i:0;i:263;i:1;i:262;i:0;}', NULL),
(787, '07160728', 27, 67, 'a:4:{i:268;i:1;i:267;i:0;i:266;i:0;i:265;i:0;}', NULL),
(788, '07160728', 27, 68, 'a:3:{i:271;i:0;i:269;i:1;i:270;i:0;}', NULL),
(789, '07160728', 27, 69, 'a:3:{i:276;i:0;i:273;i:1;i:274;i:0;}', NULL),
(790, '07160728', 27, 70, 'a:4:{i:277;i:0;i:279;i:1;i:278;i:0;i:280;i:0;}', NULL),
(791, '07160728', 27, 71, 'a:2:{i:282;i:0;i:281;i:1;}', NULL),
(792, '07160728', 27, 72, 'a:4:{i:286;i:0;i:288;i:1;i:285;i:0;i:287;i:0;}', NULL),
(793, '07160728', 27, 73, 'a:3:{i:291;i:1;i:292;i:0;i:290;i:0;}', NULL),
(794, '07160705', 33, 230, '', NULL),
(795, '07160705', 33, 231, '', NULL),
(796, '07160705', 33, 232, '', NULL),
(797, '07160705', 33, 233, '', NULL),
(798, '07160705', 33, 234, '', NULL),
(799, '07160705', 33, 235, '', NULL),
(800, '07160705', 33, 236, '', NULL),
(801, '07160705', 33, 237, '', NULL),
(802, '07160705', 33, 238, '', NULL),
(803, '07160705', 33, 239, '', NULL),
(804, '07160705', 33, 240, '', NULL),
(805, '07160705', 33, 241, '', NULL),
(806, '07160705', 33, 242, '', NULL),
(807, '07160705', 33, 243, '', NULL),
(808, '07160705', 33, 244, '', NULL),
(809, '07160705', 33, 245, '', NULL),
(810, '07160705', 33, 246, '', NULL),
(811, '07160705', 33, 247, '', NULL),
(812, '07160705', 33, 248, '', NULL),
(813, '07160705', 33, 249, '', NULL),
(814, '07160705', 33, 250, '', NULL),
(815, '07160705', 33, 251, '', NULL),
(816, '07160705', 33, 252, '', NULL),
(817, '07160705', 33, 253, '', NULL),
(818, '07160705', 33, 254, '', NULL),
(819, '07160705', 33, 255, '', NULL),
(820, '07160705', 33, 256, '', NULL),
(821, '07160705', 33, 257, '', NULL),
(822, '07160705', 33, 258, '', NULL),
(823, '07160705', 33, 259, '', NULL),
(824, '07160705', 33, 260, '', NULL),
(825, '07160705', 33, 261, '', NULL),
(826, '07160738', 26, 14, 'a:2:{i:55;i:0;i:56;i:1;}', NULL),
(827, '07160738', 26, 15, 'a:2:{i:58;i:0;i:59;i:1;}', NULL),
(828, '07160738', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(829, '07160738', 26, 17, 'a:2:{i:65;i:0;i:67;i:1;}', NULL),
(830, '07160738', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(831, '07160738', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(832, '07160738', 26, 20, 'a:1:{i:80;i:1;}', NULL),
(833, '07160738', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(834, '07160738', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(835, '07160738', 26, 23, 'a:2:{i:89;i:0;i:90;i:1;}', NULL),
(836, '07160738', 26, 24, 'a:3:{i:93;i:0;i:94;i:0;i:96;i:1;}', NULL),
(837, '07160738', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(838, '07160738', 26, 26, 'a:2:{i:104;i:0;i:103;i:1;}', NULL),
(839, '07160738', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(840, '07160738', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(841, '07160738', 26, 29, 'a:2:{i:114;i:0;i:115;i:1;}', NULL),
(842, '07160738', 26, 30, 'a:4:{i:118;i:0;i:120;i:0;i:119;i:0;i:117;i:1;}', NULL),
(843, '07160738', 26, 31, 'a:3:{i:124;i:0;i:122;i:0;i:121;i:1;}', NULL),
(844, '07160738', 26, 32, 'a:2:{i:126;i:0;i:125;i:1;}', NULL),
(845, '07160738', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(846, '07160738', 26, 34, 'a:2:{i:135;i:0;i:133;i:1;}', NULL),
(847, '07160738', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(848, '07160738', 26, 36, 'a:2:{i:141;i:0;i:143;i:1;}', NULL),
(849, '07160738', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(850, '07160738', 26, 38, 'a:2:{i:150;i:0;i:149;i:1;}', NULL),
(851, '07160738', 26, 39, 'a:4:{i:156;i:1;i:154;i:0;i:153;i:0;i:155;i:0;}', NULL),
(852, '07160746', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(853, '07160746', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(854, '07160746', 26, 16, 'a:2:{i:61;i:0;i:64;i:1;}', NULL),
(855, '07160746', 26, 17, 'a:2:{i:65;i:0;i:67;i:1;}', NULL),
(856, '07160746', 26, 18, 'a:2:{i:69;i:0;i:71;i:1;}', NULL),
(857, '07160746', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(858, '07160746', 26, 20, 'a:2:{i:78;i:0;i:80;i:1;}', NULL),
(859, '07160746', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(860, '07160746', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(861, '07160746', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(862, '07160746', 26, 24, 'a:2:{i:95;i:0;i:96;i:1;}', NULL),
(863, '07160746', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(864, '07160746', 26, 26, 'a:2:{i:101;i:0;i:103;i:1;}', NULL),
(865, '07160746', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(866, '07160746', 26, 28, 'a:2:{i:110;i:0;i:112;i:1;}', NULL),
(867, '07160746', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(868, '07160746', 26, 30, 'a:4:{i:119;i:0;i:117;i:1;i:120;i:0;i:118;i:0;}', NULL),
(869, '07160746', 26, 31, 'a:1:{i:121;i:1;}', NULL),
(870, '07160746', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(871, '07160746', 26, 33, 'a:2:{i:129;i:0;i:130;i:1;}', NULL),
(872, '07160746', 26, 34, 'a:2:{i:135;i:0;i:133;i:1;}', NULL),
(873, '07160746', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(874, '07160746', 26, 36, 'a:2:{i:141;i:0;i:143;i:1;}', NULL),
(875, '07160746', 26, 37, 'a:3:{i:147;i:0;i:146;i:0;i:148;i:1;}', NULL),
(876, '07160746', 26, 38, 'a:4:{i:149;i:1;i:150;i:0;i:151;i:0;i:152;i:0;}', NULL),
(877, '07160746', 26, 39, 'a:2:{i:153;i:0;i:156;i:1;}', NULL),
(878, '07160705', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(879, '07160705', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(880, '07160705', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(881, '07160705', 26, 17, 'a:2:{i:65;i:0;i:67;i:1;}', NULL),
(882, '07160705', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(883, '07160705', 26, 19, 'a:1:{i:73;i:1;}', NULL),
(884, '07160705', 26, 20, 'a:1:{i:80;i:1;}', NULL),
(885, '07160705', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(886, '07160705', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(887, '07160705', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(888, '07160705', 26, 24, 'a:1:{i:96;i:1;}', NULL),
(889, '07160705', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(890, '07160705', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(891, '07160705', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(892, '07160705', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(893, '07160705', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(894, '07160705', 26, 30, 'a:1:{i:117;i:1;}', NULL),
(895, '07160705', 26, 31, 'a:1:{i:121;i:1;}', NULL),
(896, '07160705', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(897, '07160705', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(898, '07160705', 26, 34, 'a:1:{i:133;i:1;}', NULL),
(899, '07160705', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(900, '07160705', 26, 36, 'a:2:{i:142;i:0;i:143;i:1;}', NULL),
(901, '07160705', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(902, '07160705', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(903, '07160705', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(904, '07160711', 26, 14, 'a:2:{i:56;i:1;i:55;i:0;}', NULL),
(905, '07160711', 26, 15, 'a:2:{i:59;i:1;i:58;i:0;}', NULL),
(906, '07160711', 26, 16, 'a:2:{i:64;i:1;i:63;i:0;}', NULL),
(907, '07160711', 26, 17, 'a:2:{i:67;i:1;i:66;i:0;}', NULL),
(908, '07160711', 26, 18, 'a:2:{i:71;i:1;i:70;i:0;}', NULL),
(909, '07160711', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(910, '07160711', 26, 20, 'a:3:{i:78;i:0;i:79;i:0;i:80;i:1;}', NULL),
(911, '07160711', 26, 21, 'a:2:{i:83;i:1;i:82;i:0;}', NULL),
(912, '07160711', 26, 22, 'a:2:{i:87;i:1;i:86;i:0;}', NULL),
(913, '07160711', 26, 23, 'a:2:{i:90;i:1;i:91;i:0;}', NULL),
(914, '07160711', 26, 24, 'a:2:{i:94;i:0;i:96;i:1;}', NULL),
(915, '07160711', 26, 25, 'a:2:{i:97;i:1;i:100;i:0;}', NULL),
(916, '07160711', 26, 26, 'a:2:{i:103;i:1;i:102;i:0;}', NULL),
(917, '07160711', 26, 27, 'a:3:{i:108;i:0;i:105;i:1;i:106;i:0;}', NULL),
(918, '07160711', 26, 28, 'a:2:{i:110;i:0;i:112;i:1;}', NULL),
(919, '07160711', 26, 29, 'a:2:{i:115;i:1;i:114;i:0;}', NULL),
(920, '07160711', 26, 30, 'a:4:{i:119;i:0;i:118;i:0;i:120;i:0;i:117;i:1;}', NULL),
(921, '07160711', 26, 31, 'a:2:{i:121;i:1;i:122;i:0;}', NULL),
(922, '07160711', 26, 32, 'a:3:{i:127;i:0;i:125;i:1;i:126;i:0;}', NULL),
(923, '07160711', 26, 33, 'a:2:{i:130;i:1;i:131;i:0;}', NULL),
(924, '07160711', 26, 34, 'a:2:{i:133;i:1;i:134;i:0;}', NULL),
(925, '07160711', 26, 35, 'a:2:{i:137;i:0;i:140;i:1;}', NULL),
(926, '07160711', 26, 36, 'a:3:{i:141;i:0;i:144;i:0;i:143;i:1;}', NULL),
(927, '07160711', 26, 37, 'a:2:{i:147;i:0;i:148;i:1;}', NULL),
(928, '07160711', 26, 38, 'a:2:{i:149;i:1;i:150;i:0;}', NULL),
(929, '07160711', 26, 39, 'a:2:{i:156;i:1;i:155;i:0;}', NULL),
(930, '07160707', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(931, '07160707', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(932, '07160707', 26, 16, 'a:3:{i:62;i:0;i:61;i:0;i:64;i:1;}', NULL),
(933, '07160707', 26, 17, 'a:3:{i:65;i:0;i:66;i:0;i:67;i:1;}', NULL),
(934, '07160707', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(935, '07160707', 26, 19, 'a:2:{i:74;i:0;i:73;i:1;}', NULL),
(936, '07160707', 26, 20, 'a:4:{i:77;i:0;i:78;i:0;i:79;i:0;i:80;i:1;}', NULL),
(937, '07160707', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(938, '07160707', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(939, '07160707', 26, 23, 'a:2:{i:91;i:0;i:90;i:1;}', NULL),
(940, '07160707', 26, 24, 'a:2:{i:96;i:1;i:95;i:0;}', NULL),
(941, '07160707', 26, 25, 'a:2:{i:97;i:1;i:98;i:0;}', NULL),
(942, '07160707', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(943, '07160707', 26, 27, 'a:2:{i:106;i:0;i:105;i:1;}', NULL),
(944, '07160707', 26, 28, 'a:4:{i:110;i:0;i:109;i:0;i:111;i:0;i:112;i:1;}', NULL),
(945, '07160707', 26, 29, 'a:2:{i:116;i:0;i:115;i:1;}', NULL),
(946, '07160707', 26, 30, 'a:2:{i:119;i:0;i:117;i:1;}', NULL),
(947, '07160707', 26, 31, 'a:2:{i:123;i:0;i:121;i:1;}', NULL),
(948, '07160707', 26, 32, 'a:3:{i:128;i:0;i:126;i:0;i:125;i:1;}', NULL),
(949, '07160707', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(950, '07160707', 26, 34, 'a:2:{i:135;i:0;i:133;i:1;}', NULL),
(951, '07160707', 26, 35, 'a:3:{i:137;i:0;i:138;i:0;i:140;i:1;}', NULL),
(952, '07160707', 26, 36, 'a:3:{i:141;i:0;i:142;i:0;i:143;i:1;}', NULL),
(953, '07160707', 26, 37, 'a:1:{i:148;i:1;}', NULL);
INSERT INTO `exercise_answer` (`id`, `studentid`, `paper_id`, `select_question_id`, `answer`, `memo`) VALUES
(954, '07160707', 26, 38, 'a:3:{i:150;i:0;i:152;i:0;i:149;i:1;}', NULL),
(955, '07160707', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(956, '07160706', 26, 14, 'a:2:{i:53;i:0;i:56;i:1;}', NULL),
(957, '07160706', 26, 15, 'a:2:{i:57;i:0;i:59;i:1;}', NULL),
(958, '07160706', 26, 16, 'a:4:{i:64;i:1;i:63;i:0;i:62;i:0;i:61;i:0;}', NULL),
(959, '07160706', 26, 17, 'a:2:{i:67;i:1;i:66;i:0;}', NULL),
(960, '07160706', 26, 18, 'a:2:{i:69;i:0;i:71;i:1;}', NULL),
(961, '07160706', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(962, '07160706', 26, 20, 'a:2:{i:80;i:1;i:78;i:0;}', NULL),
(963, '07160706', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(964, '07160706', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(965, '07160706', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(966, '07160706', 26, 24, 'a:2:{i:95;i:0;i:96;i:1;}', NULL),
(967, '07160706', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(968, '07160706', 26, 26, 'a:3:{i:103;i:1;i:102;i:0;i:101;i:0;}', NULL),
(969, '07160706', 26, 27, 'a:4:{i:105;i:1;i:106;i:0;i:107;i:0;i:108;i:0;}', NULL),
(970, '07160706', 26, 28, 'a:2:{i:109;i:0;i:112;i:1;}', NULL),
(971, '07160706', 26, 29, 'a:3:{i:113;i:0;i:114;i:0;i:115;i:1;}', NULL),
(972, '07160706', 26, 30, 'a:4:{i:120;i:0;i:118;i:0;i:119;i:0;i:117;i:1;}', NULL),
(973, '07160706', 26, 31, 'a:2:{i:123;i:0;i:121;i:1;}', NULL),
(974, '07160706', 26, 32, 'a:4:{i:126;i:0;i:127;i:0;i:125;i:1;i:128;i:0;}', NULL),
(975, '07160706', 26, 33, 'a:3:{i:130;i:1;i:129;i:0;i:132;i:0;}', NULL),
(976, '07160706', 26, 34, 'a:3:{i:133;i:1;i:136;i:0;i:135;i:0;}', NULL),
(977, '07160706', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(978, '07160706', 26, 36, 'a:2:{i:143;i:1;i:142;i:0;}', NULL),
(979, '07160706', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(980, '07160706', 26, 38, 'a:2:{i:149;i:1;i:152;i:0;}', NULL),
(981, '07160706', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(982, '07160703', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(983, '07160703', 26, 15, 'a:1:{i:57;i:1;}', NULL),
(984, '07160703', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(985, '07160703', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(986, '07160703', 26, 18, 'a:1:{i:69;i:1;}', NULL),
(987, '07160703', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(988, '07160703', 26, 20, 'a:1:{i:80;i:1;}', NULL),
(989, '07160703', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(990, '07160703', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(991, '07160703', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(992, '07160703', 26, 24, 'a:2:{i:94;i:0;i:96;i:1;}', NULL),
(993, '07160703', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(994, '07160703', 26, 26, 'a:2:{i:103;i:0;i:101;i:1;}', NULL),
(995, '07160703', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(996, '07160703', 26, 28, 'a:2:{i:109;i:0;i:110;i:1;}', NULL),
(997, '07160703', 26, 29, 'a:1:{i:113;i:1;}', NULL),
(998, '07160703', 26, 30, 'a:1:{i:117;i:1;}', NULL),
(999, '07160703', 26, 31, 'a:2:{i:121;i:0;i:123;i:1;}', NULL),
(1000, '07160703', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(1001, '07160703', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(1002, '07160703', 26, 34, 'a:1:{i:134;i:1;}', NULL),
(1003, '07160703', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(1004, '07160703', 26, 36, 'a:1:{i:142;i:1;}', NULL),
(1005, '07160703', 26, 37, 'a:1:{i:146;i:1;}', NULL),
(1006, '07160703', 26, 38, 'a:1:{i:151;i:1;}', NULL),
(1007, '07160703', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(1008, '07160715', 32, 200, 'a:1:{i:797;i:1;}', NULL),
(1009, '07160715', 32, 201, 'a:2:{i:800;i:0;i:798;i:1;}', NULL),
(1010, '07160715', 32, 202, 'a:1:{i:802;i:1;}', NULL),
(1011, '07160715', 32, 203, 'a:1:{i:809;i:1;}', NULL),
(1012, '07160715', 32, 204, 'a:1:{i:810;i:1;}', NULL),
(1013, '07160715', 32, 205, 'a:1:{i:817;i:1;}', NULL),
(1014, '07160715', 32, 206, 'a:2:{i:818;i:0;i:820;i:1;}', NULL),
(1015, '07160715', 32, 207, 'a:1:{i:822;i:1;}', NULL),
(1016, '07160715', 32, 208, 'a:1:{i:827;i:1;}', NULL),
(1017, '07160715', 32, 209, 'a:1:{i:830;i:1;}', NULL),
(1018, '07160715', 32, 210, 'a:1:{i:834;i:1;}', NULL),
(1019, '07160715', 32, 211, 'a:1:{i:840;i:1;}', NULL),
(1020, '07160715', 32, 212, 'a:1:{i:844;i:1;}', NULL),
(1021, '07160715', 32, 213, 'a:1:{i:846;i:1;}', NULL),
(1022, '07160715', 32, 214, 'a:1:{i:853;i:1;}', NULL),
(1023, '07160715', 32, 215, 'a:1:{i:855;i:1;}', NULL),
(1024, '07160715', 32, 216, 'a:1:{i:859;i:1;}', NULL),
(1025, '07160715', 32, 217, 'a:2:{i:865;i:0;i:863;i:1;}', NULL),
(1026, '07160715', 32, 218, 'a:1:{i:866;i:1;}', NULL),
(1027, '07160715', 32, 219, 'a:1:{i:873;i:1;}', NULL),
(1028, '07160715', 32, 220, 'a:2:{i:876;i:0;i:877;i:1;}', NULL),
(1029, '07160715', 32, 221, 'a:1:{i:881;i:1;}', NULL),
(1030, '07160715', 32, 222, 'a:1:{i:882;i:1;}', NULL),
(1031, '07160715', 32, 223, 'a:2:{i:886;i:0;i:887;i:1;}', NULL),
(1032, '07160715', 32, 224, 'a:1:{i:892;i:1;}', NULL),
(1033, '07160715', 32, 225, 'a:1:{i:896;i:1;}', NULL),
(1034, '07160715', 32, 226, 'a:1:{i:899;i:1;}', NULL),
(1035, '07160715', 32, 227, 'a:1:{i:903;i:1;}', NULL),
(1036, '07160715', 32, 228, 'a:1:{i:906;i:1;}', NULL),
(1037, '07160715', 32, 229, 'a:1:{i:910;i:1;}', NULL),
(1038, '07160743', 32, 200, 'a:1:{i:797;i:1;}', NULL),
(1039, '07160743', 32, 201, 'a:1:{i:798;i:1;}', NULL),
(1040, '07160743', 32, 202, 'a:1:{i:802;i:1;}', NULL),
(1041, '07160743', 32, 203, 'a:2:{i:807;i:0;i:809;i:1;}', NULL),
(1042, '07160743', 32, 204, 'a:2:{i:813;i:0;i:812;i:1;}', NULL),
(1043, '07160743', 32, 205, 'a:2:{i:815;i:0;i:814;i:1;}', NULL),
(1044, '07160743', 32, 206, 'a:1:{i:820;i:1;}', NULL),
(1045, '07160743', 32, 207, 'a:2:{i:825;i:0;i:823;i:1;}', NULL),
(1046, '07160743', 32, 208, 'a:1:{i:826;i:1;}', NULL),
(1047, '07160743', 32, 209, 'a:2:{i:833;i:0;i:831;i:1;}', NULL),
(1048, '07160743', 32, 210, 'a:2:{i:836;i:0;i:835;i:1;}', NULL),
(1049, '07160743', 32, 211, 'a:2:{i:838;i:0;i:840;i:1;}', NULL),
(1050, '07160743', 32, 212, 'a:2:{i:843;i:0;i:844;i:1;}', NULL),
(1051, '07160743', 32, 213, 'a:1:{i:846;i:1;}', NULL),
(1052, '07160743', 32, 214, 'a:2:{i:851;i:0;i:853;i:1;}', NULL),
(1053, '07160743', 32, 215, 'a:1:{i:854;i:1;}', NULL),
(1054, '07160743', 32, 216, 'a:1:{i:861;i:1;}', NULL),
(1055, '07160743', 32, 217, 'a:2:{i:865;i:1;i:862;i:0;}', NULL),
(1056, '07160743', 32, 218, 'a:1:{i:866;i:1;}', NULL),
(1057, '07160743', 32, 219, 'a:1:{i:871;i:1;}', NULL),
(1058, '07160743', 32, 220, 'a:1:{i:877;i:1;}', NULL),
(1059, '07160743', 32, 221, 'a:1:{i:881;i:1;}', NULL),
(1060, '07160743', 32, 222, 'a:1:{i:883;i:1;}', NULL),
(1061, '07160743', 32, 223, 'a:3:{i:888;i:0;i:889;i:0;i:887;i:1;}', NULL),
(1062, '07160743', 32, 224, 'a:1:{i:891;i:1;}', NULL),
(1063, '07160743', 32, 225, 'a:1:{i:894;i:1;}', NULL),
(1064, '07160743', 32, 226, 'a:2:{i:901;i:0;i:898;i:1;}', NULL),
(1065, '07160743', 32, 227, 'a:2:{i:903;i:0;i:904;i:1;}', NULL),
(1066, '07160743', 32, 228, 'a:2:{i:906;i:0;i:907;i:1;}', NULL),
(1067, '07160743', 32, 229, 'a:1:{i:910;i:1;}', NULL),
(1068, '07160729', 26, 14, 'a:2:{i:56;i:1;i:55;i:0;}', NULL),
(1069, '07160729', 26, 15, 'a:3:{i:59;i:1;i:58;i:0;i:57;i:0;}', NULL),
(1070, '07160729', 26, 16, 'a:3:{i:64;i:1;i:62;i:0;i:61;i:0;}', NULL),
(1071, '07160729', 26, 17, 'a:2:{i:67;i:1;i:66;i:0;}', NULL),
(1072, '07160729', 26, 18, 'a:3:{i:71;i:1;i:72;i:0;i:70;i:0;}', NULL),
(1073, '07160729', 26, 19, 'a:3:{i:73;i:1;i:76;i:0;i:74;i:0;}', NULL),
(1074, '07160729', 26, 20, 'a:3:{i:80;i:1;i:77;i:0;i:78;i:0;}', NULL),
(1075, '07160729', 26, 21, 'a:3:{i:83;i:1;i:81;i:0;i:84;i:0;}', NULL),
(1076, '07160729', 26, 22, 'a:3:{i:87;i:1;i:86;i:0;i:85;i:0;}', NULL),
(1077, '07160729', 26, 23, 'a:2:{i:90;i:1;i:91;i:0;}', NULL),
(1078, '07160729', 26, 24, 'a:3:{i:95;i:0;i:96;i:1;i:93;i:0;}', NULL),
(1079, '07160729', 26, 25, 'a:2:{i:97;i:1;i:98;i:0;}', NULL),
(1080, '07160729', 26, 26, 'a:2:{i:103;i:1;i:104;i:0;}', NULL),
(1081, '07160729', 26, 27, 'a:3:{i:105;i:1;i:106;i:0;i:107;i:0;}', NULL),
(1082, '07160729', 26, 28, 'a:2:{i:112;i:1;i:109;i:0;}', NULL),
(1083, '07160729', 26, 29, 'a:3:{i:113;i:0;i:115;i:1;i:114;i:0;}', NULL),
(1084, '07160729', 26, 30, 'a:3:{i:117;i:1;i:118;i:0;i:119;i:0;}', NULL),
(1085, '07160729', 26, 31, 'a:2:{i:121;i:1;i:122;i:0;}', NULL),
(1086, '07160729', 26, 32, 'a:3:{i:125;i:1;i:128;i:0;i:126;i:0;}', NULL),
(1087, '07160729', 26, 33, 'a:3:{i:130;i:1;i:129;i:0;i:131;i:0;}', NULL),
(1088, '07160729', 26, 34, 'a:3:{i:133;i:1;i:135;i:0;i:134;i:0;}', NULL),
(1089, '07160729', 26, 35, 'a:3:{i:140;i:1;i:139;i:0;i:137;i:0;}', NULL),
(1090, '07160729', 26, 36, 'a:2:{i:142;i:0;i:143;i:1;}', NULL),
(1091, '07160729', 26, 37, 'a:3:{i:148;i:1;i:147;i:0;i:145;i:0;}', NULL),
(1092, '07160729', 26, 38, 'a:3:{i:151;i:0;i:149;i:1;i:150;i:0;}', NULL),
(1093, '07160729', 26, 39, 'a:2:{i:156;i:1;i:155;i:0;}', NULL),
(1094, '07160737', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(1095, '07160737', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(1096, '07160737', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(1097, '07160737', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(1098, '07160737', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(1099, '07160737', 26, 19, 'a:1:{i:73;i:1;}', NULL),
(1100, '07160737', 26, 20, 'a:1:{i:78;i:1;}', NULL),
(1101, '07160737', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(1102, '07160737', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(1103, '07160737', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(1104, '07160737', 26, 24, 'a:1:{i:95;i:1;}', NULL),
(1105, '07160737', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(1106, '07160737', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(1107, '07160737', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(1108, '07160737', 26, 28, 'a:1:{i:111;i:1;}', NULL),
(1109, '07160737', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(1110, '07160737', 26, 30, 'a:2:{i:117;i:1;i:119;i:0;}', NULL),
(1111, '07160737', 26, 31, 'a:1:{i:122;i:1;}', NULL),
(1112, '07160737', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(1113, '07160737', 26, 33, 'a:2:{i:129;i:0;i:130;i:1;}', NULL),
(1114, '07160737', 26, 34, 'a:1:{i:134;i:1;}', NULL),
(1115, '07160737', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(1116, '07160737', 26, 36, 'a:1:{i:143;i:1;}', NULL),
(1117, '07160737', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(1118, '07160737', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(1119, '07160737', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(1120, '07160745', 26, 14, 'a:2:{i:56;i:1;i:55;i:0;}', NULL),
(1121, '07160745', 26, 15, 'a:2:{i:59;i:1;i:58;i:0;}', NULL),
(1122, '07160745', 26, 16, 'a:2:{i:64;i:1;i:63;i:0;}', NULL),
(1123, '07160745', 26, 17, 'a:2:{i:67;i:1;i:68;i:0;}', NULL),
(1124, '07160745', 26, 18, 'a:2:{i:71;i:1;i:69;i:0;}', NULL),
(1125, '07160745', 26, 19, 'a:3:{i:74;i:0;i:75;i:0;i:73;i:1;}', NULL),
(1126, '07160745', 26, 20, 'a:1:{i:80;i:1;}', NULL),
(1127, '07160745', 26, 21, 'a:2:{i:83;i:1;i:82;i:0;}', NULL),
(1128, '07160745', 26, 22, 'a:2:{i:87;i:1;i:86;i:0;}', NULL),
(1129, '07160745', 26, 23, 'a:2:{i:90;i:1;i:89;i:0;}', NULL),
(1130, '07160745', 26, 24, 'a:2:{i:94;i:1;i:93;i:0;}', NULL),
(1131, '07160745', 26, 25, 'a:2:{i:97;i:1;i:98;i:0;}', NULL),
(1132, '07160745', 26, 26, 'a:2:{i:103;i:1;i:102;i:0;}', NULL),
(1133, '07160745', 26, 27, 'a:2:{i:105;i:1;i:106;i:0;}', NULL),
(1134, '07160745', 26, 28, 'a:4:{i:112;i:0;i:111;i:0;i:109;i:1;i:110;i:0;}', NULL),
(1135, '07160745', 26, 29, 'a:2:{i:114;i:1;i:113;i:0;}', NULL),
(1136, '07160745', 26, 30, 'a:2:{i:118;i:1;i:117;i:0;}', NULL),
(1137, '07160745', 26, 31, 'a:2:{i:121;i:1;i:122;i:0;}', NULL),
(1138, '07160745', 26, 32, 'a:2:{i:125;i:1;i:126;i:0;}', NULL),
(1139, '07160745', 26, 33, 'a:2:{i:130;i:1;i:129;i:0;}', NULL),
(1140, '07160745', 26, 34, 'a:2:{i:135;i:1;i:133;i:0;}', NULL),
(1141, '07160745', 26, 35, 'a:2:{i:137;i:0;i:140;i:1;}', NULL),
(1142, '07160745', 26, 36, 'a:2:{i:144;i:1;i:141;i:0;}', NULL),
(1143, '07160745', 26, 37, 'a:2:{i:148;i:1;i:147;i:0;}', NULL),
(1144, '07160745', 26, 38, 'a:2:{i:150;i:1;i:149;i:0;}', NULL),
(1145, '07160745', 26, 39, 'a:2:{i:153;i:1;i:154;i:0;}', NULL),
(1146, '07160736', 26, 14, 'a:2:{i:55;i:0;i:56;i:1;}', NULL),
(1147, '07160736', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(1148, '07160736', 26, 16, 'a:1:{i:63;i:1;}', NULL),
(1149, '07160736', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(1150, '07160736', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(1151, '07160736', 26, 19, 'a:1:{i:75;i:1;}', NULL),
(1152, '07160736', 26, 20, 'a:1:{i:79;i:1;}', NULL),
(1153, '07160736', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(1154, '07160736', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(1155, '07160736', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(1156, '07160736', 26, 24, 'a:1:{i:93;i:1;}', NULL),
(1157, '07160736', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(1158, '07160736', 26, 26, 'a:1:{i:104;i:1;}', NULL),
(1159, '07160736', 26, 27, 'a:2:{i:105;i:1;i:108;i:0;}', NULL),
(1160, '07160736', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(1161, '07160736', 26, 29, 'a:3:{i:116;i:0;i:113;i:0;i:115;i:1;}', NULL),
(1162, '07160736', 26, 30, 'a:1:{i:119;i:1;}', NULL),
(1163, '07160736', 26, 31, 'a:2:{i:123;i:0;i:121;i:1;}', NULL),
(1164, '07160736', 26, 32, 'a:1:{i:127;i:1;}', NULL),
(1165, '07160736', 26, 33, 'a:1:{i:129;i:1;}', NULL),
(1166, '07160736', 26, 34, 'a:1:{i:134;i:1;}', NULL),
(1167, '07160736', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(1168, '07160736', 26, 36, 'a:1:{i:143;i:1;}', NULL),
(1169, '07160736', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(1170, '07160736', 26, 38, 'a:2:{i:150;i:0;i:149;i:1;}', NULL),
(1171, '07160736', 26, 39, 'a:2:{i:153;i:0;i:156;i:1;}', NULL),
(1172, '07160710', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(1173, '07160710', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(1174, '07160710', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(1175, '07160710', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(1176, '07160710', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(1177, '07160710', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(1178, '07160710', 26, 20, 'a:2:{i:79;i:0;i:80;i:1;}', NULL),
(1179, '07160710', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(1180, '07160710', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(1181, '07160710', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(1182, '07160710', 26, 24, 'a:2:{i:94;i:0;i:96;i:1;}', NULL),
(1183, '07160710', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(1184, '07160710', 26, 26, 'a:2:{i:103;i:1;i:102;i:0;}', NULL),
(1185, '07160710', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(1186, '07160710', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(1187, '07160710', 26, 29, 'a:2:{i:114;i:0;i:115;i:1;}', NULL),
(1188, '07160710', 26, 30, 'a:2:{i:120;i:0;i:117;i:1;}', NULL),
(1189, '07160710', 26, 31, 'a:2:{i:123;i:0;i:121;i:1;}', NULL),
(1190, '07160710', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(1191, '07160710', 26, 33, 'a:2:{i:129;i:0;i:130;i:1;}', NULL),
(1192, '07160710', 26, 34, 'a:1:{i:133;i:1;}', NULL),
(1193, '07160710', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(1194, '07160710', 26, 36, 'a:2:{i:142;i:0;i:143;i:1;}', NULL),
(1195, '07160710', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(1196, '07160710', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(1197, '07160710', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(1198, '07160741', 27, 40, 'a:1:{i:159;i:1;}', NULL),
(1199, '07160741', 27, 41, 'a:2:{i:163;i:0;i:161;i:1;}', NULL),
(1200, '07160741', 27, 42, 'a:4:{i:165;i:0;i:167;i:0;i:168;i:0;i:166;i:1;}', NULL),
(1201, '07160741', 27, 43, 'a:1:{i:169;i:1;}', NULL),
(1202, '07160741', 27, 44, 'a:2:{i:174;i:0;i:173;i:1;}', NULL),
(1203, '07160741', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(1204, '07160741', 27, 46, 'a:2:{i:183;i:0;i:182;i:1;}', NULL),
(1205, '07160741', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(1206, '07160741', 27, 48, 'a:4:{i:192;i:0;i:191;i:0;i:190;i:0;i:189;i:1;}', NULL),
(1207, '07160741', 27, 49, 'a:3:{i:193;i:0;i:195;i:0;i:194;i:1;}', NULL),
(1208, '07160741', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(1209, '07160741', 27, 51, 'a:2:{i:203;i:0;i:201;i:1;}', NULL),
(1210, '07160741', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(1211, '07160741', 27, 53, 'a:1:{i:209;i:1;}', NULL),
(1212, '07160741', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(1213, '07160741', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(1214, '07160741', 27, 56, 'a:2:{i:224;i:0;i:223;i:1;}', NULL),
(1215, '07160741', 27, 57, 'a:1:{i:226;i:1;}', NULL),
(1216, '07160741', 27, 58, 'a:2:{i:229;i:0;i:230;i:1;}', NULL),
(1217, '07160741', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(1218, '07160741', 27, 60, 'a:2:{i:240;i:1;i:239;i:0;}', NULL),
(1219, '07160741', 27, 61, 'a:2:{i:242;i:0;i:243;i:1;}', NULL),
(1220, '07160741', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(1221, '07160741', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(1222, '07160741', 27, 64, 'a:2:{i:255;i:0;i:256;i:1;}', NULL),
(1223, '07160741', 27, 65, 'a:2:{i:257;i:0;i:260;i:1;}', NULL),
(1224, '07160741', 27, 66, 'a:3:{i:263;i:0;i:264;i:0;i:261;i:1;}', NULL),
(1225, '07160741', 27, 67, 'a:2:{i:267;i:0;i:268;i:1;}', NULL),
(1226, '07160741', 27, 68, 'a:2:{i:270;i:0;i:269;i:1;}', NULL),
(1227, '07160741', 27, 69, 'a:2:{i:275;i:0;i:276;i:1;}', NULL),
(1228, '07160741', 27, 70, 'a:2:{i:278;i:0;i:279;i:1;}', NULL),
(1229, '07160741', 27, 71, 'a:4:{i:284;i:0;i:283;i:0;i:282;i:0;i:281;i:1;}', NULL),
(1230, '07160741', 27, 72, 'a:1:{i:286;i:1;}', NULL),
(1231, '07160741', 27, 73, 'a:2:{i:290;i:0;i:291;i:1;}', NULL),
(1232, '07160702', 33, 230, 'a:1:{i:917;i:1;}', NULL),
(1233, '07160702', 33, 231, 'a:1:{i:920;i:1;}', NULL),
(1234, '07160702', 33, 232, 'a:1:{i:924;i:1;}', NULL),
(1235, '07160702', 33, 233, 'a:3:{i:928;i:0;i:927;i:0;i:926;i:1;}', NULL),
(1236, '07160702', 33, 234, 'a:1:{i:931;i:1;}', NULL),
(1237, '07160702', 33, 235, 'a:4:{i:936;i:0;i:937;i:0;i:934;i:0;i:935;i:1;}', NULL),
(1238, '07160702', 33, 236, 'a:1:{i:939;i:1;}', NULL),
(1239, '07160702', 33, 237, 'a:1:{i:943;i:1;}', NULL),
(1240, '07160702', 33, 238, 'a:1:{i:948;i:1;}', NULL),
(1241, '07160702', 33, 239, 'a:1:{i:951;i:1;}', NULL),
(1242, '07160702', 33, 240, 'a:1:{i:954;i:1;}', NULL),
(1243, '07160702', 33, 241, 'a:2:{i:958;i:0;i:961;i:1;}', NULL),
(1244, '07160702', 33, 242, 'a:2:{i:965;i:0;i:962;i:1;}', NULL),
(1245, '07160702', 33, 243, 'a:2:{i:969;i:0;i:966;i:1;}', NULL),
(1246, '07160702', 33, 244, 'a:2:{i:970;i:0;i:972;i:1;}', NULL),
(1247, '07160702', 33, 245, 'a:1:{i:976;i:1;}', NULL),
(1248, '07160702', 33, 246, 'a:1:{i:981;i:1;}', NULL),
(1249, '07160702', 33, 247, 'a:2:{i:984;i:0;i:982;i:1;}', NULL),
(1250, '07160702', 33, 248, 'a:1:{i:988;i:1;}', NULL),
(1251, '07160702', 33, 249, 'a:2:{i:990;i:0;i:992;i:1;}', NULL),
(1252, '07160702', 33, 250, 'a:1:{i:996;i:1;}', NULL),
(1253, '07160702', 33, 251, 'a:3:{i:998;i:0;i:1000;i:0;i:999;i:1;}', NULL),
(1254, '07160702', 33, 252, 'a:3:{i:1005;i:0;i:1004;i:0;i:1003;i:1;}', NULL),
(1255, '07160702', 33, 253, 'a:1:{i:1008;i:1;}', NULL),
(1256, '07160702', 33, 254, 'a:1:{i:1010;i:1;}', NULL),
(1257, '07160702', 33, 255, 'a:1:{i:1014;i:1;}', NULL),
(1258, '07160702', 33, 256, 'a:1:{i:1020;i:1;}', NULL),
(1259, '07160702', 33, 257, 'a:2:{i:1022;i:0;i:1023;i:1;}', NULL),
(1260, '07160702', 33, 258, 'a:1:{i:1026;i:1;}', NULL),
(1261, '07160702', 33, 259, 'a:1:{i:1033;i:1;}', NULL),
(1262, '07160702', 33, 260, 'a:1:{i:1034;i:1;}', NULL),
(1263, '07160702', 33, 261, 'a:1:{i:1038;i:1;}', NULL),
(1264, '07160734', 26, 14, 'a:2:{i:56;i:1;i:55;i:0;}', NULL),
(1265, '07160734', 26, 15, 'a:2:{i:59;i:1;i:58;i:0;}', NULL),
(1266, '07160734', 26, 16, 'a:2:{i:64;i:1;i:63;i:0;}', NULL),
(1267, '07160734', 26, 17, 'a:2:{i:67;i:1;i:68;i:0;}', NULL),
(1268, '07160734', 26, 18, 'a:2:{i:71;i:1;i:70;i:0;}', NULL),
(1269, '07160734', 26, 19, 'a:2:{i:73;i:1;i:74;i:0;}', NULL),
(1270, '07160734', 26, 20, 'a:2:{i:80;i:1;i:79;i:0;}', NULL),
(1271, '07160734', 26, 21, 'a:2:{i:83;i:1;i:84;i:0;}', NULL),
(1272, '07160734', 26, 22, 'a:2:{i:87;i:1;i:88;i:0;}', NULL),
(1273, '07160734', 26, 23, 'a:2:{i:90;i:1;i:89;i:0;}', NULL),
(1274, '07160734', 26, 24, 'a:2:{i:94;i:0;i:96;i:1;}', NULL),
(1275, '07160734', 26, 25, 'a:2:{i:97;i:1;i:98;i:0;}', NULL),
(1276, '07160734', 26, 26, 'a:2:{i:101;i:0;i:103;i:1;}', NULL),
(1277, '07160734', 26, 27, 'a:2:{i:106;i:0;i:105;i:1;}', NULL),
(1278, '07160734', 26, 28, 'a:2:{i:110;i:0;i:112;i:1;}', NULL),
(1279, '07160734', 26, 29, 'a:2:{i:115;i:1;i:114;i:0;}', NULL),
(1280, '07160734', 26, 30, 'a:2:{i:118;i:0;i:117;i:1;}', NULL),
(1281, '07160734', 26, 31, 'a:2:{i:121;i:1;i:122;i:0;}', NULL),
(1282, '07160734', 26, 32, 'a:2:{i:125;i:1;i:126;i:0;}', NULL),
(1283, '07160734', 26, 33, 'a:2:{i:130;i:1;i:131;i:0;}', NULL),
(1284, '07160734', 26, 34, 'a:2:{i:134;i:0;i:133;i:1;}', NULL),
(1285, '07160734', 26, 35, 'a:2:{i:140;i:1;i:139;i:0;}', NULL),
(1286, '07160734', 26, 36, 'a:2:{i:144;i:0;i:143;i:1;}', NULL),
(1287, '07160734', 26, 37, 'a:2:{i:148;i:1;i:147;i:0;}', NULL),
(1288, '07160734', 26, 38, 'a:2:{i:152;i:0;i:149;i:1;}', NULL),
(1289, '07160734', 26, 39, 'a:2:{i:153;i:0;i:156;i:1;}', NULL),
(1290, '07160742', 27, 40, 'a:3:{i:159;i:1;i:158;i:0;i:157;i:0;}', NULL),
(1291, '07160742', 27, 41, 'a:1:{i:161;i:1;}', NULL),
(1292, '07160742', 27, 42, 'a:2:{i:167;i:0;i:166;i:1;}', NULL),
(1293, '07160742', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(1294, '07160742', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(1295, '07160742', 27, 45, 'a:1:{i:178;i:1;}', NULL),
(1296, '07160742', 27, 46, 'a:1:{i:182;i:1;}', NULL),
(1297, '07160742', 27, 47, 'a:1:{i:188;i:1;}', NULL),
(1298, '07160742', 27, 48, 'a:1:{i:189;i:1;}', NULL),
(1299, '07160742', 27, 49, 'a:2:{i:193;i:0;i:194;i:1;}', NULL),
(1300, '07160742', 27, 50, 'a:2:{i:199;i:1;i:198;i:0;}', NULL),
(1301, '07160742', 27, 51, 'a:1:{i:201;i:1;}', NULL),
(1302, '07160742', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(1303, '07160742', 27, 53, 'a:3:{i:209;i:1;i:212;i:0;i:211;i:0;}', NULL),
(1304, '07160742', 27, 54, 'a:2:{i:214;i:0;i:215;i:1;}', NULL),
(1305, '07160742', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(1306, '07160742', 27, 56, 'a:2:{i:223;i:1;i:224;i:0;}', NULL),
(1307, '07160742', 27, 57, 'a:2:{i:227;i:0;i:225;i:1;}', NULL),
(1308, '07160742', 27, 58, 'a:1:{i:230;i:1;}', NULL),
(1309, '07160742', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(1310, '07160742', 27, 60, 'a:1:{i:237;i:1;}', NULL),
(1311, '07160742', 27, 61, 'a:1:{i:241;i:1;}', NULL),
(1312, '07160742', 27, 62, 'a:1:{i:248;i:1;}', NULL),
(1313, '07160742', 27, 63, 'a:2:{i:251;i:1;i:249;i:0;}', NULL),
(1314, '07160742', 27, 64, 'a:2:{i:255;i:0;i:256;i:1;}', NULL),
(1315, '07160742', 27, 65, 'a:3:{i:258;i:0;i:260;i:0;i:259;i:1;}', NULL),
(1316, '07160742', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(1317, '07160742', 27, 67, 'a:2:{i:268;i:0;i:266;i:1;}', NULL),
(1318, '07160742', 27, 68, 'a:1:{i:272;i:1;}', NULL),
(1319, '07160742', 27, 69, 'a:1:{i:273;i:1;}', NULL),
(1320, '07160742', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(1321, '07160742', 27, 71, 'a:1:{i:282;i:1;}', NULL),
(1322, '07160742', 27, 72, 'a:1:{i:285;i:1;}', NULL),
(1323, '07160742', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(1324, '07160721', 27, 40, 'a:2:{i:157;i:0;i:159;i:1;}', NULL),
(1325, '07160721', 27, 41, 'a:2:{i:161;i:1;i:162;i:0;}', NULL),
(1326, '07160721', 27, 42, 'a:2:{i:167;i:0;i:166;i:1;}', NULL),
(1327, '07160721', 27, 43, 'a:2:{i:171;i:1;i:172;i:0;}', NULL),
(1328, '07160721', 27, 44, 'a:2:{i:173;i:1;i:174;i:0;}', NULL),
(1329, '07160721', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(1330, '07160721', 27, 46, 'a:2:{i:183;i:0;i:182;i:1;}', NULL),
(1331, '07160721', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(1332, '07160721', 27, 48, 'a:2:{i:189;i:1;i:190;i:0;}', NULL),
(1333, '07160721', 27, 49, 'a:2:{i:194;i:1;i:195;i:0;}', NULL),
(1334, '07160721', 27, 50, 'a:2:{i:197;i:0;i:198;i:1;}', NULL),
(1335, '07160721', 27, 51, 'a:2:{i:203;i:0;i:201;i:1;}', NULL),
(1336, '07160721', 27, 52, 'a:2:{i:208;i:0;i:206;i:1;}', NULL),
(1337, '07160721', 27, 53, 'a:2:{i:209;i:1;i:210;i:0;}', NULL),
(1338, '07160721', 27, 54, 'a:2:{i:216;i:1;i:215;i:0;}', NULL),
(1339, '07160721', 27, 55, 'a:3:{i:219;i:0;i:218;i:0;i:217;i:1;}', NULL),
(1340, '07160721', 27, 56, 'a:2:{i:224;i:0;i:223;i:1;}', NULL),
(1341, '07160721', 27, 57, 'a:2:{i:225;i:0;i:228;i:1;}', NULL),
(1342, '07160721', 27, 58, 'a:3:{i:229;i:0;i:230;i:1;i:231;i:0;}', NULL),
(1343, '07160721', 27, 59, 'a:2:{i:234;i:0;i:233;i:1;}', NULL),
(1344, '07160721', 27, 60, 'a:2:{i:237;i:0;i:240;i:1;}', NULL),
(1345, '07160721', 27, 61, 'a:2:{i:243;i:0;i:244;i:1;}', NULL),
(1346, '07160721', 27, 62, 'a:2:{i:247;i:0;i:246;i:1;}', NULL),
(1347, '07160721', 27, 63, 'a:2:{i:251;i:1;i:252;i:0;}', NULL),
(1348, '07160721', 27, 64, 'a:2:{i:253;i:0;i:256;i:1;}', NULL),
(1349, '07160721', 27, 65, 'a:2:{i:258;i:0;i:259;i:1;}', NULL),
(1350, '07160721', 27, 66, 'a:2:{i:264;i:0;i:263;i:1;}', NULL),
(1351, '07160721', 27, 67, 'a:2:{i:266;i:0;i:268;i:1;}', NULL),
(1352, '07160721', 27, 68, 'a:2:{i:269;i:1;i:270;i:0;}', NULL),
(1353, '07160721', 27, 69, 'a:2:{i:273;i:1;i:274;i:0;}', NULL),
(1354, '07160721', 27, 70, 'a:2:{i:278;i:0;i:279;i:1;}', NULL),
(1355, '07160721', 27, 71, 'a:2:{i:282;i:0;i:281;i:1;}', NULL),
(1356, '07160721', 27, 72, 'a:3:{i:285;i:0;i:286;i:0;i:288;i:1;}', NULL),
(1357, '07160721', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(1358, '07160738', 27, 40, 'a:2:{i:157;i:0;i:159;i:1;}', NULL),
(1359, '07160738', 27, 41, 'a:2:{i:163;i:0;i:161;i:1;}', NULL),
(1360, '07160738', 27, 42, 'a:2:{i:166;i:1;i:167;i:0;}', NULL),
(1361, '07160738', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(1362, '07160738', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(1363, '07160738', 27, 45, 'a:2:{i:177;i:0;i:178;i:1;}', NULL),
(1364, '07160738', 27, 46, 'a:2:{i:183;i:0;i:182;i:1;}', NULL),
(1365, '07160738', 27, 47, 'a:2:{i:188;i:1;i:185;i:0;}', NULL),
(1366, '07160738', 27, 48, 'a:2:{i:190;i:0;i:189;i:1;}', NULL),
(1367, '07160738', 27, 49, 'a:2:{i:193;i:0;i:194;i:1;}', NULL),
(1368, '07160738', 27, 50, 'a:2:{i:199;i:0;i:198;i:1;}', NULL),
(1369, '07160738', 27, 51, 'a:2:{i:203;i:0;i:201;i:1;}', NULL),
(1370, '07160738', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(1371, '07160738', 27, 53, 'a:2:{i:209;i:1;i:211;i:0;}', NULL),
(1372, '07160738', 27, 54, 'a:2:{i:213;i:0;i:216;i:1;}', NULL),
(1373, '07160738', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(1374, '07160738', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(1375, '07160738', 27, 57, 'a:2:{i:225;i:0;i:228;i:1;}', NULL),
(1376, '07160738', 27, 58, 'a:3:{i:229;i:0;i:232;i:0;i:230;i:1;}', NULL),
(1377, '07160738', 27, 59, 'a:3:{i:233;i:1;i:235;i:0;i:234;i:0;}', NULL),
(1378, '07160738', 27, 60, 'a:1:{i:240;i:1;}', NULL),
(1379, '07160738', 27, 61, 'a:1:{i:244;i:1;}', NULL),
(1380, '07160738', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(1381, '07160738', 27, 63, 'a:2:{i:250;i:0;i:251;i:1;}', NULL),
(1382, '07160738', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(1383, '07160738', 27, 65, 'a:4:{i:258;i:0;i:260;i:0;i:257;i:0;i:259;i:1;}', NULL),
(1384, '07160738', 27, 66, 'a:2:{i:264;i:0;i:263;i:1;}', NULL),
(1385, '07160738', 27, 67, 'a:3:{i:266;i:0;i:265;i:0;i:268;i:1;}', NULL),
(1386, '07160738', 27, 68, 'a:2:{i:270;i:0;i:269;i:1;}', NULL),
(1387, '07160738', 27, 69, 'a:2:{i:276;i:0;i:273;i:1;}', NULL),
(1388, '07160738', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(1389, '07160738', 27, 71, 'a:1:{i:281;i:1;}', NULL),
(1390, '07160738', 27, 72, 'a:2:{i:285;i:0;i:288;i:1;}', NULL),
(1391, '07160738', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(1392, '07160740', 26, 14, 'a:2:{i:56;i:1;i:55;i:0;}', NULL),
(1393, '07160740', 26, 15, 'a:2:{i:58;i:0;i:59;i:1;}', NULL),
(1394, '07160740', 26, 16, 'a:2:{i:63;i:0;i:64;i:1;}', NULL),
(1395, '07160740', 26, 17, 'a:2:{i:67;i:1;i:66;i:0;}', NULL),
(1396, '07160740', 26, 18, 'a:2:{i:71;i:1;i:70;i:0;}', NULL),
(1397, '07160740', 26, 19, 'a:2:{i:75;i:1;i:74;i:0;}', NULL),
(1398, '07160740', 26, 20, 'a:3:{i:79;i:0;i:78;i:0;i:80;i:1;}', NULL),
(1399, '07160740', 26, 21, 'a:2:{i:83;i:1;i:82;i:0;}', NULL),
(1400, '07160740', 26, 22, 'a:2:{i:87;i:1;i:86;i:0;}', NULL),
(1401, '07160740', 26, 23, 'a:2:{i:90;i:1;i:91;i:0;}', NULL),
(1402, '07160740', 26, 24, 'a:2:{i:94;i:1;i:95;i:0;}', NULL),
(1403, '07160740', 26, 25, 'a:2:{i:100;i:0;i:99;i:1;}', NULL),
(1404, '07160740', 26, 26, 'a:2:{i:102;i:1;i:101;i:0;}', NULL),
(1405, '07160740', 26, 27, 'a:2:{i:106;i:1;i:107;i:0;}', NULL),
(1406, '07160740', 26, 28, 'a:2:{i:112;i:1;i:111;i:0;}', NULL),
(1407, '07160740', 26, 29, 'a:2:{i:114;i:0;i:115;i:1;}', NULL),
(1408, '07160740', 26, 30, 'a:2:{i:118;i:0;i:117;i:1;}', NULL),
(1409, '07160740', 26, 31, 'a:2:{i:121;i:1;i:122;i:0;}', NULL),
(1410, '07160740', 26, 32, 'a:2:{i:125;i:1;i:126;i:0;}', NULL),
(1411, '07160740', 26, 33, 'a:2:{i:130;i:1;i:131;i:0;}', NULL),
(1412, '07160740', 26, 34, 'a:2:{i:134;i:0;i:133;i:1;}', NULL),
(1413, '07160740', 26, 35, 'a:3:{i:140;i:1;i:138;i:0;i:139;i:0;}', NULL),
(1414, '07160740', 26, 36, 'a:2:{i:144;i:0;i:143;i:1;}', NULL),
(1415, '07160740', 26, 37, 'a:2:{i:148;i:0;i:147;i:1;}', NULL),
(1416, '07160740', 26, 38, 'a:2:{i:149;i:1;i:150;i:0;}', NULL),
(1417, '07160740', 26, 39, 'a:2:{i:154;i:0;i:156;i:1;}', NULL),
(1418, '07160739', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(1419, '07160739', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(1420, '07160739', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(1421, '07160739', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(1422, '07160739', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(1423, '07160739', 26, 19, 'a:1:{i:75;i:1;}', NULL),
(1424, '07160739', 26, 20, 'a:1:{i:80;i:1;}', NULL),
(1425, '07160739', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(1426, '07160739', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(1427, '07160739', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(1428, '07160739', 26, 24, 'a:1:{i:94;i:1;}', NULL),
(1429, '07160739', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(1430, '07160739', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(1431, '07160739', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(1432, '07160739', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(1433, '07160739', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(1434, '07160739', 26, 30, 'a:1:{i:117;i:1;}', NULL),
(1435, '07160739', 26, 31, 'a:1:{i:121;i:1;}', NULL),
(1436, '07160739', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(1437, '07160739', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(1438, '07160739', 26, 34, 'a:1:{i:135;i:1;}', NULL),
(1439, '07160739', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(1440, '07160739', 26, 36, 'a:2:{i:142;i:0;i:143;i:1;}', NULL),
(1441, '07160739', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(1442, '07160739', 26, 38, 'a:2:{i:152;i:0;i:149;i:1;}', NULL),
(1443, '07160739', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(1444, '07160706', 27, 40, 'a:2:{i:159;i:1;i:157;i:0;}', NULL),
(1445, '07160706', 27, 41, 'a:4:{i:162;i:0;i:164;i:0;i:161;i:1;i:163;i:0;}', NULL),
(1446, '07160706', 27, 42, 'a:3:{i:165;i:0;i:168;i:0;i:166;i:1;}', NULL),
(1447, '07160706', 27, 43, 'a:4:{i:171;i:1;i:172;i:0;i:169;i:0;i:170;i:0;}', NULL),
(1448, '07160706', 27, 44, 'a:2:{i:173;i:1;i:176;i:0;}', NULL),
(1449, '07160706', 27, 45, 'a:2:{i:178;i:1;i:180;i:0;}', NULL),
(1450, '07160706', 27, 46, 'a:3:{i:183;i:0;i:184;i:0;i:182;i:1;}', NULL),
(1451, '07160706', 27, 47, 'a:3:{i:185;i:0;i:188;i:1;i:187;i:0;}', NULL),
(1452, '07160706', 27, 48, 'a:3:{i:189;i:1;i:192;i:0;i:190;i:0;}', NULL),
(1453, '07160706', 27, 49, 'a:4:{i:194;i:1;i:196;i:0;i:195;i:0;i:193;i:0;}', NULL),
(1454, '07160706', 27, 50, 'a:3:{i:200;i:0;i:197;i:0;i:198;i:1;}', NULL),
(1455, '07160706', 27, 51, 'a:3:{i:204;i:0;i:203;i:0;i:201;i:1;}', NULL),
(1456, '07160706', 27, 52, 'a:4:{i:206;i:1;i:208;i:0;i:207;i:0;i:205;i:0;}', NULL),
(1457, '07160706', 27, 53, 'a:4:{i:209;i:1;i:212;i:0;i:211;i:0;i:210;i:0;}', NULL),
(1458, '07160706', 27, 54, 'a:4:{i:215;i:0;i:216;i:1;i:213;i:0;i:214;i:0;}', NULL),
(1459, '07160706', 27, 55, 'a:4:{i:217;i:1;i:220;i:0;i:219;i:0;i:218;i:0;}', NULL),
(1460, '07160706', 27, 56, 'a:2:{i:223;i:1;i:224;i:0;}', NULL),
(1461, '07160706', 27, 57, 'a:4:{i:225;i:0;i:228;i:1;i:227;i:0;i:226;i:0;}', NULL),
(1462, '07160706', 27, 58, 'a:3:{i:229;i:0;i:232;i:0;i:230;i:1;}', NULL),
(1463, '07160706', 27, 59, 'a:3:{i:234;i:0;i:236;i:0;i:233;i:1;}', NULL),
(1464, '07160706', 27, 60, 'a:2:{i:237;i:0;i:240;i:1;}', NULL),
(1465, '07160706', 27, 61, 'a:2:{i:243;i:0;i:244;i:1;}', NULL),
(1466, '07160706', 27, 62, 'a:2:{i:245;i:0;i:246;i:1;}', NULL),
(1467, '07160706', 27, 63, 'a:2:{i:250;i:0;i:251;i:1;}', NULL),
(1468, '07160706', 27, 64, 'a:2:{i:253;i:0;i:256;i:1;}', NULL),
(1469, '07160706', 27, 65, 'a:3:{i:258;i:0;i:257;i:0;i:259;i:1;}', NULL),
(1470, '07160706', 27, 66, 'a:2:{i:263;i:1;i:264;i:0;}', NULL),
(1471, '07160706', 27, 67, 'a:2:{i:268;i:1;i:266;i:0;}', NULL),
(1472, '07160706', 27, 68, 'a:1:{i:269;i:1;}', NULL),
(1473, '07160706', 27, 69, 'a:3:{i:273;i:1;i:275;i:0;i:276;i:0;}', NULL),
(1474, '07160706', 27, 70, 'a:2:{i:277;i:0;i:279;i:1;}', NULL),
(1475, '07160706', 27, 71, 'a:2:{i:281;i:1;i:282;i:0;}', NULL),
(1476, '07160706', 27, 72, 'a:4:{i:286;i:0;i:287;i:0;i:285;i:0;i:288;i:1;}', NULL),
(1477, '07160706', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(1478, '07160722', 27, 40, 'a:3:{i:160;i:0;i:159;i:1;i:158;i:0;}', NULL),
(1479, '07160722', 27, 41, 'a:3:{i:163;i:0;i:161;i:1;i:162;i:0;}', NULL),
(1480, '07160722', 27, 42, 'a:3:{i:165;i:0;i:167;i:0;i:166;i:1;}', NULL),
(1481, '07160722', 27, 43, 'a:3:{i:171;i:1;i:170;i:0;i:169;i:0;}', NULL),
(1482, '07160722', 27, 44, 'a:2:{i:173;i:1;i:174;i:0;}', NULL),
(1483, '07160722', 27, 45, 'a:3:{i:179;i:0;i:178;i:1;i:177;i:0;}', NULL),
(1484, '07160722', 27, 46, 'a:3:{i:183;i:0;i:182;i:1;i:181;i:0;}', NULL),
(1485, '07160722', 27, 47, 'a:3:{i:188;i:1;i:187;i:0;i:186;i:0;}', NULL),
(1486, '07160722', 27, 48, 'a:2:{i:190;i:0;i:189;i:1;}', NULL),
(1487, '07160722', 27, 49, 'a:2:{i:193;i:0;i:194;i:1;}', NULL),
(1488, '07160722', 27, 50, 'a:3:{i:198;i:1;i:199;i:0;i:197;i:0;}', NULL),
(1489, '07160722', 27, 51, 'a:3:{i:202;i:0;i:203;i:0;i:201;i:1;}', NULL),
(1490, '07160722', 27, 52, 'a:2:{i:206;i:1;i:205;i:0;}', NULL),
(1491, '07160722', 27, 53, 'a:3:{i:211;i:0;i:209;i:1;i:210;i:0;}', NULL),
(1492, '07160722', 27, 54, 'a:3:{i:214;i:0;i:216;i:1;i:213;i:0;}', NULL),
(1493, '07160722', 27, 55, 'a:2:{i:217;i:1;i:218;i:0;}', NULL),
(1494, '07160722', 27, 56, 'a:3:{i:222;i:0;i:223;i:1;i:221;i:0;}', NULL),
(1495, '07160722', 27, 57, 'a:3:{i:228;i:1;i:227;i:0;i:225;i:0;}', NULL),
(1496, '07160722', 27, 58, 'a:2:{i:229;i:0;i:230;i:1;}', NULL),
(1497, '07160722', 27, 59, 'a:2:{i:233;i:1;i:234;i:0;}', NULL),
(1498, '07160722', 27, 60, 'a:4:{i:237;i:0;i:238;i:0;i:239;i:0;i:240;i:1;}', NULL),
(1499, '07160722', 27, 61, 'a:4:{i:243;i:0;i:242;i:0;i:244;i:1;i:241;i:0;}', NULL),
(1500, '07160722', 27, 62, 'a:2:{i:246;i:1;i:247;i:0;}', NULL),
(1501, '07160722', 27, 63, 'a:3:{i:251;i:1;i:250;i:0;i:249;i:0;}', NULL),
(1502, '07160722', 27, 64, 'a:3:{i:256;i:1;i:253;i:0;i:255;i:0;}', NULL),
(1503, '07160722', 27, 65, 'a:3:{i:258;i:0;i:259;i:1;i:260;i:0;}', NULL),
(1504, '07160722', 27, 66, 'a:3:{i:261;i:0;i:264;i:0;i:263;i:1;}', NULL),
(1505, '07160722', 27, 67, 'a:2:{i:265;i:0;i:268;i:1;}', NULL),
(1506, '07160722', 27, 68, 'a:3:{i:271;i:0;i:269;i:1;i:270;i:0;}', NULL),
(1507, '07160722', 27, 69, 'a:3:{i:275;i:0;i:273;i:1;i:274;i:0;}', NULL),
(1508, '07160722', 27, 70, 'a:3:{i:279;i:1;i:280;i:0;i:277;i:0;}', NULL),
(1509, '07160722', 27, 71, 'a:4:{i:282;i:0;i:281;i:1;i:284;i:0;i:283;i:0;}', NULL),
(1510, '07160722', 27, 72, 'a:4:{i:286;i:0;i:287;i:0;i:285;i:0;i:288;i:1;}', NULL),
(1511, '07160722', 27, 73, 'a:3:{i:291;i:1;i:292;i:0;i:290;i:0;}', NULL),
(1512, '07160708', 27, 40, 'a:2:{i:157;i:0;i:159;i:1;}', NULL),
(1513, '07160708', 27, 41, 'a:2:{i:162;i:0;i:161;i:1;}', NULL),
(1514, '07160708', 27, 42, 'a:1:{i:166;i:1;}', NULL),
(1515, '07160708', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(1516, '07160708', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(1517, '07160708', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(1518, '07160708', 27, 46, 'a:1:{i:182;i:1;}', NULL),
(1519, '07160708', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(1520, '07160708', 27, 48, 'a:1:{i:189;i:1;}', NULL),
(1521, '07160708', 27, 49, 'a:2:{i:195;i:0;i:194;i:1;}', NULL),
(1522, '07160708', 27, 50, 'a:2:{i:198;i:1;i:197;i:0;}', NULL),
(1523, '07160708', 27, 51, 'a:3:{i:203;i:0;i:202;i:0;i:201;i:1;}', NULL),
(1524, '07160708', 27, 52, 'a:2:{i:206;i:1;i:208;i:0;}', NULL),
(1525, '07160708', 27, 53, 'a:2:{i:209;i:1;i:210;i:0;}', NULL),
(1526, '07160708', 27, 54, 'a:2:{i:216;i:1;i:215;i:0;}', NULL),
(1527, '07160708', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(1528, '07160708', 27, 56, 'a:3:{i:224;i:0;i:221;i:0;i:223;i:1;}', NULL),
(1529, '07160708', 27, 57, 'a:2:{i:227;i:0;i:228;i:1;}', NULL),
(1530, '07160708', 27, 58, 'a:1:{i:230;i:1;}', NULL),
(1531, '07160708', 27, 59, 'a:2:{i:234;i:0;i:233;i:1;}', NULL),
(1532, '07160708', 27, 60, 'a:3:{i:239;i:0;i:237;i:0;i:240;i:1;}', NULL),
(1533, '07160708', 27, 61, 'a:2:{i:242;i:0;i:244;i:1;}', NULL),
(1534, '07160708', 27, 62, 'a:2:{i:247;i:0;i:246;i:1;}', NULL),
(1535, '07160708', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(1536, '07160708', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(1537, '07160708', 27, 65, 'a:3:{i:257;i:0;i:259;i:1;i:260;i:0;}', NULL),
(1538, '07160708', 27, 66, 'a:3:{i:261;i:0;i:264;i:0;i:263;i:1;}', NULL),
(1539, '07160708', 27, 67, 'a:1:{i:268;i:1;}', NULL),
(1540, '07160708', 27, 68, 'a:1:{i:269;i:1;}', NULL),
(1541, '07160708', 27, 69, 'a:2:{i:275;i:0;i:273;i:1;}', NULL),
(1542, '07160708', 27, 70, 'a:2:{i:277;i:0;i:279;i:1;}', NULL),
(1543, '07160708', 27, 71, 'a:2:{i:282;i:0;i:281;i:1;}', NULL),
(1544, '07160708', 27, 72, 'a:3:{i:285;i:0;i:286;i:0;i:288;i:1;}', NULL),
(1545, '07160708', 27, 73, 'a:3:{i:289;i:0;i:291;i:1;i:290;i:0;}', NULL),
(1546, '07160719', 27, 40, 'a:4:{i:157;i:0;i:159;i:1;i:160;i:0;i:158;i:0;}', NULL),
(1547, '07160719', 27, 41, 'a:2:{i:163;i:0;i:161;i:1;}', NULL),
(1548, '07160719', 27, 42, 'a:4:{i:168;i:0;i:166;i:1;i:165;i:0;i:167;i:0;}', NULL),
(1549, '07160719', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(1550, '07160719', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(1551, '07160719', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(1552, '07160719', 27, 46, 'a:2:{i:182;i:1;i:183;i:0;}', NULL),
(1553, '07160719', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(1554, '07160719', 27, 48, 'a:2:{i:189;i:1;i:190;i:0;}', NULL),
(1555, '07160719', 27, 49, 'a:3:{i:193;i:0;i:194;i:1;i:195;i:0;}', NULL),
(1556, '07160719', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(1557, '07160719', 27, 51, 'a:4:{i:203;i:0;i:202;i:0;i:201;i:1;i:204;i:0;}', NULL),
(1558, '07160719', 27, 52, 'a:2:{i:205;i:0;i:206;i:1;}', NULL),
(1559, '07160719', 27, 53, 'a:2:{i:209;i:1;i:211;i:0;}', NULL),
(1560, '07160719', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(1561, '07160719', 27, 55, 'a:3:{i:219;i:0;i:218;i:0;i:217;i:1;}', NULL),
(1562, '07160719', 27, 56, 'a:2:{i:223;i:1;i:224;i:0;}', NULL),
(1563, '07160719', 27, 57, 'a:2:{i:225;i:0;i:228;i:1;}', NULL),
(1564, '07160719', 27, 58, 'a:4:{i:229;i:0;i:232;i:0;i:230;i:1;i:231;i:0;}', NULL),
(1565, '07160719', 27, 59, 'a:2:{i:233;i:1;i:234;i:0;}', NULL),
(1566, '07160719', 27, 60, 'a:2:{i:237;i:0;i:240;i:1;}', NULL),
(1567, '07160719', 27, 61, 'a:2:{i:242;i:0;i:244;i:1;}', NULL),
(1568, '07160719', 27, 62, 'a:2:{i:248;i:0;i:246;i:1;}', NULL),
(1569, '07160719', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(1570, '07160719', 27, 64, 'a:3:{i:253;i:0;i:254;i:0;i:256;i:1;}', NULL),
(1571, '07160719', 27, 65, 'a:4:{i:257;i:0;i:258;i:0;i:259;i:0;i:260;i:1;}', NULL),
(1572, '07160719', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(1573, '07160719', 27, 67, 'a:1:{i:265;i:1;}', NULL),
(1574, '07160719', 27, 68, 'a:4:{i:269;i:0;i:270;i:1;i:271;i:0;i:272;i:0;}', NULL),
(1575, '07160719', 27, 69, 'a:1:{i:273;i:1;}', NULL),
(1576, '07160719', 27, 70, 'a:3:{i:277;i:0;i:278;i:0;i:279;i:1;}', NULL),
(1577, '07160719', 27, 71, 'a:1:{i:283;i:1;}', NULL),
(1578, '07160719', 27, 72, 'a:4:{i:288;i:1;i:287;i:0;i:286;i:0;i:285;i:0;}', NULL),
(1579, '07160719', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(1580, '07160734', 27, 40, 'a:2:{i:158;i:0;i:159;i:1;}', NULL),
(1581, '07160734', 27, 41, 'a:4:{i:163;i:0;i:162;i:0;i:164;i:0;i:161;i:1;}', NULL),
(1582, '07160734', 27, 42, 'a:3:{i:165;i:0;i:166;i:1;i:167;i:0;}', NULL),
(1583, '07160734', 27, 43, 'a:2:{i:171;i:1;i:172;i:0;}', NULL),
(1584, '07160734', 27, 44, 'a:2:{i:173;i:1;i:174;i:0;}', NULL),
(1585, '07160734', 27, 45, 'a:3:{i:179;i:0;i:178;i:1;i:177;i:0;}', NULL),
(1586, '07160734', 27, 46, 'a:3:{i:183;i:0;i:182;i:1;i:181;i:0;}', NULL),
(1587, '07160734', 27, 47, 'a:3:{i:185;i:0;i:188;i:1;i:187;i:0;}', NULL),
(1588, '07160734', 27, 48, 'a:2:{i:190;i:0;i:189;i:1;}', NULL),
(1589, '07160734', 27, 49, 'a:3:{i:194;i:1;i:195;i:0;i:193;i:0;}', NULL),
(1590, '07160734', 27, 50, 'a:4:{i:200;i:0;i:198;i:1;i:199;i:0;i:197;i:0;}', NULL),
(1591, '07160734', 27, 51, 'a:3:{i:203;i:0;i:201;i:1;i:202;i:0;}', NULL),
(1592, '07160734', 27, 52, 'a:3:{i:206;i:1;i:207;i:0;i:205;i:0;}', NULL),
(1593, '07160734', 27, 53, 'a:2:{i:209;i:1;i:210;i:0;}', NULL),
(1594, '07160734', 27, 54, 'a:2:{i:216;i:1;i:215;i:0;}', NULL),
(1595, '07160734', 27, 55, 'a:3:{i:217;i:1;i:218;i:0;i:219;i:0;}', NULL),
(1596, '07160734', 27, 56, 'a:3:{i:221;i:0;i:223;i:1;i:222;i:0;}', NULL),
(1597, '07160734', 27, 57, 'a:2:{i:228;i:1;i:227;i:0;}', NULL),
(1598, '07160734', 27, 58, 'a:2:{i:229;i:0;i:230;i:1;}', NULL),
(1599, '07160734', 27, 59, 'a:3:{i:235;i:0;i:233;i:1;i:234;i:0;}', NULL),
(1600, '07160734', 27, 60, 'a:2:{i:240;i:1;i:239;i:0;}', NULL),
(1601, '07160734', 27, 61, 'a:3:{i:242;i:0;i:243;i:0;i:244;i:1;}', NULL),
(1602, '07160734', 27, 62, 'a:3:{i:248;i:0;i:246;i:1;i:247;i:0;}', NULL),
(1603, '07160734', 27, 63, 'a:3:{i:249;i:0;i:251;i:1;i:252;i:0;}', NULL),
(1604, '07160734', 27, 64, 'a:3:{i:254;i:0;i:256;i:1;i:255;i:0;}', NULL),
(1605, '07160734', 27, 65, 'a:3:{i:258;i:0;i:259;i:1;i:260;i:0;}', NULL),
(1606, '07160734', 27, 66, 'a:2:{i:263;i:1;i:264;i:0;}', NULL),
(1607, '07160734', 27, 67, 'a:4:{i:266;i:0;i:265;i:0;i:268;i:1;i:267;i:0;}', NULL),
(1608, '07160734', 27, 68, 'a:3:{i:271;i:0;i:270;i:0;i:269;i:1;}', NULL),
(1609, '07160734', 27, 69, 'a:3:{i:275;i:0;i:273;i:1;i:274;i:0;}', NULL),
(1610, '07160734', 27, 70, 'a:3:{i:278;i:0;i:279;i:1;i:280;i:0;}', NULL),
(1611, '07160734', 27, 71, 'a:2:{i:282;i:0;i:281;i:1;}', NULL),
(1612, '07160734', 27, 72, 'a:4:{i:285;i:0;i:286;i:0;i:288;i:1;i:287;i:0;}', NULL),
(1613, '07160734', 27, 73, 'a:2:{i:291;i:1;i:290;i:0;}', NULL),
(1614, '07160743', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(1615, '07160743', 26, 15, 'a:2:{i:58;i:0;i:59;i:1;}', NULL),
(1616, '07160743', 26, 16, 'a:2:{i:63;i:0;i:64;i:1;}', NULL),
(1617, '07160743', 26, 17, 'a:2:{i:65;i:0;i:67;i:1;}', NULL),
(1618, '07160743', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(1619, '07160743', 26, 19, 'a:1:{i:73;i:1;}', NULL),
(1620, '07160743', 26, 20, 'a:2:{i:78;i:0;i:80;i:1;}', NULL),
(1621, '07160743', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(1622, '07160743', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(1623, '07160743', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(1624, '07160743', 26, 24, 'a:2:{i:94;i:0;i:96;i:1;}', NULL),
(1625, '07160743', 26, 25, 'a:2:{i:98;i:0;i:97;i:1;}', NULL),
(1626, '07160743', 26, 26, 'a:2:{i:101;i:0;i:103;i:1;}', NULL),
(1627, '07160743', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(1628, '07160743', 26, 28, 'a:2:{i:111;i:0;i:112;i:1;}', NULL),
(1629, '07160743', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(1630, '07160743', 26, 30, 'a:2:{i:118;i:0;i:117;i:1;}', NULL),
(1631, '07160743', 26, 31, 'a:1:{i:121;i:1;}', NULL),
(1632, '07160743', 26, 32, 'a:2:{i:127;i:0;i:125;i:1;}', NULL),
(1633, '07160743', 26, 33, 'a:2:{i:132;i:0;i:130;i:1;}', NULL),
(1634, '07160743', 26, 34, 'a:2:{i:134;i:0;i:133;i:1;}', NULL),
(1635, '07160743', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(1636, '07160743', 26, 36, 'a:1:{i:143;i:1;}', NULL),
(1637, '07160743', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(1638, '07160743', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(1639, '07160743', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(1640, '07160725', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(1641, '07160725', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(1642, '07160725', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(1643, '07160725', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(1644, '07160725', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(1645, '07160725', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(1646, '07160725', 26, 20, 'a:1:{i:80;i:1;}', NULL),
(1647, '07160725', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(1648, '07160725', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(1649, '07160725', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(1650, '07160725', 26, 24, 'a:2:{i:94;i:0;i:96;i:1;}', NULL),
(1651, '07160725', 26, 25, 'a:2:{i:98;i:0;i:97;i:1;}', NULL),
(1652, '07160725', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(1653, '07160725', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(1654, '07160725', 26, 28, 'a:2:{i:110;i:0;i:112;i:1;}', NULL),
(1655, '07160725', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(1656, '07160725', 26, 30, 'a:2:{i:118;i:0;i:117;i:1;}', NULL),
(1657, '07160725', 26, 31, 'a:1:{i:121;i:1;}', NULL),
(1658, '07160725', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(1659, '07160725', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(1660, '07160725', 26, 34, 'a:2:{i:134;i:0;i:133;i:1;}', NULL),
(1661, '07160725', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(1662, '07160725', 26, 36, 'a:2:{i:142;i:0;i:143;i:1;}', NULL),
(1663, '07160725', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(1664, '07160725', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(1665, '07160725', 26, 39, 'a:2:{i:154;i:0;i:156;i:1;}', NULL),
(1666, '07160737', 27, 40, 'a:1:{i:160;i:1;}', NULL),
(1667, '07160737', 27, 41, 'a:1:{i:161;i:1;}', NULL),
(1668, '07160737', 27, 42, 'a:1:{i:165;i:1;}', NULL),
(1669, '07160737', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(1670, '07160737', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(1671, '07160737', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(1672, '07160737', 27, 46, 'a:1:{i:182;i:1;}', NULL),
(1673, '07160737', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(1674, '07160737', 27, 48, 'a:1:{i:190;i:1;}', NULL),
(1675, '07160737', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(1676, '07160737', 27, 50, 'a:1:{i:199;i:1;}', NULL),
(1677, '07160737', 27, 51, 'a:1:{i:204;i:1;}', NULL),
(1678, '07160737', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(1679, '07160737', 27, 53, 'a:2:{i:209;i:1;i:211;i:0;}', NULL),
(1680, '07160737', 27, 54, 'a:1:{i:213;i:1;}', NULL),
(1681, '07160737', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(1682, '07160737', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(1683, '07160737', 27, 57, 'a:1:{i:225;i:1;}', NULL),
(1684, '07160737', 27, 58, 'a:1:{i:230;i:1;}', NULL),
(1685, '07160737', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(1686, '07160737', 27, 60, 'a:1:{i:237;i:1;}', NULL),
(1687, '07160737', 27, 61, 'a:1:{i:243;i:1;}', NULL),
(1688, '07160737', 27, 62, 'a:1:{i:248;i:1;}', NULL),
(1689, '07160737', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(1690, '07160737', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(1691, '07160737', 27, 65, 'a:1:{i:259;i:1;}', NULL),
(1692, '07160737', 27, 66, 'a:2:{i:264;i:0;i:263;i:1;}', NULL),
(1693, '07160737', 27, 67, 'a:1:{i:268;i:1;}', NULL),
(1694, '07160737', 27, 68, 'a:1:{i:270;i:1;}', NULL),
(1695, '07160737', 27, 69, 'a:1:{i:276;i:1;}', NULL),
(1696, '07160737', 27, 70, 'a:1:{i:280;i:1;}', NULL),
(1697, '07160737', 27, 71, 'a:1:{i:282;i:1;}', NULL),
(1698, '07160737', 27, 72, 'a:1:{i:286;i:1;}', NULL),
(1699, '07160737', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(1700, '07160714', 27, 40, 'a:3:{i:157;i:0;i:158;i:0;i:159;i:1;}', NULL),
(1701, '07160714', 27, 41, 'a:2:{i:164;i:0;i:161;i:1;}', NULL),
(1702, '07160714', 27, 42, 'a:2:{i:165;i:0;i:166;i:1;}', NULL),
(1703, '07160714', 27, 43, 'a:2:{i:171;i:1;i:172;i:0;}', NULL),
(1704, '07160714', 27, 44, 'a:2:{i:174;i:0;i:173;i:1;}', NULL),
(1705, '07160714', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(1706, '07160714', 27, 46, 'a:2:{i:182;i:1;i:183;i:0;}', NULL),
(1707, '07160714', 27, 47, 'a:2:{i:188;i:1;i:187;i:0;}', NULL),
(1708, '07160714', 27, 48, 'a:3:{i:192;i:0;i:190;i:0;i:189;i:1;}', NULL),
(1709, '07160714', 27, 49, 'a:2:{i:193;i:0;i:194;i:1;}', NULL),
(1710, '07160714', 27, 50, 'a:2:{i:199;i:0;i:198;i:1;}', NULL),
(1711, '07160714', 27, 51, 'a:2:{i:201;i:1;i:202;i:0;}', NULL),
(1712, '07160714', 27, 52, 'a:2:{i:206;i:1;i:207;i:0;}', NULL),
(1713, '07160714', 27, 53, 'a:4:{i:209;i:1;i:210;i:0;i:211;i:0;i:212;i:0;}', NULL),
(1714, '07160714', 27, 54, 'a:2:{i:216;i:1;i:215;i:0;}', NULL),
(1715, '07160714', 27, 55, 'a:2:{i:220;i:0;i:217;i:1;}', NULL),
(1716, '07160714', 27, 56, 'a:2:{i:223;i:1;i:222;i:0;}', NULL),
(1717, '07160714', 27, 57, 'a:2:{i:227;i:0;i:228;i:1;}', NULL),
(1718, '07160714', 27, 58, 'a:4:{i:229;i:0;i:232;i:0;i:231;i:0;i:230;i:1;}', NULL),
(1719, '07160714', 27, 59, 'a:2:{i:235;i:0;i:233;i:1;}', NULL),
(1720, '07160714', 27, 60, 'a:3:{i:238;i:0;i:237;i:0;i:240;i:1;}', NULL),
(1721, '07160714', 27, 61, 'a:3:{i:242;i:0;i:243;i:0;i:244;i:1;}', NULL),
(1722, '07160714', 27, 62, 'a:2:{i:246;i:1;i:245;i:0;}', NULL),
(1723, '07160714', 27, 63, 'a:2:{i:251;i:1;i:250;i:0;}', NULL),
(1724, '07160714', 27, 64, 'a:2:{i:256;i:1;i:255;i:0;}', NULL),
(1725, '07160714', 27, 65, 'a:2:{i:258;i:0;i:259;i:1;}', NULL),
(1726, '07160714', 27, 66, 'a:2:{i:261;i:0;i:263;i:1;}', NULL),
(1727, '07160714', 27, 67, 'a:3:{i:266;i:0;i:265;i:0;i:268;i:1;}', NULL),
(1728, '07160714', 27, 68, 'a:2:{i:269;i:1;i:270;i:0;}', NULL),
(1729, '07160714', 27, 69, 'a:2:{i:274;i:0;i:273;i:1;}', NULL),
(1730, '07160714', 27, 70, 'a:2:{i:277;i:0;i:279;i:1;}', NULL),
(1731, '07160714', 27, 71, 'a:2:{i:282;i:0;i:281;i:1;}', NULL),
(1732, '07160714', 27, 72, 'a:4:{i:285;i:0;i:286;i:0;i:287;i:1;i:288;i:0;}', NULL),
(1733, '07160714', 27, 73, 'a:2:{i:291;i:1;i:292;i:0;}', NULL),
(1734, '07160720', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(1735, '07160720', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(1736, '07160720', 26, 16, 'a:2:{i:64;i:1;i:61;i:0;}', NULL),
(1737, '07160720', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(1738, '07160720', 26, 18, 'a:2:{i:69;i:0;i:71;i:1;}', NULL),
(1739, '07160720', 26, 19, 'a:1:{i:73;i:1;}', NULL),
(1740, '07160720', 26, 20, 'a:2:{i:79;i:0;i:80;i:1;}', NULL),
(1741, '07160720', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(1742, '07160720', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(1743, '07160720', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(1744, '07160720', 26, 24, 'a:3:{i:94;i:0;i:93;i:0;i:96;i:1;}', NULL),
(1745, '07160720', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(1746, '07160720', 26, 26, 'a:2:{i:102;i:0;i:103;i:1;}', NULL),
(1747, '07160720', 26, 27, 'a:2:{i:106;i:0;i:105;i:1;}', NULL),
(1748, '07160720', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(1749, '07160720', 26, 29, 'a:2:{i:113;i:0;i:115;i:1;}', NULL),
(1750, '07160720', 26, 30, 'a:3:{i:118;i:0;i:117;i:1;i:120;i:0;}', NULL),
(1751, '07160720', 26, 31, 'a:1:{i:121;i:1;}', NULL),
(1752, '07160720', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(1753, '07160720', 26, 33, 'a:2:{i:129;i:0;i:130;i:1;}', NULL),
(1754, '07160720', 26, 34, 'a:1:{i:133;i:1;}', NULL),
(1755, '07160720', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(1756, '07160720', 26, 36, 'a:2:{i:141;i:0;i:143;i:1;}', NULL),
(1757, '07160720', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(1758, '07160720', 26, 38, 'a:3:{i:151;i:0;i:152;i:0;i:149;i:1;}', NULL),
(1759, '07160720', 26, 39, 'a:2:{i:153;i:0;i:156;i:1;}', NULL),
(1760, '07160713', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(1761, '07160713', 26, 15, 'a:2:{i:59;i:1;i:57;i:0;}', NULL),
(1762, '07160713', 26, 16, 'a:2:{i:61;i:0;i:64;i:1;}', NULL),
(1763, '07160713', 26, 17, 'a:2:{i:65;i:0;i:67;i:1;}', NULL),
(1764, '07160713', 26, 18, 'a:3:{i:72;i:0;i:69;i:0;i:71;i:1;}', NULL),
(1765, '07160713', 26, 19, 'a:1:{i:73;i:1;}', NULL),
(1766, '07160713', 26, 20, 'a:2:{i:77;i:0;i:80;i:1;}', NULL),
(1767, '07160713', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(1768, '07160713', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(1769, '07160713', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(1770, '07160713', 26, 24, 'a:2:{i:94;i:0;i:96;i:1;}', NULL),
(1771, '07160713', 26, 25, 'a:2:{i:99;i:0;i:97;i:1;}', NULL),
(1772, '07160713', 26, 26, 'a:3:{i:101;i:0;i:104;i:0;i:103;i:1;}', NULL),
(1773, '07160713', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(1774, '07160713', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(1775, '07160713', 26, 29, 'a:1:{i:114;i:1;}', NULL),
(1776, '07160713', 26, 30, 'a:2:{i:118;i:0;i:117;i:1;}', NULL),
(1777, '07160713', 26, 31, 'a:2:{i:123;i:0;i:121;i:1;}', NULL),
(1778, '07160713', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(1779, '07160713', 26, 33, 'a:2:{i:129;i:0;i:130;i:1;}', NULL),
(1780, '07160713', 26, 34, 'a:1:{i:133;i:1;}', NULL),
(1781, '07160713', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(1782, '07160713', 26, 36, 'a:2:{i:143;i:0;i:142;i:1;}', NULL),
(1783, '07160713', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(1784, '07160713', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(1785, '07160713', 26, 39, 'a:2:{i:153;i:0;i:156;i:1;}', NULL);
INSERT INTO `exercise_answer` (`id`, `studentid`, `paper_id`, `select_question_id`, `answer`, `memo`) VALUES
(1786, '07160733', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(1787, '07160733', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(1788, '07160733', 26, 16, 'a:2:{i:63;i:0;i:64;i:1;}', NULL),
(1789, '07160733', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(1790, '07160733', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(1791, '07160733', 26, 19, 'a:3:{i:75;i:0;i:74;i:0;i:73;i:1;}', NULL),
(1792, '07160733', 26, 20, 'a:3:{i:79;i:0;i:78;i:0;i:80;i:1;}', NULL),
(1793, '07160733', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(1794, '07160733', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(1795, '07160733', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(1796, '07160733', 26, 24, 'a:2:{i:94;i:0;i:96;i:1;}', NULL),
(1797, '07160733', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(1798, '07160733', 26, 26, 'a:2:{i:102;i:0;i:103;i:1;}', NULL),
(1799, '07160733', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(1800, '07160733', 26, 28, 'a:2:{i:109;i:0;i:112;i:1;}', NULL),
(1801, '07160733', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(1802, '07160733', 26, 30, 'a:2:{i:120;i:0;i:117;i:1;}', NULL),
(1803, '07160733', 26, 31, 'a:3:{i:123;i:0;i:124;i:0;i:121;i:1;}', NULL),
(1804, '07160733', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(1805, '07160733', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(1806, '07160733', 26, 34, 'a:2:{i:136;i:0;i:133;i:1;}', NULL),
(1807, '07160733', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(1808, '07160733', 26, 36, 'a:2:{i:144;i:0;i:143;i:1;}', NULL),
(1809, '07160733', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(1810, '07160733', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(1811, '07160733', 26, 39, 'a:2:{i:153;i:0;i:156;i:1;}', NULL),
(1812, '07160748', 27, 40, 'a:2:{i:158;i:0;i:159;i:1;}', NULL),
(1813, '07160748', 27, 41, 'a:1:{i:163;i:1;}', NULL),
(1814, '07160748', 27, 42, 'a:3:{i:165;i:0;i:166;i:0;i:167;i:1;}', NULL),
(1815, '07160748', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(1816, '07160748', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(1817, '07160748', 27, 45, 'a:1:{i:180;i:1;}', NULL),
(1818, '07160748', 27, 46, 'a:1:{i:183;i:1;}', NULL),
(1819, '07160748', 27, 47, 'a:1:{i:185;i:1;}', NULL),
(1820, '07160748', 27, 48, 'a:2:{i:190;i:0;i:189;i:1;}', NULL),
(1821, '07160748', 27, 49, 'a:1:{i:193;i:1;}', NULL),
(1822, '07160748', 27, 50, 'a:1:{i:197;i:1;}', NULL),
(1823, '07160748', 27, 51, 'a:1:{i:201;i:1;}', NULL),
(1824, '07160748', 27, 52, 'a:1:{i:208;i:1;}', NULL),
(1825, '07160748', 27, 53, 'a:2:{i:209;i:1;i:211;i:0;}', NULL),
(1826, '07160748', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(1827, '07160748', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(1828, '07160748', 27, 56, 'a:1:{i:224;i:1;}', NULL),
(1829, '07160748', 27, 57, 'a:3:{i:225;i:0;i:227;i:0;i:228;i:1;}', NULL),
(1830, '07160748', 27, 58, 'a:1:{i:229;i:1;}', NULL),
(1831, '07160748', 27, 59, 'a:1:{i:234;i:1;}', NULL),
(1832, '07160748', 27, 60, 'a:1:{i:240;i:1;}', NULL),
(1833, '07160748', 27, 61, 'a:1:{i:243;i:1;}', NULL),
(1834, '07160748', 27, 62, 'a:1:{i:245;i:1;}', NULL),
(1835, '07160748', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(1836, '07160748', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(1837, '07160748', 27, 65, 'a:1:{i:260;i:1;}', NULL),
(1838, '07160748', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(1839, '07160748', 27, 67, 'a:1:{i:265;i:1;}', NULL),
(1840, '07160748', 27, 68, 'a:1:{i:270;i:1;}', NULL),
(1841, '07160748', 27, 69, 'a:2:{i:274;i:0;i:273;i:1;}', NULL),
(1842, '07160748', 27, 70, 'a:2:{i:277;i:0;i:279;i:1;}', NULL),
(1843, '07160748', 27, 71, 'a:1:{i:281;i:1;}', NULL),
(1844, '07160748', 27, 72, 'a:1:{i:288;i:1;}', NULL),
(1845, '07160748', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(1846, '07160726', 27, 40, 'a:2:{i:160;i:0;i:159;i:1;}', NULL),
(1847, '07160726', 27, 41, 'a:3:{i:163;i:0;i:162;i:0;i:161;i:1;}', NULL),
(1848, '07160726', 27, 42, 'a:1:{i:166;i:1;}', NULL),
(1849, '07160726', 27, 43, 'a:2:{i:170;i:0;i:171;i:1;}', NULL),
(1850, '07160726', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(1851, '07160726', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(1852, '07160726', 27, 46, 'a:2:{i:183;i:0;i:182;i:1;}', NULL),
(1853, '07160726', 27, 47, 'a:1:{i:188;i:1;}', NULL),
(1854, '07160726', 27, 48, 'a:2:{i:190;i:0;i:189;i:1;}', NULL),
(1855, '07160726', 27, 49, 'a:2:{i:193;i:0;i:194;i:1;}', NULL),
(1856, '07160726', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(1857, '07160726', 27, 51, 'a:2:{i:204;i:0;i:201;i:1;}', NULL),
(1858, '07160726', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(1859, '07160726', 27, 53, 'a:1:{i:209;i:1;}', NULL),
(1860, '07160726', 27, 54, 'a:2:{i:215;i:0;i:216;i:1;}', NULL),
(1861, '07160726', 27, 55, 'a:2:{i:217;i:0;i:219;i:1;}', NULL),
(1862, '07160726', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(1863, '07160726', 27, 57, 'a:2:{i:227;i:0;i:228;i:1;}', NULL),
(1864, '07160726', 27, 58, 'a:2:{i:229;i:0;i:230;i:1;}', NULL),
(1865, '07160726', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(1866, '07160726', 27, 60, 'a:3:{i:237;i:0;i:239;i:0;i:240;i:1;}', NULL),
(1867, '07160726', 27, 61, 'a:1:{i:244;i:1;}', NULL),
(1868, '07160726', 27, 62, 'a:3:{i:245;i:0;i:247;i:0;i:246;i:1;}', NULL),
(1869, '07160726', 27, 63, 'a:2:{i:250;i:0;i:251;i:1;}', NULL),
(1870, '07160726', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(1871, '07160726', 27, 65, 'a:2:{i:257;i:0;i:259;i:1;}', NULL),
(1872, '07160726', 27, 66, 'a:3:{i:262;i:0;i:264;i:0;i:263;i:1;}', NULL),
(1873, '07160726', 27, 67, 'a:3:{i:266;i:0;i:265;i:0;i:268;i:1;}', NULL),
(1874, '07160726', 27, 68, 'a:2:{i:272;i:0;i:269;i:1;}', NULL),
(1875, '07160726', 27, 69, 'a:1:{i:273;i:1;}', NULL),
(1876, '07160726', 27, 70, 'a:2:{i:278;i:0;i:279;i:1;}', NULL),
(1877, '07160726', 27, 71, 'a:2:{i:282;i:0;i:281;i:1;}', NULL),
(1878, '07160726', 27, 72, 'a:2:{i:285;i:0;i:288;i:1;}', NULL),
(1879, '07160726', 27, 73, 'a:2:{i:290;i:0;i:291;i:1;}', NULL),
(1880, '07160730', 26, 14, 'a:2:{i:55;i:0;i:56;i:1;}', NULL),
(1881, '07160730', 26, 15, 'a:3:{i:57;i:0;i:59;i:1;i:60;i:0;}', NULL),
(1882, '07160730', 26, 16, 'a:2:{i:64;i:1;i:63;i:0;}', NULL),
(1883, '07160730', 26, 17, 'a:3:{i:65;i:0;i:67;i:1;i:66;i:0;}', NULL),
(1884, '07160730', 26, 18, 'a:2:{i:71;i:1;i:70;i:0;}', NULL),
(1885, '07160730', 26, 19, 'a:3:{i:75;i:0;i:73;i:1;i:74;i:0;}', NULL),
(1886, '07160730', 26, 20, 'a:3:{i:77;i:0;i:80;i:1;i:79;i:0;}', NULL),
(1887, '07160730', 26, 21, 'a:3:{i:81;i:0;i:82;i:0;i:83;i:1;}', NULL),
(1888, '07160730', 26, 22, 'a:2:{i:87;i:1;i:86;i:0;}', NULL),
(1889, '07160730', 26, 23, 'a:2:{i:90;i:1;i:91;i:0;}', NULL),
(1890, '07160730', 26, 24, 'a:2:{i:95;i:0;i:96;i:1;}', NULL),
(1891, '07160730', 26, 25, 'a:4:{i:99;i:0;i:100;i:0;i:97;i:1;i:98;i:0;}', NULL),
(1892, '07160730', 26, 26, 'a:3:{i:101;i:0;i:103;i:1;i:102;i:0;}', NULL),
(1893, '07160730', 26, 27, 'a:2:{i:106;i:0;i:105;i:1;}', NULL),
(1894, '07160730', 26, 28, 'a:2:{i:112;i:1;i:111;i:0;}', NULL),
(1895, '07160730', 26, 29, 'a:3:{i:113;i:0;i:115;i:1;i:114;i:0;}', NULL),
(1896, '07160730', 26, 30, 'a:4:{i:118;i:0;i:120;i:0;i:119;i:0;i:117;i:1;}', NULL),
(1897, '07160730', 26, 31, 'a:3:{i:124;i:0;i:121;i:1;i:122;i:0;}', NULL),
(1898, '07160730', 26, 32, 'a:3:{i:126;i:0;i:127;i:0;i:125;i:1;}', NULL),
(1899, '07160730', 26, 33, 'a:2:{i:130;i:1;i:131;i:0;}', NULL),
(1900, '07160730', 26, 34, 'a:2:{i:133;i:1;i:134;i:0;}', NULL),
(1901, '07160730', 26, 35, 'a:4:{i:140;i:1;i:138;i:0;i:137;i:0;i:139;i:0;}', NULL),
(1902, '07160730', 26, 36, 'a:3:{i:143;i:1;i:142;i:0;i:144;i:0;}', NULL),
(1903, '07160730', 26, 37, 'a:4:{i:145;i:0;i:146;i:0;i:148;i:1;i:147;i:0;}', NULL),
(1904, '07160730', 26, 38, 'a:2:{i:149;i:1;i:150;i:0;}', NULL),
(1905, '07160730', 26, 39, 'a:2:{i:156;i:1;i:155;i:0;}', NULL),
(1906, '07160723', 27, 40, 'a:2:{i:160;i:0;i:159;i:1;}', NULL),
(1907, '07160723', 27, 41, 'a:2:{i:164;i:0;i:161;i:1;}', NULL),
(1908, '07160723', 27, 42, 'a:2:{i:167;i:0;i:166;i:1;}', NULL),
(1909, '07160723', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(1910, '07160723', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(1911, '07160723', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(1912, '07160723', 27, 46, 'a:2:{i:183;i:0;i:182;i:1;}', NULL),
(1913, '07160723', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(1914, '07160723', 27, 48, 'a:2:{i:190;i:0;i:189;i:1;}', NULL),
(1915, '07160723', 27, 49, 'a:2:{i:193;i:0;i:194;i:1;}', NULL),
(1916, '07160723', 27, 50, 'a:2:{i:200;i:0;i:198;i:1;}', NULL),
(1917, '07160723', 27, 51, 'a:1:{i:201;i:1;}', NULL),
(1918, '07160723', 27, 52, 'a:2:{i:208;i:0;i:206;i:1;}', NULL),
(1919, '07160723', 27, 53, 'a:2:{i:211;i:0;i:209;i:1;}', NULL),
(1920, '07160723', 27, 54, 'a:3:{i:214;i:0;i:215;i:0;i:216;i:1;}', NULL),
(1921, '07160723', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(1922, '07160723', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(1923, '07160723', 27, 57, 'a:2:{i:228;i:1;i:227;i:0;}', NULL),
(1924, '07160723', 27, 58, 'a:2:{i:231;i:0;i:230;i:1;}', NULL),
(1925, '07160723', 27, 59, 'a:2:{i:234;i:0;i:233;i:1;}', NULL),
(1926, '07160723', 27, 60, 'a:2:{i:237;i:0;i:240;i:1;}', NULL),
(1927, '07160723', 27, 61, 'a:2:{i:242;i:0;i:244;i:1;}', NULL),
(1928, '07160723', 27, 62, 'a:2:{i:248;i:0;i:246;i:1;}', NULL),
(1929, '07160723', 27, 63, 'a:2:{i:250;i:0;i:251;i:1;}', NULL),
(1930, '07160723', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(1931, '07160723', 27, 65, 'a:1:{i:258;i:1;}', NULL),
(1932, '07160723', 27, 66, 'a:1:{i:264;i:1;}', NULL),
(1933, '07160723', 27, 67, 'a:2:{i:266;i:0;i:268;i:1;}', NULL),
(1934, '07160723', 27, 68, 'a:1:{i:269;i:1;}', NULL),
(1935, '07160723', 27, 69, 'a:2:{i:274;i:0;i:273;i:1;}', NULL),
(1936, '07160723', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(1937, '07160723', 27, 71, 'a:2:{i:282;i:0;i:281;i:1;}', NULL),
(1938, '07160723', 27, 72, 'a:2:{i:285;i:0;i:286;i:1;}', NULL),
(1939, '07160723', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(1940, '07160725', 27, 40, 'a:2:{i:158;i:0;i:159;i:1;}', NULL),
(1941, '07160725', 27, 41, 'a:1:{i:161;i:1;}', NULL),
(1942, '07160725', 27, 42, 'a:1:{i:166;i:1;}', NULL),
(1943, '07160725', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(1944, '07160725', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(1945, '07160725', 27, 45, 'a:1:{i:178;i:1;}', NULL),
(1946, '07160725', 27, 46, 'a:1:{i:182;i:1;}', NULL),
(1947, '07160725', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(1948, '07160725', 27, 48, 'a:1:{i:189;i:1;}', NULL),
(1949, '07160725', 27, 49, 'a:2:{i:193;i:0;i:194;i:1;}', NULL),
(1950, '07160725', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(1951, '07160725', 27, 51, 'a:1:{i:201;i:1;}', NULL),
(1952, '07160725', 27, 52, 'a:2:{i:205;i:0;i:206;i:1;}', NULL),
(1953, '07160725', 27, 53, 'a:2:{i:211;i:0;i:209;i:1;}', NULL),
(1954, '07160725', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(1955, '07160725', 27, 55, 'a:2:{i:217;i:1;i:219;i:0;}', NULL),
(1956, '07160725', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(1957, '07160725', 27, 57, 'a:1:{i:228;i:1;}', NULL),
(1958, '07160725', 27, 58, 'a:1:{i:230;i:1;}', NULL),
(1959, '07160725', 27, 59, 'a:2:{i:234;i:0;i:233;i:1;}', NULL),
(1960, '07160725', 27, 60, 'a:2:{i:237;i:0;i:240;i:1;}', NULL),
(1961, '07160725', 27, 61, 'a:2:{i:242;i:0;i:244;i:1;}', NULL),
(1962, '07160725', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(1963, '07160725', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(1964, '07160725', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(1965, '07160725', 27, 65, 'a:2:{i:260;i:0;i:259;i:1;}', NULL),
(1966, '07160725', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(1967, '07160725', 27, 67, 'a:1:{i:268;i:1;}', NULL),
(1968, '07160725', 27, 68, 'a:2:{i:270;i:0;i:269;i:1;}', NULL),
(1969, '07160725', 27, 69, 'a:1:{i:273;i:1;}', NULL),
(1970, '07160725', 27, 70, 'a:2:{i:280;i:0;i:279;i:1;}', NULL),
(1971, '07160725', 27, 71, 'a:1:{i:281;i:1;}', NULL),
(1972, '07160725', 27, 72, 'a:3:{i:286;i:0;i:285;i:0;i:288;i:1;}', NULL),
(1973, '07160725', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(1974, '07160724', 27, 40, 'a:1:{i:160;i:1;}', NULL),
(1975, '07160724', 27, 41, 'a:3:{i:163;i:0;i:164;i:0;i:161;i:1;}', NULL),
(1976, '07160724', 27, 42, 'a:1:{i:166;i:1;}', NULL),
(1977, '07160724', 27, 43, 'a:3:{i:171;i:1;i:172;i:0;i:170;i:0;}', NULL),
(1978, '07160724', 27, 44, 'a:2:{i:174;i:0;i:173;i:1;}', NULL),
(1979, '07160724', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(1980, '07160724', 27, 46, 'a:1:{i:182;i:1;}', NULL),
(1981, '07160724', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(1982, '07160724', 27, 48, 'a:1:{i:189;i:1;}', NULL),
(1983, '07160724', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(1984, '07160724', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(1985, '07160724', 27, 51, 'a:1:{i:201;i:1;}', NULL),
(1986, '07160724', 27, 52, 'a:2:{i:208;i:0;i:206;i:1;}', NULL),
(1987, '07160724', 27, 53, 'a:1:{i:209;i:1;}', NULL),
(1988, '07160724', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(1989, '07160724', 27, 55, 'a:2:{i:219;i:0;i:217;i:1;}', NULL),
(1990, '07160724', 27, 56, 'a:3:{i:222;i:0;i:223;i:1;i:224;i:0;}', NULL),
(1991, '07160724', 27, 57, 'a:1:{i:228;i:1;}', NULL),
(1992, '07160724', 27, 58, 'a:2:{i:232;i:0;i:230;i:1;}', NULL),
(1993, '07160724', 27, 59, 'a:2:{i:234;i:0;i:233;i:1;}', NULL),
(1994, '07160724', 27, 60, 'a:2:{i:240;i:1;i:239;i:0;}', NULL),
(1995, '07160724', 27, 61, 'a:2:{i:241;i:0;i:244;i:1;}', NULL),
(1996, '07160724', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(1997, '07160724', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(1998, '07160724', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(1999, '07160724', 27, 65, 'a:1:{i:259;i:1;}', NULL),
(2000, '07160724', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(2001, '07160724', 27, 67, 'a:2:{i:265;i:0;i:268;i:1;}', NULL),
(2002, '07160724', 27, 68, 'a:2:{i:270;i:0;i:269;i:1;}', NULL),
(2003, '07160724', 27, 69, 'a:1:{i:273;i:1;}', NULL),
(2004, '07160724', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(2005, '07160724', 27, 71, 'a:2:{i:282;i:0;i:281;i:1;}', NULL),
(2006, '07160724', 27, 72, 'a:2:{i:286;i:0;i:288;i:1;}', NULL),
(2007, '07160724', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(2008, '07160739', 27, 40, 'a:1:{i:159;i:1;}', NULL),
(2009, '07160739', 27, 41, 'a:1:{i:161;i:1;}', NULL),
(2010, '07160739', 27, 42, 'a:1:{i:166;i:1;}', NULL),
(2011, '07160739', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(2012, '07160739', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(2013, '07160739', 27, 45, 'a:1:{i:179;i:1;}', NULL),
(2014, '07160739', 27, 46, 'a:1:{i:183;i:1;}', NULL),
(2015, '07160739', 27, 47, 'a:1:{i:188;i:1;}', NULL),
(2016, '07160739', 27, 48, 'a:1:{i:189;i:1;}', NULL),
(2017, '07160739', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(2018, '07160739', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(2019, '07160739', 27, 51, 'a:1:{i:201;i:1;}', NULL),
(2020, '07160739', 27, 52, 'a:2:{i:208;i:0;i:206;i:1;}', NULL),
(2021, '07160739', 27, 53, 'a:1:{i:209;i:1;}', NULL),
(2022, '07160739', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(2023, '07160739', 27, 55, 'a:1:{i:219;i:1;}', NULL),
(2024, '07160739', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(2025, '07160739', 27, 57, 'a:1:{i:228;i:1;}', NULL),
(2026, '07160739', 27, 58, 'a:1:{i:232;i:1;}', NULL),
(2027, '07160739', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(2028, '07160739', 27, 60, 'a:1:{i:240;i:1;}', NULL),
(2029, '07160739', 27, 61, 'a:2:{i:243;i:0;i:241;i:1;}', NULL),
(2030, '07160739', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(2031, '07160739', 27, 63, 'a:2:{i:249;i:0;i:251;i:1;}', NULL),
(2032, '07160739', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(2033, '07160739', 27, 65, 'a:1:{i:259;i:1;}', NULL),
(2034, '07160739', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(2035, '07160739', 27, 67, 'a:1:{i:268;i:1;}', NULL),
(2036, '07160739', 27, 68, 'a:1:{i:269;i:1;}', NULL),
(2037, '07160739', 27, 69, 'a:1:{i:274;i:1;}', NULL),
(2038, '07160739', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(2039, '07160739', 27, 71, 'a:1:{i:281;i:1;}', NULL),
(2040, '07160739', 27, 72, 'a:1:{i:288;i:1;}', NULL),
(2041, '07160739', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(2042, '07160713', 27, 40, 'a:1:{i:159;i:1;}', NULL),
(2043, '07160713', 27, 41, 'a:1:{i:161;i:1;}', NULL),
(2044, '07160713', 27, 42, 'a:1:{i:168;i:1;}', NULL),
(2045, '07160713', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(2046, '07160713', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(2047, '07160713', 27, 45, 'a:1:{i:178;i:1;}', NULL),
(2048, '07160713', 27, 46, 'a:1:{i:183;i:1;}', NULL),
(2049, '07160713', 27, 47, 'a:1:{i:185;i:1;}', NULL),
(2050, '07160713', 27, 48, '', NULL),
(2051, '07160713', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(2052, '07160713', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(2053, '07160713', 27, 51, 'a:2:{i:204;i:0;i:203;i:1;}', NULL),
(2054, '07160713', 27, 52, 'a:1:{i:208;i:1;}', NULL),
(2055, '07160713', 27, 53, 'a:1:{i:209;i:1;}', NULL),
(2056, '07160713', 27, 54, '', NULL),
(2057, '07160713', 27, 55, '', NULL),
(2058, '07160713', 27, 56, '', NULL),
(2059, '07160713', 27, 57, '', NULL),
(2060, '07160713', 27, 58, '', NULL),
(2061, '07160713', 27, 59, '', NULL),
(2062, '07160713', 27, 60, '', NULL),
(2063, '07160713', 27, 61, '', NULL),
(2064, '07160713', 27, 62, '', NULL),
(2065, '07160713', 27, 63, '', NULL),
(2066, '07160713', 27, 64, '', NULL),
(2067, '07160713', 27, 65, '', NULL),
(2068, '07160713', 27, 66, '', NULL),
(2069, '07160713', 27, 67, '', NULL),
(2070, '07160713', 27, 68, '', NULL),
(2071, '07160713', 27, 69, '', NULL),
(2072, '07160713', 27, 70, '', NULL),
(2073, '07160713', 27, 71, '', NULL),
(2074, '07160713', 27, 72, '', NULL),
(2075, '07160713', 27, 73, '', NULL),
(2076, '07160736', 27, 40, 'a:1:{i:158;i:1;}', NULL),
(2077, '07160736', 27, 41, 'a:1:{i:163;i:1;}', NULL),
(2078, '07160736', 27, 42, 'a:1:{i:167;i:1;}', NULL),
(2079, '07160736', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(2080, '07160736', 27, 44, 'a:1:{i:174;i:1;}', NULL),
(2081, '07160736', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(2082, '07160736', 27, 46, 'a:1:{i:182;i:1;}', NULL),
(2083, '07160736', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(2084, '07160736', 27, 48, 'a:1:{i:191;i:1;}', NULL),
(2085, '07160736', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(2086, '07160736', 27, 50, 'a:1:{i:200;i:1;}', NULL),
(2087, '07160736', 27, 51, 'a:1:{i:201;i:1;}', NULL),
(2088, '07160736', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(2089, '07160736', 27, 53, 'a:1:{i:209;i:1;}', NULL),
(2090, '07160736', 27, 54, 'a:1:{i:213;i:1;}', NULL),
(2091, '07160736', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(2092, '07160736', 27, 56, 'a:2:{i:221;i:0;i:224;i:1;}', NULL),
(2093, '07160736', 27, 57, 'a:1:{i:227;i:1;}', NULL),
(2094, '07160736', 27, 58, 'a:1:{i:229;i:1;}', NULL),
(2095, '07160736', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(2096, '07160736', 27, 60, 'a:2:{i:239;i:0;i:237;i:1;}', NULL),
(2097, '07160736', 27, 61, 'a:2:{i:243;i:0;i:241;i:1;}', NULL),
(2098, '07160736', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(2099, '07160736', 27, 63, 'a:2:{i:252;i:0;i:251;i:1;}', NULL),
(2100, '07160736', 27, 64, 'a:1:{i:254;i:1;}', NULL),
(2101, '07160736', 27, 65, 'a:2:{i:260;i:0;i:258;i:1;}', NULL),
(2102, '07160736', 27, 66, 'a:1:{i:264;i:1;}', NULL),
(2103, '07160736', 27, 67, 'a:2:{i:267;i:0;i:266;i:1;}', NULL),
(2104, '07160736', 27, 68, 'a:1:{i:269;i:1;}', NULL),
(2105, '07160736', 27, 69, 'a:2:{i:273;i:0;i:274;i:1;}', NULL),
(2106, '07160736', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(2107, '07160736', 27, 71, 'a:1:{i:284;i:1;}', NULL),
(2108, '07160736', 27, 72, 'a:1:{i:285;i:1;}', NULL),
(2109, '07160736', 27, 73, 'a:1:{i:289;i:1;}', NULL),
(2110, '07160709', 27, 40, 'a:2:{i:157;i:0;i:159;i:1;}', NULL),
(2111, '07160709', 27, 41, 'a:2:{i:163;i:0;i:161;i:1;}', NULL),
(2112, '07160709', 27, 42, 'a:2:{i:167;i:0;i:166;i:1;}', NULL),
(2113, '07160709', 27, 43, 'a:2:{i:171;i:1;i:170;i:0;}', NULL),
(2114, '07160709', 27, 44, 'a:2:{i:173;i:1;i:174;i:0;}', NULL),
(2115, '07160709', 27, 45, 'a:1:{i:178;i:1;}', NULL),
(2116, '07160709', 27, 46, 'a:2:{i:183;i:0;i:182;i:1;}', NULL),
(2117, '07160709', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(2118, '07160709', 27, 48, 'a:2:{i:192;i:0;i:189;i:1;}', NULL),
(2119, '07160709', 27, 49, 'a:2:{i:195;i:0;i:194;i:1;}', NULL),
(2120, '07160709', 27, 50, 'a:2:{i:199;i:0;i:198;i:1;}', NULL),
(2121, '07160709', 27, 51, 'a:1:{i:201;i:1;}', NULL),
(2122, '07160709', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(2123, '07160709', 27, 53, 'a:2:{i:211;i:0;i:209;i:1;}', NULL),
(2124, '07160709', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(2125, '07160709', 27, 55, 'a:2:{i:219;i:0;i:217;i:1;}', NULL),
(2126, '07160709', 27, 56, 'a:2:{i:224;i:0;i:223;i:1;}', NULL),
(2127, '07160709', 27, 57, 'a:3:{i:227;i:0;i:225;i:0;i:228;i:1;}', NULL),
(2128, '07160709', 27, 58, 'a:3:{i:229;i:0;i:232;i:0;i:230;i:1;}', NULL),
(2129, '07160709', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(2130, '07160709', 27, 60, 'a:3:{i:237;i:0;i:239;i:0;i:240;i:1;}', NULL),
(2131, '07160709', 27, 61, 'a:3:{i:242;i:0;i:241;i:0;i:244;i:1;}', NULL),
(2132, '07160709', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(2133, '07160709', 27, 63, 'a:2:{i:252;i:0;i:251;i:1;}', NULL),
(2134, '07160709', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(2135, '07160709', 27, 65, 'a:2:{i:258;i:0;i:259;i:1;}', NULL),
(2136, '07160709', 27, 66, 'a:3:{i:261;i:0;i:264;i:1;i:263;i:0;}', NULL),
(2137, '07160709', 27, 67, 'a:2:{i:265;i:0;i:268;i:1;}', NULL),
(2138, '07160709', 27, 68, 'a:3:{i:270;i:0;i:271;i:0;i:269;i:1;}', NULL),
(2139, '07160709', 27, 69, 'a:2:{i:276;i:0;i:273;i:1;}', NULL),
(2140, '07160709', 27, 70, 'a:2:{i:278;i:0;i:279;i:1;}', NULL),
(2141, '07160709', 27, 71, 'a:2:{i:282;i:0;i:281;i:1;}', NULL),
(2142, '07160709', 27, 72, 'a:3:{i:287;i:0;i:285;i:0;i:288;i:1;}', NULL),
(2143, '07160709', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(2144, '07160715', 26, 14, 'a:1:{i:55;i:1;}', NULL),
(2145, '07160715', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(2146, '07160715', 26, 16, 'a:1:{i:61;i:1;}', NULL),
(2147, '07160715', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(2148, '07160715', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(2149, '07160715', 26, 19, 'a:1:{i:73;i:1;}', NULL),
(2150, '07160715', 26, 20, 'a:1:{i:79;i:1;}', NULL),
(2151, '07160715', 26, 21, 'a:1:{i:84;i:1;}', NULL),
(2152, '07160715', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(2153, '07160715', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(2154, '07160715', 26, 24, 'a:1:{i:94;i:1;}', NULL),
(2155, '07160715', 26, 25, 'a:1:{i:100;i:1;}', NULL),
(2156, '07160715', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(2157, '07160715', 26, 27, 'a:2:{i:106;i:0;i:105;i:1;}', NULL),
(2158, '07160715', 26, 28, 'a:1:{i:109;i:1;}', NULL),
(2159, '07160715', 26, 29, 'a:1:{i:113;i:1;}', NULL),
(2160, '07160715', 26, 30, 'a:1:{i:117;i:1;}', NULL),
(2161, '07160715', 26, 31, 'a:1:{i:123;i:1;}', NULL),
(2162, '07160715', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(2163, '07160715', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(2164, '07160715', 26, 34, 'a:1:{i:135;i:1;}', NULL),
(2165, '07160715', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(2166, '07160715', 26, 36, 'a:1:{i:141;i:1;}', NULL),
(2167, '07160715', 26, 37, 'a:1:{i:145;i:1;}', NULL),
(2168, '07160715', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(2169, '07160715', 26, 39, 'a:2:{i:156;i:1;i:153;i:0;}', NULL),
(2170, '07160707', 27, 40, 'a:1:{i:159;i:1;}', NULL),
(2171, '07160707', 27, 41, 'a:2:{i:162;i:0;i:161;i:1;}', NULL),
(2172, '07160707', 27, 42, 'a:2:{i:167;i:0;i:166;i:1;}', NULL),
(2173, '07160707', 27, 43, 'a:2:{i:172;i:0;i:171;i:1;}', NULL),
(2174, '07160707', 27, 44, 'a:4:{i:174;i:0;i:175;i:0;i:176;i:0;i:173;i:1;}', NULL),
(2175, '07160707', 27, 45, 'a:1:{i:178;i:1;}', NULL),
(2176, '07160707', 27, 46, 'a:1:{i:182;i:1;}', NULL),
(2177, '07160707', 27, 47, 'a:1:{i:188;i:1;}', NULL),
(2178, '07160707', 27, 48, 'a:2:{i:190;i:0;i:189;i:1;}', NULL),
(2179, '07160707', 27, 49, 'a:2:{i:195;i:0;i:194;i:1;}', NULL),
(2180, '07160707', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(2181, '07160707', 27, 51, 'a:2:{i:203;i:0;i:201;i:1;}', NULL),
(2182, '07160707', 27, 52, 'a:2:{i:207;i:0;i:206;i:1;}', NULL),
(2183, '07160707', 27, 53, 'a:2:{i:210;i:0;i:209;i:1;}', NULL),
(2184, '07160707', 27, 54, 'a:2:{i:215;i:0;i:216;i:1;}', NULL),
(2185, '07160707', 27, 55, 'a:4:{i:220;i:0;i:219;i:0;i:218;i:0;i:217;i:1;}', NULL),
(2186, '07160707', 27, 56, 'a:2:{i:223;i:1;i:224;i:0;}', NULL),
(2187, '07160707', 27, 57, 'a:3:{i:227;i:0;i:225;i:0;i:228;i:1;}', NULL),
(2188, '07160707', 27, 58, 'a:2:{i:229;i:0;i:230;i:1;}', NULL),
(2189, '07160707', 27, 59, 'a:2:{i:235;i:0;i:233;i:1;}', NULL),
(2190, '07160707', 27, 60, 'a:2:{i:239;i:0;i:240;i:1;}', NULL),
(2191, '07160707', 27, 61, 'a:2:{i:241;i:0;i:244;i:1;}', NULL),
(2192, '07160707', 27, 62, 'a:2:{i:248;i:0;i:246;i:1;}', NULL),
(2193, '07160707', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(2194, '07160707', 27, 64, 'a:2:{i:254;i:0;i:256;i:1;}', NULL),
(2195, '07160707', 27, 65, 'a:2:{i:258;i:0;i:259;i:1;}', NULL),
(2196, '07160707', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(2197, '07160707', 27, 67, 'a:3:{i:267;i:0;i:265;i:0;i:268;i:1;}', NULL),
(2198, '07160707', 27, 68, 'a:1:{i:269;i:1;}', NULL),
(2199, '07160707', 27, 69, 'a:2:{i:275;i:0;i:273;i:1;}', NULL),
(2200, '07160707', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(2201, '07160707', 27, 71, 'a:2:{i:282;i:0;i:281;i:1;}', NULL),
(2202, '07160707', 27, 72, 'a:3:{i:287;i:0;i:285;i:0;i:288;i:1;}', NULL),
(2203, '07160707', 27, 73, 'a:2:{i:292;i:0;i:291;i:1;}', NULL),
(2204, '07160745', 27, 40, 'a:1:{i:160;i:1;}', NULL),
(2205, '07160745', 27, 41, 'a:1:{i:163;i:1;}', NULL),
(2206, '07160745', 27, 42, 'a:1:{i:166;i:1;}', NULL),
(2207, '07160745', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(2208, '07160745', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(2209, '07160745', 27, 45, 'a:1:{i:179;i:1;}', NULL),
(2210, '07160745', 27, 46, 'a:1:{i:182;i:1;}', NULL),
(2211, '07160745', 27, 47, 'a:1:{i:185;i:1;}', NULL),
(2212, '07160745', 27, 48, 'a:1:{i:191;i:1;}', NULL),
(2213, '07160745', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(2214, '07160745', 27, 50, 'a:1:{i:197;i:1;}', NULL),
(2215, '07160745', 27, 51, 'a:1:{i:203;i:1;}', NULL),
(2216, '07160745', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(2217, '07160745', 27, 53, 'a:1:{i:209;i:1;}', NULL),
(2218, '07160745', 27, 54, 'a:1:{i:213;i:1;}', NULL),
(2219, '07160745', 27, 55, 'a:1:{i:219;i:1;}', NULL),
(2220, '07160745', 27, 56, 'a:1:{i:224;i:1;}', NULL),
(2221, '07160745', 27, 57, 'a:1:{i:226;i:1;}', NULL),
(2222, '07160745', 27, 58, 'a:1:{i:229;i:1;}', NULL),
(2223, '07160745', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(2224, '07160745', 27, 60, 'a:1:{i:240;i:1;}', NULL),
(2225, '07160745', 27, 61, 'a:1:{i:243;i:1;}', NULL),
(2226, '07160745', 27, 62, 'a:1:{i:248;i:1;}', NULL),
(2227, '07160745', 27, 63, 'a:1:{i:252;i:1;}', NULL),
(2228, '07160745', 27, 64, 'a:1:{i:253;i:1;}', NULL),
(2229, '07160745', 27, 65, 'a:1:{i:259;i:1;}', NULL),
(2230, '07160745', 27, 66, 'a:1:{i:264;i:1;}', NULL),
(2231, '07160745', 27, 67, 'a:1:{i:266;i:1;}', NULL),
(2232, '07160745', 27, 68, 'a:2:{i:270;i:1;i:271;i:0;}', NULL),
(2233, '07160745', 27, 69, 'a:1:{i:276;i:1;}', NULL),
(2234, '07160745', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(2235, '07160745', 27, 71, 'a:1:{i:282;i:1;}', NULL),
(2236, '07160745', 27, 72, 'a:1:{i:287;i:1;}', NULL),
(2237, '07160745', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(2238, '07160746', 27, 40, 'a:1:{i:160;i:1;}', NULL),
(2239, '07160746', 27, 41, 'a:2:{i:161;i:0;i:164;i:1;}', NULL),
(2240, '07160746', 27, 42, 'a:2:{i:168;i:1;i:167;i:0;}', NULL),
(2241, '07160746', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(2242, '07160746', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(2243, '07160746', 27, 45, 'a:1:{i:179;i:1;}', NULL),
(2244, '07160746', 27, 46, 'a:1:{i:183;i:1;}', NULL),
(2245, '07160746', 27, 47, 'a:1:{i:188;i:1;}', NULL),
(2246, '07160746', 27, 48, 'a:1:{i:190;i:1;}', NULL),
(2247, '07160746', 27, 49, 'a:1:{i:193;i:1;}', NULL),
(2248, '07160746', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(2249, '07160746', 27, 51, 'a:1:{i:203;i:1;}', NULL),
(2250, '07160746', 27, 52, 'a:1:{i:208;i:1;}', NULL),
(2251, '07160746', 27, 53, 'a:3:{i:211;i:0;i:210;i:0;i:209;i:1;}', NULL),
(2252, '07160746', 27, 54, 'a:1:{i:214;i:1;}', NULL),
(2253, '07160746', 27, 55, 'a:1:{i:219;i:1;}', NULL),
(2254, '07160746', 27, 56, 'a:4:{i:223;i:1;i:224;i:0;i:222;i:0;i:221;i:0;}', NULL),
(2255, '07160746', 27, 57, 'a:1:{i:227;i:1;}', NULL),
(2256, '07160746', 27, 58, 'a:1:{i:229;i:1;}', NULL),
(2257, '07160746', 27, 59, 'a:2:{i:233;i:0;i:234;i:1;}', NULL),
(2258, '07160746', 27, 60, 'a:1:{i:240;i:1;}', NULL),
(2259, '07160746', 27, 61, 'a:1:{i:244;i:1;}', NULL),
(2260, '07160746', 27, 62, 'a:1:{i:245;i:1;}', NULL),
(2261, '07160746', 27, 63, 'a:2:{i:250;i:0;i:251;i:1;}', NULL),
(2262, '07160746', 27, 64, 'a:2:{i:253;i:0;i:254;i:1;}', NULL),
(2263, '07160746', 27, 65, 'a:2:{i:258;i:0;i:257;i:1;}', NULL),
(2264, '07160746', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(2265, '07160746', 27, 67, 'a:1:{i:265;i:1;}', NULL),
(2266, '07160746', 27, 68, 'a:1:{i:271;i:1;}', NULL),
(2267, '07160746', 27, 69, 'a:1:{i:276;i:1;}', NULL),
(2268, '07160746', 27, 70, 'a:2:{i:277;i:0;i:280;i:1;}', NULL),
(2269, '07160746', 27, 71, 'a:1:{i:282;i:1;}', NULL),
(2270, '07160746', 27, 72, 'a:1:{i:288;i:1;}', NULL),
(2271, '07160746', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(2272, '07160717', 27, 40, 'a:2:{i:159;i:1;i:160;i:0;}', NULL),
(2273, '07160717', 27, 41, 'a:1:{i:163;i:1;}', NULL),
(2274, '07160717', 27, 42, 'a:1:{i:165;i:1;}', NULL),
(2275, '07160717', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(2276, '07160717', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(2277, '07160717', 27, 45, 'a:1:{i:179;i:1;}', NULL),
(2278, '07160717', 27, 46, 'a:1:{i:182;i:1;}', NULL),
(2279, '07160717', 27, 47, 'a:1:{i:188;i:1;}', NULL),
(2280, '07160717', 27, 48, 'a:1:{i:190;i:1;}', NULL),
(2281, '07160717', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(2282, '07160717', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(2283, '07160717', 27, 51, 'a:1:{i:201;i:1;}', NULL),
(2284, '07160717', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(2285, '07160717', 27, 53, 'a:4:{i:209;i:1;i:210;i:0;i:211;i:0;i:212;i:0;}', NULL),
(2286, '07160717', 27, 54, 'a:2:{i:215;i:0;i:216;i:1;}', NULL),
(2287, '07160717', 27, 55, 'a:2:{i:218;i:0;i:217;i:1;}', NULL),
(2288, '07160717', 27, 56, 'a:2:{i:224;i:1;i:221;i:0;}', NULL),
(2289, '07160717', 27, 57, 'a:3:{i:226;i:0;i:225;i:0;i:228;i:1;}', NULL),
(2290, '07160717', 27, 58, 'a:1:{i:230;i:1;}', NULL),
(2291, '07160717', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(2292, '07160717', 27, 60, 'a:1:{i:237;i:1;}', NULL),
(2293, '07160717', 27, 61, 'a:1:{i:243;i:1;}', NULL),
(2294, '07160717', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(2295, '07160717', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(2296, '07160717', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(2297, '07160717', 27, 65, 'a:2:{i:258;i:1;i:257;i:0;}', NULL),
(2298, '07160717', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(2299, '07160717', 27, 67, 'a:2:{i:266;i:0;i:265;i:1;}', NULL),
(2300, '07160717', 27, 68, 'a:2:{i:272;i:0;i:270;i:1;}', NULL),
(2301, '07160717', 27, 69, 'a:2:{i:274;i:0;i:276;i:1;}', NULL),
(2302, '07160717', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(2303, '07160717', 27, 71, 'a:1:{i:284;i:1;}', NULL),
(2304, '07160717', 27, 72, 'a:2:{i:288;i:0;i:287;i:1;}', NULL),
(2305, '07160717', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(2306, '07160711', 27, 40, 'a:1:{i:160;i:1;}', NULL),
(2307, '07160711', 27, 41, 'a:1:{i:163;i:1;}', NULL),
(2308, '07160711', 27, 42, 'a:2:{i:166;i:1;i:165;i:0;}', NULL),
(2309, '07160711', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(2310, '07160711', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(2311, '07160711', 27, 45, 'a:1:{i:178;i:1;}', NULL),
(2312, '07160711', 27, 46, 'a:1:{i:183;i:1;}', NULL),
(2313, '07160711', 27, 47, '', NULL),
(2314, '07160711', 27, 48, '', NULL),
(2315, '07160711', 27, 49, '', NULL),
(2316, '07160711', 27, 50, '', NULL),
(2317, '07160711', 27, 51, '', NULL),
(2318, '07160711', 27, 52, '', NULL),
(2319, '07160711', 27, 53, '', NULL),
(2320, '07160711', 27, 54, '', NULL),
(2321, '07160711', 27, 55, '', NULL),
(2322, '07160711', 27, 56, '', NULL),
(2323, '07160711', 27, 57, '', NULL),
(2324, '07160711', 27, 58, '', NULL),
(2325, '07160711', 27, 59, '', NULL),
(2326, '07160711', 27, 60, '', NULL),
(2327, '07160711', 27, 61, '', NULL),
(2328, '07160711', 27, 62, '', NULL),
(2329, '07160711', 27, 63, '', NULL),
(2330, '07160711', 27, 64, '', NULL),
(2331, '07160711', 27, 65, '', NULL),
(2332, '07160711', 27, 66, '', NULL),
(2333, '07160711', 27, 67, '', NULL),
(2334, '07160711', 27, 68, '', NULL),
(2335, '07160711', 27, 69, '', NULL),
(2336, '07160711', 27, 70, '', NULL),
(2337, '07160711', 27, 71, '', NULL),
(2338, '07160711', 27, 72, '', NULL),
(2339, '07160711', 27, 73, '', NULL),
(2340, '07160740', 27, 40, 'a:2:{i:157;i:0;i:159;i:1;}', NULL),
(2341, '07160740', 27, 41, 'a:2:{i:161;i:1;i:162;i:0;}', NULL),
(2342, '07160740', 27, 42, 'a:4:{i:165;i:0;i:167;i:0;i:166;i:0;i:168;i:1;}', NULL),
(2343, '07160740', 27, 43, 'a:2:{i:171;i:1;i:170;i:0;}', NULL),
(2344, '07160740', 27, 44, 'a:2:{i:173;i:1;i:174;i:0;}', NULL),
(2345, '07160740', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(2346, '07160740', 27, 46, 'a:2:{i:182;i:0;i:183;i:1;}', NULL),
(2347, '07160740', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(2348, '07160740', 27, 48, 'a:2:{i:189;i:1;i:190;i:0;}', NULL),
(2349, '07160740', 27, 49, 'a:2:{i:195;i:1;i:196;i:0;}', NULL),
(2350, '07160740', 27, 50, 'a:2:{i:198;i:1;i:199;i:0;}', NULL),
(2351, '07160740', 27, 51, 'a:2:{i:201;i:1;i:202;i:0;}', NULL),
(2352, '07160740', 27, 52, 'a:2:{i:206;i:1;i:207;i:0;}', NULL),
(2353, '07160740', 27, 53, 'a:3:{i:212;i:0;i:211;i:0;i:209;i:1;}', NULL),
(2354, '07160740', 27, 54, 'a:2:{i:216;i:1;i:214;i:0;}', NULL),
(2355, '07160740', 27, 55, 'a:2:{i:217;i:1;i:220;i:0;}', NULL),
(2356, '07160740', 27, 56, 'a:2:{i:223;i:1;i:222;i:0;}', NULL),
(2357, '07160740', 27, 57, 'a:2:{i:226;i:0;i:228;i:1;}', NULL),
(2358, '07160740', 27, 58, 'a:2:{i:229;i:0;i:230;i:1;}', NULL),
(2359, '07160740', 27, 59, 'a:2:{i:233;i:1;i:234;i:0;}', NULL),
(2360, '07160740', 27, 60, 'a:2:{i:237;i:0;i:240;i:1;}', NULL),
(2361, '07160740', 27, 61, 'a:3:{i:243;i:0;i:241;i:1;i:242;i:0;}', NULL),
(2362, '07160740', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(2363, '07160740', 27, 63, 'a:3:{i:252;i:0;i:250;i:0;i:251;i:1;}', NULL),
(2364, '07160740', 27, 64, 'a:2:{i:256;i:1;i:255;i:0;}', NULL),
(2365, '07160740', 27, 65, 'a:2:{i:260;i:1;i:259;i:0;}', NULL),
(2366, '07160740', 27, 66, 'a:2:{i:261;i:1;i:262;i:0;}', NULL),
(2367, '07160740', 27, 67, 'a:2:{i:268;i:1;i:267;i:0;}', NULL),
(2368, '07160740', 27, 68, 'a:2:{i:271;i:1;i:270;i:0;}', NULL),
(2369, '07160740', 27, 69, 'a:2:{i:273;i:1;i:274;i:0;}', NULL),
(2370, '07160740', 27, 70, 'a:2:{i:278;i:1;i:277;i:0;}', NULL),
(2371, '07160740', 27, 71, 'a:2:{i:282;i:0;i:281;i:1;}', NULL),
(2372, '07160740', 27, 72, 'a:2:{i:285;i:0;i:288;i:1;}', NULL),
(2373, '07160740', 27, 73, 'a:2:{i:291;i:1;i:290;i:0;}', NULL),
(2374, '07160730', 27, 40, 'a:3:{i:160;i:0;i:159;i:1;i:158;i:0;}', NULL),
(2375, '07160730', 27, 41, 'a:4:{i:161;i:1;i:162;i:0;i:163;i:0;i:164;i:0;}', NULL),
(2376, '07160730', 27, 42, 'a:3:{i:167;i:0;i:166;i:1;i:165;i:0;}', NULL),
(2377, '07160730', 27, 43, 'a:4:{i:169;i:0;i:170;i:0;i:171;i:1;i:172;i:0;}', NULL),
(2378, '07160730', 27, 44, 'a:3:{i:175;i:0;i:174;i:0;i:173;i:1;}', NULL),
(2379, '07160730', 27, 45, 'a:3:{i:178;i:1;i:179;i:0;i:177;i:0;}', NULL),
(2380, '07160730', 27, 46, 'a:2:{i:183;i:0;i:182;i:1;}', NULL),
(2381, '07160730', 27, 47, 'a:2:{i:188;i:1;i:187;i:0;}', NULL),
(2382, '07160730', 27, 48, 'a:2:{i:189;i:1;i:190;i:0;}', NULL),
(2383, '07160730', 27, 49, 'a:3:{i:193;i:0;i:194;i:1;i:195;i:0;}', NULL),
(2384, '07160730', 27, 50, 'a:3:{i:198;i:1;i:199;i:0;i:197;i:0;}', NULL),
(2385, '07160730', 27, 51, 'a:2:{i:201;i:1;i:202;i:0;}', NULL),
(2386, '07160730', 27, 52, 'a:2:{i:206;i:1;i:207;i:0;}', NULL),
(2387, '07160730', 27, 53, 'a:3:{i:211;i:0;i:209;i:1;i:210;i:0;}', NULL),
(2388, '07160730', 27, 54, 'a:2:{i:216;i:1;i:215;i:0;}', NULL),
(2389, '07160730', 27, 55, 'a:3:{i:217;i:1;i:218;i:0;i:219;i:0;}', NULL),
(2390, '07160730', 27, 56, 'a:3:{i:224;i:0;i:223;i:1;i:222;i:0;}', NULL),
(2391, '07160730', 27, 57, 'a:3:{i:228;i:1;i:226;i:0;i:227;i:0;}', NULL),
(2392, '07160730', 27, 58, 'a:3:{i:229;i:0;i:230;i:1;i:231;i:0;}', NULL),
(2393, '07160730', 27, 59, 'a:3:{i:235;i:0;i:233;i:1;i:234;i:0;}', NULL),
(2394, '07160730', 27, 60, 'a:4:{i:240;i:1;i:238;i:0;i:237;i:0;i:239;i:0;}', NULL),
(2395, '07160730', 27, 61, 'a:4:{i:243;i:0;i:242;i:0;i:241;i:0;i:244;i:1;}', NULL),
(2396, '07160730', 27, 62, 'a:3:{i:248;i:0;i:246;i:1;i:247;i:0;}', NULL),
(2397, '07160730', 27, 63, 'a:3:{i:251;i:1;i:250;i:0;i:252;i:0;}', NULL),
(2398, '07160730', 27, 64, 'a:2:{i:256;i:0;i:255;i:1;}', NULL),
(2399, '07160730', 27, 65, 'a:3:{i:260;i:0;i:259;i:1;i:258;i:0;}', NULL),
(2400, '07160730', 27, 66, 'a:4:{i:261;i:0;i:263;i:1;i:262;i:0;i:264;i:0;}', NULL),
(2401, '07160730', 27, 67, 'a:4:{i:268;i:1;i:267;i:0;i:265;i:0;i:266;i:0;}', NULL),
(2402, '07160730', 27, 68, 'a:4:{i:271;i:0;i:272;i:0;i:269;i:0;i:270;i:1;}', NULL),
(2403, '07160730', 27, 69, 'a:3:{i:276;i:0;i:273;i:1;i:274;i:0;}', NULL),
(2404, '07160730', 27, 70, 'a:2:{i:278;i:0;i:279;i:1;}', NULL),
(2405, '07160730', 27, 71, 'a:3:{i:282;i:0;i:281;i:1;i:283;i:0;}', NULL),
(2406, '07160730', 27, 72, 'a:4:{i:287;i:0;i:285;i:0;i:286;i:0;i:288;i:1;}', NULL),
(2407, '07160730', 27, 73, 'a:2:{i:291;i:1;i:290;i:0;}', NULL),
(2408, '07160703', 27, 40, 'a:1:{i:159;i:1;}', NULL),
(2409, '07160703', 27, 41, 'a:1:{i:164;i:1;}', NULL),
(2410, '07160703', 27, 42, 'a:1:{i:166;i:1;}', NULL),
(2411, '07160703', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(2412, '07160703', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(2413, '07160703', 27, 45, 'a:1:{i:179;i:1;}', NULL),
(2414, '07160703', 27, 46, 'a:1:{i:182;i:1;}', NULL),
(2415, '07160703', 27, 47, 'a:1:{i:187;i:1;}', NULL),
(2416, '07160703', 27, 48, 'a:1:{i:189;i:1;}', NULL),
(2417, '07160703', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(2418, '07160703', 27, 50, 'a:1:{i:199;i:1;}', NULL),
(2419, '07160703', 27, 51, 'a:1:{i:203;i:1;}', NULL),
(2420, '07160703', 27, 52, 'a:1:{i:207;i:1;}', NULL),
(2421, '07160703', 27, 53, 'a:1:{i:211;i:1;}', NULL),
(2422, '07160703', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(2423, '07160703', 27, 55, 'a:2:{i:219;i:0;i:217;i:1;}', NULL),
(2424, '07160703', 27, 56, 'a:1:{i:224;i:1;}', NULL),
(2425, '07160703', 27, 57, '', NULL),
(2426, '07160703', 27, 58, 'a:2:{i:229;i:1;i:232;i:0;}', NULL),
(2427, '07160703', 27, 59, 'a:1:{i:234;i:1;}', NULL),
(2428, '07160703', 27, 60, 'a:1:{i:237;i:1;}', NULL),
(2429, '07160703', 27, 61, 'a:1:{i:241;i:1;}', NULL),
(2430, '07160703', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(2431, '07160703', 27, 63, 'a:2:{i:250;i:0;i:251;i:1;}', NULL),
(2432, '07160703', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(2433, '07160703', 27, 65, 'a:1:{i:258;i:1;}', NULL),
(2434, '07160703', 27, 66, 'a:1:{i:261;i:1;}', NULL),
(2435, '07160703', 27, 67, 'a:1:{i:268;i:1;}', NULL),
(2436, '07160703', 27, 68, 'a:1:{i:271;i:1;}', NULL),
(2437, '07160703', 27, 69, 'a:1:{i:273;i:1;}', NULL),
(2438, '07160703', 27, 70, 'a:1:{i:280;i:1;}', NULL),
(2439, '07160703', 27, 71, '', NULL),
(2440, '07160703', 27, 72, 'a:1:{i:286;i:1;}', NULL),
(2441, '07160703', 27, 73, 'a:1:{i:290;i:1;}', NULL),
(2442, '07160701', 27, 40, 'a:1:{i:159;i:1;}', NULL),
(2443, '07160701', 27, 41, 'a:1:{i:164;i:1;}', NULL),
(2444, '07160701', 27, 42, '', NULL),
(2445, '07160701', 27, 43, '', NULL),
(2446, '07160701', 27, 44, '', NULL),
(2447, '07160701', 27, 45, '', NULL),
(2448, '07160701', 27, 46, '', NULL),
(2449, '07160701', 27, 47, '', NULL),
(2450, '07160701', 27, 48, '', NULL),
(2451, '07160701', 27, 49, '', NULL),
(2452, '07160701', 27, 50, '', NULL),
(2453, '07160701', 27, 51, '', NULL),
(2454, '07160701', 27, 52, '', NULL),
(2455, '07160701', 27, 53, '', NULL),
(2456, '07160701', 27, 54, '', NULL),
(2457, '07160701', 27, 55, '', NULL),
(2458, '07160701', 27, 56, '', NULL),
(2459, '07160701', 27, 57, '', NULL),
(2460, '07160701', 27, 58, '', NULL),
(2461, '07160701', 27, 59, '', NULL),
(2462, '07160701', 27, 60, '', NULL),
(2463, '07160701', 27, 61, '', NULL),
(2464, '07160701', 27, 62, '', NULL),
(2465, '07160701', 27, 63, '', NULL),
(2466, '07160701', 27, 64, '', NULL),
(2467, '07160701', 27, 65, '', NULL),
(2468, '07160701', 27, 66, '', NULL),
(2469, '07160701', 27, 67, '', NULL),
(2470, '07160701', 27, 68, '', NULL),
(2471, '07160701', 27, 69, '', NULL),
(2472, '07160701', 27, 70, '', NULL),
(2473, '07160701', 27, 71, '', NULL),
(2474, '07160701', 27, 72, '', NULL),
(2475, '07160701', 27, 73, '', NULL),
(2476, '07160733', 27, 40, 'a:2:{i:157;i:0;i:159;i:1;}', NULL),
(2477, '07160733', 27, 41, 'a:2:{i:164;i:0;i:161;i:1;}', NULL),
(2478, '07160733', 27, 42, 'a:2:{i:168;i:0;i:166;i:1;}', NULL),
(2479, '07160733', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(2480, '07160733', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(2481, '07160733', 27, 45, 'a:1:{i:178;i:1;}', NULL),
(2482, '07160733', 27, 46, 'a:1:{i:182;i:1;}', NULL),
(2483, '07160733', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(2484, '07160733', 27, 48, 'a:2:{i:190;i:0;i:189;i:1;}', NULL),
(2485, '07160733', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(2486, '07160733', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(2487, '07160733', 27, 51, 'a:1:{i:201;i:1;}', NULL),
(2488, '07160733', 27, 52, 'a:2:{i:205;i:0;i:206;i:1;}', NULL),
(2489, '07160733', 27, 53, 'a:1:{i:209;i:1;}', NULL),
(2490, '07160733', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(2491, '07160733', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(2492, '07160733', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(2493, '07160733', 27, 57, 'a:2:{i:227;i:0;i:228;i:1;}', NULL),
(2494, '07160733', 27, 58, 'a:3:{i:231;i:0;i:232;i:0;i:230;i:1;}', NULL),
(2495, '07160733', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(2496, '07160733', 27, 60, 'a:1:{i:240;i:1;}', NULL),
(2497, '07160733', 27, 61, 'a:2:{i:241;i:0;i:244;i:1;}', NULL),
(2498, '07160733', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(2499, '07160733', 27, 63, 'a:3:{i:249;i:0;i:250;i:0;i:251;i:1;}', NULL),
(2500, '07160733', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(2501, '07160733', 27, 65, 'a:2:{i:258;i:0;i:259;i:1;}', NULL),
(2502, '07160733', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(2503, '07160733', 27, 67, 'a:2:{i:265;i:0;i:268;i:1;}', NULL),
(2504, '07160733', 27, 68, 'a:3:{i:270;i:0;i:272;i:0;i:269;i:1;}', NULL),
(2505, '07160733', 27, 69, 'a:2:{i:274;i:0;i:273;i:1;}', NULL),
(2506, '07160733', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(2507, '07160733', 27, 71, 'a:4:{i:281;i:1;i:282;i:0;i:283;i:0;i:284;i:0;}', NULL),
(2508, '07160733', 27, 72, 'a:2:{i:285;i:0;i:288;i:1;}', NULL),
(2509, '07160733', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(2510, '07160733', 33, 230, '', NULL),
(2511, '07160733', 33, 231, '', NULL),
(2512, '07160733', 33, 232, '', NULL),
(2513, '07160733', 33, 233, '', NULL),
(2514, '07160733', 33, 234, '', NULL),
(2515, '07160733', 33, 235, '', NULL),
(2516, '07160733', 33, 236, '', NULL),
(2517, '07160733', 33, 237, '', NULL),
(2518, '07160733', 33, 238, '', NULL),
(2519, '07160733', 33, 239, '', NULL),
(2520, '07160733', 33, 240, '', NULL),
(2521, '07160733', 33, 241, '', NULL),
(2522, '07160733', 33, 242, '', NULL),
(2523, '07160733', 33, 243, '', NULL),
(2524, '07160733', 33, 244, '', NULL),
(2525, '07160733', 33, 245, '', NULL),
(2526, '07160733', 33, 246, '', NULL),
(2527, '07160733', 33, 247, '', NULL),
(2528, '07160733', 33, 248, '', NULL),
(2529, '07160733', 33, 249, '', NULL),
(2530, '07160733', 33, 250, '', NULL),
(2531, '07160733', 33, 251, '', NULL),
(2532, '07160733', 33, 252, '', NULL),
(2533, '07160733', 33, 253, '', NULL),
(2534, '07160733', 33, 254, '', NULL),
(2535, '07160733', 33, 255, '', NULL),
(2536, '07160733', 33, 256, '', NULL),
(2537, '07160733', 33, 257, '', NULL),
(2538, '07160733', 33, 258, '', NULL),
(2539, '07160733', 33, 259, '', NULL),
(2540, '07160733', 33, 260, '', NULL),
(2541, '07160733', 33, 261, '', NULL),
(2542, '07160702', 26, 14, 'a:1:{i:56;i:1;}', NULL),
(2543, '07160702', 26, 15, 'a:2:{i:60;i:0;i:59;i:1;}', NULL),
(2544, '07160702', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(2545, '07160702', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(2546, '07160702', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(2547, '07160702', 26, 19, 'a:2:{i:75;i:0;i:73;i:1;}', NULL),
(2548, '07160702', 26, 20, 'a:2:{i:80;i:1;i:78;i:0;}', NULL),
(2549, '07160702', 26, 21, 'a:1:{i:83;i:1;}', NULL),
(2550, '07160702', 26, 22, 'a:2:{i:87;i:1;i:88;i:0;}', NULL),
(2551, '07160702', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(2552, '07160702', 26, 24, 'a:3:{i:93;i:0;i:94;i:0;i:96;i:1;}', NULL),
(2553, '07160702', 26, 25, 'a:2:{i:98;i:0;i:97;i:1;}', NULL),
(2554, '07160702', 26, 26, 'a:2:{i:102;i:0;i:103;i:1;}', NULL),
(2555, '07160702', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(2556, '07160702', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(2557, '07160702', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(2558, '07160702', 26, 30, 'a:2:{i:119;i:0;i:117;i:1;}', NULL),
(2559, '07160702', 26, 31, 'a:3:{i:123;i:0;i:124;i:0;i:121;i:1;}', NULL),
(2560, '07160702', 26, 32, 'a:2:{i:125;i:1;i:128;i:0;}', NULL),
(2561, '07160702', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(2562, '07160702', 26, 34, 'a:3:{i:135;i:0;i:134;i:0;i:133;i:1;}', NULL),
(2563, '07160702', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(2564, '07160702', 26, 36, 'a:2:{i:142;i:0;i:143;i:1;}', NULL),
(2565, '07160702', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(2566, '07160702', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(2567, '07160702', 26, 39, 'a:3:{i:155;i:0;i:153;i:0;i:156;i:1;}', NULL),
(2568, '07160803', 26, 14, 'a:2:{i:56;i:1;i:55;i:0;}', NULL),
(2569, '07160803', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(2570, '07160803', 26, 16, 'a:1:{i:64;i:1;}', NULL),
(2571, '07160803', 26, 17, 'a:1:{i:67;i:1;}', NULL),
(2572, '07160803', 26, 18, 'a:1:{i:71;i:1;}', NULL),
(2573, '07160803', 26, 19, 'a:1:{i:73;i:1;}', NULL),
(2574, '07160803', 26, 20, 'a:1:{i:80;i:1;}', NULL),
(2575, '07160803', 26, 21, '', NULL),
(2576, '07160803', 26, 22, 'a:1:{i:87;i:1;}', NULL),
(2577, '07160803', 26, 23, 'a:1:{i:90;i:1;}', NULL),
(2578, '07160803', 26, 24, 'a:1:{i:96;i:1;}', NULL),
(2579, '07160803', 26, 25, 'a:1:{i:97;i:1;}', NULL),
(2580, '07160803', 26, 26, 'a:1:{i:103;i:1;}', NULL),
(2581, '07160803', 26, 27, 'a:1:{i:105;i:1;}', NULL),
(2582, '07160803', 26, 28, 'a:1:{i:112;i:1;}', NULL),
(2583, '07160803', 26, 29, 'a:1:{i:115;i:1;}', NULL),
(2584, '07160803', 26, 30, 'a:1:{i:117;i:1;}', NULL),
(2585, '07160803', 26, 31, 'a:1:{i:121;i:1;}', NULL),
(2586, '07160803', 26, 32, 'a:1:{i:125;i:1;}', NULL),
(2587, '07160803', 26, 33, 'a:1:{i:130;i:1;}', NULL),
(2588, '07160803', 26, 34, 'a:1:{i:133;i:1;}', NULL),
(2589, '07160803', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(2590, '07160803', 26, 36, 'a:1:{i:143;i:1;}', NULL),
(2591, '07160803', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(2592, '07160803', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(2593, '07160803', 26, 39, 'a:1:{i:156;i:1;}', NULL),
(2594, '07160731', 26, 14, 'a:2:{i:56;i:1;i:55;i:0;}', NULL),
(2595, '07160731', 26, 15, 'a:2:{i:59;i:1;i:60;i:0;}', NULL),
(2596, '07160731', 26, 16, 'a:2:{i:64;i:1;i:63;i:0;}', NULL),
(2597, '07160731', 26, 17, 'a:2:{i:67;i:1;i:66;i:0;}', NULL),
(2598, '07160731', 26, 18, 'a:2:{i:71;i:1;i:72;i:0;}', NULL),
(2599, '07160731', 26, 19, 'a:3:{i:75;i:0;i:76;i:0;i:73;i:1;}', NULL),
(2600, '07160731', 26, 20, 'a:2:{i:80;i:1;i:79;i:0;}', NULL),
(2601, '07160731', 26, 21, 'a:2:{i:83;i:1;i:82;i:0;}', NULL),
(2602, '07160731', 26, 22, 'a:2:{i:87;i:1;i:86;i:0;}', NULL),
(2603, '07160731', 26, 23, 'a:2:{i:90;i:1;i:91;i:0;}', NULL),
(2604, '07160731', 26, 24, 'a:2:{i:95;i:0;i:96;i:1;}', NULL),
(2605, '07160731', 26, 25, 'a:2:{i:100;i:0;i:97;i:1;}', NULL),
(2606, '07160731', 26, 26, 'a:2:{i:101;i:0;i:103;i:1;}', NULL),
(2607, '07160731', 26, 27, 'a:2:{i:106;i:0;i:105;i:1;}', NULL),
(2608, '07160731', 26, 28, 'a:2:{i:111;i:0;i:112;i:1;}', NULL),
(2609, '07160731', 26, 29, 'a:2:{i:114;i:0;i:115;i:1;}', NULL),
(2610, '07160731', 26, 30, 'a:2:{i:117;i:1;i:118;i:0;}', NULL),
(2611, '07160731', 26, 31, 'a:3:{i:123;i:0;i:121;i:1;i:122;i:0;}', NULL),
(2612, '07160731', 26, 32, 'a:2:{i:127;i:0;i:125;i:1;}', NULL),
(2613, '07160731', 26, 33, 'a:2:{i:129;i:0;i:130;i:1;}', NULL),
(2614, '07160731', 26, 34, 'a:2:{i:135;i:0;i:133;i:1;}', NULL),
(2615, '07160731', 26, 35, 'a:1:{i:140;i:1;}', NULL),
(2616, '07160731', 26, 36, 'a:2:{i:142;i:0;i:143;i:1;}', NULL),
(2617, '07160731', 26, 37, 'a:1:{i:148;i:1;}', NULL),
(2618, '07160731', 26, 38, 'a:1:{i:149;i:1;}', NULL),
(2619, '07160731', 26, 39, 'a:2:{i:153;i:0;i:156;i:1;}', NULL),
(2620, '07160708', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(2621, '07160708', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(2622, '07160708', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(2623, '07160708', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(2624, '07160708', 28, 70, 'a:2:{i:278;i:0;i:279;i:1;}', NULL),
(2625, '07160708', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(2626, '07160708', 28, 72, 'a:3:{i:286;i:0;i:285;i:0;i:288;i:1;}', NULL),
(2627, '07160708', 28, 73, 'a:2:{i:292;i:0;i:291;i:1;}', NULL),
(2628, '07160708', 28, 74, 'a:2:{i:296;i:0;i:295;i:1;}', NULL),
(2629, '07160708', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(2630, '07160708', 28, 76, 'a:1:{i:302;i:1;}', NULL),
(2631, '07160708', 28, 77, 'a:1:{i:308;i:1;}', NULL),
(2632, '07160708', 28, 78, 'a:1:{i:312;i:1;}', NULL),
(2633, '07160708', 28, 79, 'a:1:{i:316;i:1;}', NULL),
(2634, '07160708', 28, 80, 'a:4:{i:317;i:0;i:320;i:0;i:318;i:0;i:319;i:1;}', NULL),
(2635, '07160708', 28, 81, 'a:2:{i:321;i:0;i:322;i:1;}', NULL),
(2636, '07160708', 28, 82, 'a:2:{i:327;i:0;i:326;i:1;}', NULL),
(2637, '07160708', 28, 84, 'a:2:{i:336;i:0;i:334;i:1;}', NULL),
(2638, '07160708', 28, 85, 'a:1:{i:338;i:1;}', NULL),
(2639, '07160708', 28, 86, 'a:2:{i:344;i:0;i:343;i:1;}', NULL),
(2640, '07160708', 28, 87, 'a:2:{i:345;i:0;i:347;i:1;}', NULL),
(2641, '07160708', 28, 88, 'a:1:{i:350;i:1;}', NULL),
(2642, '07160708', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(2643, '07160708', 28, 90, 'a:3:{i:357;i:0;i:358;i:0;i:360;i:1;}', NULL),
(2644, '07160708', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(2645, '07160708', 28, 92, 'a:1:{i:367;i:1;}', NULL),
(2646, '07160708', 28, 93, 'a:4:{i:370;i:0;i:369;i:0;i:371;i:0;i:372;i:1;}', NULL),
(2647, '07160708', 28, 94, 'a:2:{i:373;i:0;i:374;i:1;}', NULL),
(2648, '07160708', 28, 95, 'a:2:{i:377;i:0;i:378;i:1;}', NULL),
(2649, '07160708', 28, 96, 'a:1:{i:384;i:1;}', NULL),
(2650, '07160708', 28, 97, 'a:2:{i:385;i:0;i:387;i:1;}', NULL),
(2651, '07160708', 28, 98, 'a:2:{i:391;i:0;i:392;i:1;}', NULL),
(2652, '07160708', 28, 99, 'a:4:{i:394;i:0;i:395;i:0;i:396;i:0;i:393;i:1;}', NULL),
(2653, '07160708', 28, 100, 'a:2:{i:400;i:0;i:398;i:1;}', NULL),
(2654, '07160708', 28, 101, 'a:1:{i:402;i:1;}', NULL),
(2655, '07160708', 28, 102, 'a:4:{i:405;i:0;i:407;i:0;i:408;i:0;i:406;i:1;}', NULL),
(2656, '07160708', 28, 103, 'a:2:{i:411;i:0;i:410;i:1;}', NULL),
(2657, '07160708', 28, 104, 'a:2:{i:414;i:1;i:413;i:0;}', NULL),
(2658, '07160742', 28, 66, '', NULL),
(2659, '07160742', 28, 67, '', NULL),
(2660, '07160742', 28, 68, '', NULL),
(2661, '07160742', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(2662, '07160742', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(2663, '07160742', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(2664, '07160742', 28, 72, '', NULL),
(2665, '07160742', 28, 73, '', NULL),
(2666, '07160742', 28, 74, '', NULL),
(2667, '07160742', 28, 75, '', NULL),
(2668, '07160742', 28, 76, '', NULL),
(2669, '07160742', 28, 77, '', NULL),
(2670, '07160742', 28, 78, '', NULL),
(2671, '07160742', 28, 79, '', NULL),
(2672, '07160742', 28, 80, '', NULL),
(2673, '07160742', 28, 81, '', NULL),
(2674, '07160742', 28, 82, '', NULL),
(2675, '07160742', 28, 84, '', NULL),
(2676, '07160742', 28, 85, '', NULL),
(2677, '07160742', 28, 86, '', NULL),
(2678, '07160742', 28, 87, '', NULL),
(2679, '07160742', 28, 88, '', NULL),
(2680, '07160742', 28, 89, '', NULL),
(2681, '07160742', 28, 90, '', NULL),
(2682, '07160742', 28, 91, '', NULL),
(2683, '07160742', 28, 92, '', NULL),
(2684, '07160742', 28, 93, '', NULL),
(2685, '07160742', 28, 94, '', NULL),
(2686, '07160742', 28, 95, '', NULL),
(2687, '07160742', 28, 96, '', NULL),
(2688, '07160742', 28, 97, '', NULL),
(2689, '07160742', 28, 98, '', NULL),
(2690, '07160742', 28, 99, '', NULL),
(2691, '07160742', 28, 100, '', NULL),
(2692, '07160742', 28, 101, '', NULL),
(2693, '07160742', 28, 102, '', NULL),
(2694, '07160742', 28, 103, '', NULL),
(2695, '07160742', 28, 104, '', NULL),
(2696, '07160732', 33, 230, 'a:2:{i:915;i:0;i:917;i:1;}', NULL),
(2697, '07160732', 33, 231, 'a:3:{i:921;i:0;i:920;i:1;i:919;i:0;}', NULL),
(2698, '07160732', 33, 232, 'a:2:{i:924;i:1;i:925;i:0;}', NULL),
(2699, '07160732', 33, 233, 'a:2:{i:927;i:1;i:928;i:0;}', NULL),
(2700, '07160732', 33, 234, 'a:2:{i:931;i:1;i:932;i:0;}', NULL),
(2701, '07160732', 33, 235, 'a:2:{i:937;i:0;i:936;i:1;}', NULL);
INSERT INTO `exercise_answer` (`id`, `studentid`, `paper_id`, `select_question_id`, `answer`, `memo`) VALUES
(2702, '07160732', 33, 236, 'a:2:{i:939;i:1;i:940;i:0;}', NULL),
(2703, '07160732', 33, 237, 'a:2:{i:942;i:0;i:943;i:1;}', NULL),
(2704, '07160732', 33, 238, 'a:3:{i:948;i:0;i:946;i:0;i:949;i:1;}', NULL),
(2705, '07160732', 33, 239, 'a:2:{i:953;i:1;i:952;i:0;}', NULL),
(2706, '07160732', 33, 240, 'a:2:{i:956;i:1;i:955;i:0;}', NULL),
(2707, '07160732', 33, 241, 'a:3:{i:961;i:0;i:960;i:0;i:959;i:1;}', NULL),
(2708, '07160732', 33, 242, 'a:2:{i:964;i:0;i:963;i:1;}', NULL),
(2709, '07160732', 33, 243, 'a:2:{i:966;i:1;i:967;i:0;}', NULL),
(2710, '07160732', 33, 244, 'a:2:{i:970;i:1;i:971;i:0;}', NULL),
(2711, '07160732', 33, 245, 'a:2:{i:974;i:1;i:975;i:0;}', NULL),
(2712, '07160732', 33, 246, 'a:2:{i:981;i:1;i:980;i:0;}', NULL),
(2713, '07160732', 33, 247, 'a:1:{i:984;i:1;}', NULL),
(2714, '07160732', 33, 248, 'a:1:{i:988;i:1;}', NULL),
(2715, '07160732', 33, 249, 'a:1:{i:992;i:1;}', NULL),
(2716, '07160732', 33, 250, 'a:1:{i:996;i:1;}', NULL),
(2717, '07160732', 33, 251, 'a:2:{i:1000;i:0;i:999;i:1;}', NULL),
(2718, '07160732', 33, 252, 'a:1:{i:1003;i:1;}', NULL),
(2719, '07160732', 33, 253, 'a:1:{i:1006;i:1;}', NULL),
(2720, '07160732', 33, 254, 'a:1:{i:1012;i:1;}', NULL),
(2721, '07160732', 33, 255, 'a:1:{i:1016;i:1;}', NULL),
(2722, '07160732', 33, 256, 'a:1:{i:1021;i:1;}', NULL),
(2723, '07160732', 33, 257, 'a:1:{i:1024;i:1;}', NULL),
(2724, '07160732', 33, 258, 'a:1:{i:1026;i:1;}', NULL),
(2725, '07160732', 33, 259, 'a:2:{i:1030;i:0;i:1033;i:1;}', NULL),
(2726, '07160732', 33, 260, 'a:1:{i:1035;i:1;}', NULL),
(2727, '07160732', 33, 261, 'a:1:{i:1040;i:1;}', NULL),
(2728, '07160715', 27, 40, 'a:1:{i:160;i:1;}', NULL),
(2729, '07160715', 27, 41, 'a:1:{i:163;i:1;}', NULL),
(2730, '07160715', 27, 42, 'a:1:{i:165;i:1;}', NULL),
(2731, '07160715', 27, 43, 'a:2:{i:170;i:0;i:171;i:1;}', NULL),
(2732, '07160715', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(2733, '07160715', 27, 45, 'a:1:{i:179;i:1;}', NULL),
(2734, '07160715', 27, 46, 'a:1:{i:182;i:1;}', NULL),
(2735, '07160715', 27, 47, 'a:1:{i:185;i:1;}', NULL),
(2736, '07160715', 27, 48, 'a:1:{i:189;i:1;}', NULL),
(2737, '07160715', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(2738, '07160715', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(2739, '07160715', 27, 51, 'a:1:{i:203;i:1;}', NULL),
(2740, '07160715', 27, 52, 'a:1:{i:207;i:1;}', NULL),
(2741, '07160715', 27, 53, 'a:1:{i:209;i:1;}', NULL),
(2742, '07160715', 27, 54, 'a:2:{i:216;i:0;i:213;i:1;}', NULL),
(2743, '07160715', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(2744, '07160715', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(2745, '07160715', 27, 57, 'a:1:{i:226;i:1;}', NULL),
(2746, '07160715', 27, 58, 'a:1:{i:232;i:1;}', NULL),
(2747, '07160715', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(2748, '07160715', 27, 60, 'a:1:{i:239;i:1;}', NULL),
(2749, '07160715', 27, 61, 'a:1:{i:244;i:1;}', NULL),
(2750, '07160715', 27, 62, 'a:1:{i:245;i:1;}', NULL),
(2751, '07160715', 27, 63, 'a:1:{i:252;i:1;}', NULL),
(2752, '07160715', 27, 64, 'a:1:{i:254;i:1;}', NULL),
(2753, '07160715', 27, 65, 'a:1:{i:258;i:1;}', NULL),
(2754, '07160715', 27, 66, 'a:1:{i:262;i:1;}', NULL),
(2755, '07160715', 27, 67, 'a:1:{i:265;i:1;}', NULL),
(2756, '07160715', 27, 68, 'a:1:{i:272;i:1;}', NULL),
(2757, '07160715', 27, 69, 'a:1:{i:273;i:1;}', NULL),
(2758, '07160715', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(2759, '07160715', 27, 71, 'a:1:{i:282;i:1;}', NULL),
(2760, '07160715', 27, 72, 'a:1:{i:285;i:1;}', NULL),
(2761, '07160715', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(2762, '07160707', 28, 66, 'a:2:{i:261;i:0;i:263;i:1;}', NULL),
(2763, '07160707', 28, 67, 'a:2:{i:265;i:0;i:268;i:1;}', NULL),
(2764, '07160707', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(2765, '07160707', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(2766, '07160707', 28, 70, 'a:3:{i:277;i:0;i:278;i:0;i:279;i:1;}', NULL),
(2767, '07160707', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(2768, '07160707', 28, 72, 'a:2:{i:285;i:0;i:288;i:1;}', NULL),
(2769, '07160707', 28, 73, 'a:2:{i:289;i:0;i:291;i:1;}', NULL),
(2770, '07160707', 28, 74, 'a:3:{i:293;i:0;i:294;i:0;i:295;i:1;}', NULL),
(2771, '07160707', 28, 75, 'a:2:{i:298;i:1;i:297;i:0;}', NULL),
(2772, '07160707', 28, 76, 'a:2:{i:301;i:0;i:302;i:1;}', NULL),
(2773, '07160707', 28, 77, 'a:2:{i:305;i:0;i:308;i:1;}', NULL),
(2774, '07160707', 28, 78, 'a:2:{i:309;i:0;i:312;i:1;}', NULL),
(2775, '07160707', 28, 79, 'a:2:{i:313;i:0;i:316;i:1;}', NULL),
(2776, '07160707', 28, 80, 'a:2:{i:317;i:0;i:319;i:1;}', NULL),
(2777, '07160707', 28, 81, 'a:2:{i:321;i:0;i:322;i:1;}', NULL),
(2778, '07160707', 28, 82, 'a:2:{i:325;i:0;i:326;i:1;}', NULL),
(2779, '07160707', 28, 84, 'a:3:{i:333;i:0;i:334;i:1;i:335;i:0;}', NULL),
(2780, '07160707', 28, 85, 'a:2:{i:337;i:0;i:338;i:1;}', NULL),
(2781, '07160707', 28, 86, 'a:2:{i:341;i:0;i:343;i:1;}', NULL),
(2782, '07160707', 28, 87, 'a:2:{i:345;i:0;i:347;i:1;}', NULL),
(2783, '07160707', 28, 88, 'a:3:{i:349;i:0;i:351;i:0;i:350;i:1;}', NULL),
(2784, '07160707', 28, 89, 'a:2:{i:353;i:0;i:355;i:1;}', NULL),
(2785, '07160707', 28, 90, 'a:2:{i:357;i:0;i:360;i:1;}', NULL),
(2786, '07160707', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(2787, '07160707', 28, 92, 'a:2:{i:365;i:0;i:367;i:1;}', NULL),
(2788, '07160707', 28, 93, 'a:3:{i:369;i:0;i:371;i:0;i:372;i:1;}', NULL),
(2789, '07160707', 28, 94, 'a:2:{i:373;i:0;i:374;i:1;}', NULL),
(2790, '07160707', 28, 95, 'a:2:{i:377;i:0;i:378;i:1;}', NULL),
(2791, '07160707', 28, 96, 'a:2:{i:381;i:0;i:384;i:1;}', NULL),
(2792, '07160707', 28, 97, 'a:2:{i:385;i:0;i:387;i:1;}', NULL),
(2793, '07160707', 28, 98, 'a:2:{i:389;i:0;i:392;i:1;}', NULL),
(2794, '07160707', 28, 99, 'a:1:{i:393;i:1;}', NULL),
(2795, '07160707', 28, 100, 'a:2:{i:397;i:0;i:398;i:1;}', NULL),
(2796, '07160707', 28, 101, 'a:3:{i:401;i:0;i:404;i:0;i:402;i:1;}', NULL),
(2797, '07160707', 28, 102, 'a:2:{i:405;i:0;i:406;i:1;}', NULL),
(2798, '07160707', 28, 103, 'a:2:{i:409;i:0;i:410;i:1;}', NULL),
(2799, '07160707', 28, 104, 'a:2:{i:413;i:0;i:414;i:1;}', NULL),
(2800, '07160722', 28, 66, '', NULL),
(2801, '07160722', 28, 67, '', NULL),
(2802, '07160722', 28, 68, '', NULL),
(2803, '07160722', 28, 69, '', NULL),
(2804, '07160722', 28, 70, '', NULL),
(2805, '07160722', 28, 71, '', NULL),
(2806, '07160722', 28, 72, '', NULL),
(2807, '07160722', 28, 73, '', NULL),
(2808, '07160722', 28, 74, '', NULL),
(2809, '07160722', 28, 75, '', NULL),
(2810, '07160722', 28, 76, '', NULL),
(2811, '07160722', 28, 77, '', NULL),
(2812, '07160722', 28, 78, '', NULL),
(2813, '07160722', 28, 79, '', NULL),
(2814, '07160722', 28, 80, '', NULL),
(2815, '07160722', 28, 81, '', NULL),
(2816, '07160722', 28, 82, '', NULL),
(2817, '07160722', 28, 84, '', NULL),
(2818, '07160722', 28, 85, '', NULL),
(2819, '07160722', 28, 86, '', NULL),
(2820, '07160722', 28, 87, '', NULL),
(2821, '07160722', 28, 88, '', NULL),
(2822, '07160722', 28, 89, '', NULL),
(2823, '07160722', 28, 90, '', NULL),
(2824, '07160722', 28, 91, '', NULL),
(2825, '07160722', 28, 92, '', NULL),
(2826, '07160722', 28, 93, '', NULL),
(2827, '07160722', 28, 94, '', NULL),
(2828, '07160722', 28, 95, '', NULL),
(2829, '07160722', 28, 96, '', NULL),
(2830, '07160722', 28, 97, '', NULL),
(2831, '07160722', 28, 98, '', NULL),
(2832, '07160722', 28, 99, '', NULL),
(2833, '07160722', 28, 100, '', NULL),
(2834, '07160722', 28, 101, '', NULL),
(2835, '07160722', 28, 102, '', NULL),
(2836, '07160722', 28, 103, '', NULL),
(2837, '07160722', 28, 104, '', NULL),
(2838, '07160736', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(2839, '07160736', 28, 67, 'a:1:{i:265;i:1;}', NULL),
(2840, '07160736', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(2841, '07160736', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(2842, '07160736', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(2843, '07160736', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(2844, '07160736', 28, 72, 'a:1:{i:288;i:1;}', NULL),
(2845, '07160736', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(2846, '07160736', 28, 74, 'a:1:{i:295;i:1;}', NULL),
(2847, '07160736', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(2848, '07160736', 28, 76, 'a:1:{i:301;i:1;}', NULL),
(2849, '07160736', 28, 77, 'a:1:{i:307;i:1;}', NULL),
(2850, '07160736', 28, 78, 'a:1:{i:312;i:1;}', NULL),
(2851, '07160736', 28, 79, 'a:1:{i:313;i:1;}', NULL),
(2852, '07160736', 28, 80, 'a:1:{i:318;i:1;}', NULL),
(2853, '07160736', 28, 81, 'a:1:{i:322;i:1;}', NULL),
(2854, '07160736', 28, 82, 'a:1:{i:325;i:1;}', NULL),
(2855, '07160736', 28, 84, 'a:1:{i:333;i:1;}', NULL),
(2856, '07160736', 28, 85, 'a:1:{i:337;i:1;}', NULL),
(2857, '07160736', 28, 86, 'a:1:{i:342;i:1;}', NULL),
(2858, '07160736', 28, 87, 'a:2:{i:347;i:0;i:345;i:1;}', NULL),
(2859, '07160736', 28, 88, 'a:1:{i:349;i:1;}', NULL),
(2860, '07160736', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(2861, '07160736', 28, 90, 'a:1:{i:360;i:1;}', NULL),
(2862, '07160736', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(2863, '07160736', 28, 92, 'a:1:{i:367;i:1;}', NULL),
(2864, '07160736', 28, 93, 'a:1:{i:372;i:1;}', NULL),
(2865, '07160736', 28, 94, 'a:1:{i:374;i:1;}', NULL),
(2866, '07160736', 28, 95, 'a:1:{i:378;i:1;}', NULL),
(2867, '07160736', 28, 96, 'a:1:{i:381;i:1;}', NULL),
(2868, '07160736', 28, 97, 'a:3:{i:386;i:1;i:388;i:0;i:385;i:0;}', NULL),
(2869, '07160736', 28, 98, 'a:1:{i:392;i:1;}', NULL),
(2870, '07160736', 28, 99, 'a:1:{i:396;i:1;}', NULL),
(2871, '07160736', 28, 100, 'a:1:{i:397;i:1;}', NULL),
(2872, '07160736', 28, 101, 'a:1:{i:402;i:1;}', NULL),
(2873, '07160736', 28, 102, 'a:1:{i:407;i:1;}', NULL),
(2874, '07160736', 28, 103, 'a:1:{i:411;i:1;}', NULL),
(2875, '07160736', 28, 104, 'a:1:{i:414;i:1;}', NULL),
(2876, '07160708', 29, 100, 'a:1:{i:398;i:1;}', NULL),
(2877, '07160708', 29, 101, 'a:1:{i:402;i:1;}', NULL),
(2878, '07160708', 29, 102, 'a:1:{i:406;i:1;}', NULL),
(2879, '07160708', 29, 103, 'a:1:{i:410;i:1;}', NULL),
(2880, '07160708', 29, 104, 'a:1:{i:414;i:1;}', NULL),
(2881, '07160708', 29, 105, 'a:2:{i:417;i:1;i:419;i:0;}', NULL),
(2882, '07160708', 29, 106, 'a:3:{i:423;i:1;i:422;i:0;i:421;i:0;}', NULL),
(2883, '07160708', 29, 107, 'a:1:{i:427;i:1;}', NULL),
(2884, '07160708', 29, 108, 'a:2:{i:431;i:0;i:432;i:1;}', NULL),
(2885, '07160708', 29, 109, 'a:1:{i:436;i:1;}', NULL),
(2886, '07160708', 29, 110, 'a:1:{i:438;i:1;}', NULL),
(2887, '07160708', 29, 111, 'a:1:{i:441;i:1;}', NULL),
(2888, '07160708', 29, 112, 'a:3:{i:445;i:1;i:447;i:0;i:446;i:0;}', NULL),
(2889, '07160708', 29, 113, 'a:2:{i:449;i:1;i:451;i:0;}', NULL),
(2890, '07160708', 29, 114, 'a:1:{i:454;i:1;}', NULL),
(2891, '07160708', 29, 115, 'a:2:{i:457;i:0;i:459;i:1;}', NULL),
(2892, '07160708', 29, 116, 'a:2:{i:461;i:0;i:464;i:1;}', NULL),
(2893, '07160708', 29, 117, 'a:2:{i:465;i:1;i:468;i:0;}', NULL),
(2894, '07160708', 29, 118, 'a:2:{i:469;i:0;i:472;i:1;}', NULL),
(2895, '07160708', 29, 119, 'a:2:{i:473;i:0;i:475;i:1;}', NULL),
(2896, '07160708', 29, 120, 'a:1:{i:479;i:1;}', NULL),
(2897, '07160708', 29, 123, 'a:1:{i:489;i:1;}', NULL),
(2898, '07160708', 29, 124, 'a:2:{i:490;i:0;i:492;i:1;}', NULL),
(2899, '07160708', 29, 125, 'a:3:{i:496;i:0;i:497;i:1;i:495;i:0;}', NULL),
(2900, '07160708', 29, 126, 'a:1:{i:501;i:1;}', NULL),
(2901, '07160708', 29, 127, 'a:1:{i:502;i:1;}', NULL),
(2902, '07160708', 29, 128, 'a:2:{i:507;i:0;i:508;i:1;}', NULL),
(2903, '07160708', 29, 129, 'a:2:{i:512;i:0;i:513;i:1;}', NULL),
(2904, '07160708', 29, 130, 'a:1:{i:515;i:1;}', NULL),
(2905, '07160708', 29, 131, 'a:2:{i:521;i:0;i:519;i:1;}', NULL),
(2906, '07160708', 29, 132, 'a:2:{i:523;i:0;i:525;i:1;}', NULL),
(2907, '07160708', 29, 133, 'a:2:{i:526;i:1;i:529;i:0;}', NULL),
(2908, '07160708', 29, 134, 'a:1:{i:531;i:1;}', NULL),
(2909, '07160708', 29, 135, 'a:1:{i:534;i:1;}', NULL),
(2910, '07160708', 29, 136, 'a:2:{i:539;i:0;i:541;i:1;}', NULL),
(2911, '07160720', 27, 40, 'a:2:{i:160;i:0;i:159;i:1;}', NULL),
(2912, '07160720', 27, 41, 'a:3:{i:161;i:1;i:163;i:0;i:162;i:0;}', NULL),
(2913, '07160720', 27, 42, 'a:2:{i:166;i:1;i:168;i:0;}', NULL),
(2914, '07160720', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(2915, '07160720', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(2916, '07160720', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(2917, '07160720', 27, 46, 'a:1:{i:182;i:1;}', NULL),
(2918, '07160720', 27, 47, 'a:1:{i:188;i:1;}', NULL),
(2919, '07160720', 27, 48, 'a:1:{i:189;i:1;}', NULL),
(2920, '07160720', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(2921, '07160720', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(2922, '07160720', 27, 51, 'a:2:{i:203;i:0;i:201;i:1;}', NULL),
(2923, '07160720', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(2924, '07160720', 27, 53, 'a:1:{i:209;i:1;}', NULL),
(2925, '07160720', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(2926, '07160720', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(2927, '07160720', 27, 56, 'a:2:{i:224;i:0;i:223;i:1;}', NULL),
(2928, '07160720', 27, 57, 'a:2:{i:225;i:0;i:228;i:1;}', NULL),
(2929, '07160720', 27, 58, 'a:2:{i:229;i:0;i:230;i:1;}', NULL),
(2930, '07160720', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(2931, '07160720', 27, 60, 'a:2:{i:240;i:1;i:237;i:0;}', NULL),
(2932, '07160720', 27, 61, 'a:2:{i:243;i:0;i:244;i:1;}', NULL),
(2933, '07160720', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(2934, '07160720', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(2935, '07160720', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(2936, '07160720', 27, 65, 'a:2:{i:260;i:0;i:259;i:1;}', NULL),
(2937, '07160720', 27, 66, 'a:2:{i:263;i:1;i:264;i:0;}', NULL),
(2938, '07160720', 27, 67, 'a:1:{i:268;i:1;}', NULL),
(2939, '07160720', 27, 68, 'a:1:{i:269;i:1;}', NULL),
(2940, '07160720', 27, 69, 'a:2:{i:273;i:1;i:275;i:0;}', NULL),
(2941, '07160720', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(2942, '07160720', 27, 71, 'a:1:{i:281;i:1;}', NULL),
(2943, '07160720', 27, 72, 'a:2:{i:285;i:0;i:288;i:1;}', NULL),
(2944, '07160720', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(2945, '07160707', 29, 100, 'a:1:{i:398;i:1;}', NULL),
(2946, '07160707', 29, 101, 'a:2:{i:403;i:0;i:402;i:1;}', NULL),
(2947, '07160707', 29, 102, 'a:1:{i:406;i:1;}', NULL),
(2948, '07160707', 29, 103, 'a:1:{i:410;i:1;}', NULL),
(2949, '07160707', 29, 104, 'a:1:{i:414;i:1;}', NULL),
(2950, '07160707', 29, 105, 'a:1:{i:418;i:1;}', NULL),
(2951, '07160707', 29, 106, 'a:1:{i:423;i:1;}', NULL),
(2952, '07160707', 29, 107, 'a:1:{i:427;i:1;}', NULL),
(2953, '07160707', 29, 108, 'a:1:{i:430;i:1;}', NULL),
(2954, '07160707', 29, 109, 'a:1:{i:435;i:1;}', NULL),
(2955, '07160707', 29, 110, 'a:2:{i:439;i:0;i:440;i:1;}', NULL),
(2956, '07160707', 29, 111, 'a:1:{i:441;i:1;}', NULL),
(2957, '07160707', 29, 112, 'a:2:{i:448;i:0;i:446;i:1;}', NULL),
(2958, '07160707', 29, 113, '', NULL),
(2959, '07160707', 29, 114, '', NULL),
(2960, '07160707', 29, 115, '', NULL),
(2961, '07160707', 29, 116, '', NULL),
(2962, '07160707', 29, 117, '', NULL),
(2963, '07160707', 29, 118, '', NULL),
(2964, '07160707', 29, 119, '', NULL),
(2965, '07160707', 29, 120, '', NULL),
(2966, '07160707', 29, 123, '', NULL),
(2967, '07160707', 29, 124, '', NULL),
(2968, '07160707', 29, 125, '', NULL),
(2969, '07160707', 29, 126, '', NULL),
(2970, '07160707', 29, 127, '', NULL),
(2971, '07160707', 29, 128, '', NULL),
(2972, '07160707', 29, 129, '', NULL),
(2973, '07160707', 29, 130, '', NULL),
(2974, '07160707', 29, 131, '', NULL),
(2975, '07160707', 29, 132, '', NULL),
(2976, '07160707', 29, 133, '', NULL),
(2977, '07160707', 29, 134, '', NULL),
(2978, '07160707', 29, 135, '', NULL),
(2979, '07160707', 29, 136, '', NULL),
(2980, '07160745', 28, 66, 'a:1:{i:264;i:1;}', NULL),
(2981, '07160745', 28, 67, 'a:1:{i:266;i:1;}', NULL),
(2982, '07160745', 28, 68, 'a:1:{i:270;i:1;}', NULL),
(2983, '07160745', 28, 69, 'a:1:{i:275;i:1;}', NULL),
(2984, '07160745', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(2985, '07160745', 28, 71, 'a:1:{i:282;i:1;}', NULL),
(2986, '07160745', 28, 72, 'a:1:{i:285;i:1;}', NULL),
(2987, '07160745', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(2988, '07160745', 28, 74, 'a:1:{i:296;i:1;}', NULL),
(2989, '07160745', 28, 75, 'a:1:{i:300;i:1;}', NULL),
(2990, '07160745', 28, 76, 'a:1:{i:303;i:1;}', NULL),
(2991, '07160745', 28, 77, 'a:1:{i:306;i:1;}', NULL),
(2992, '07160745', 28, 78, 'a:1:{i:312;i:1;}', NULL),
(2993, '07160745', 28, 79, 'a:1:{i:313;i:1;}', NULL),
(2994, '07160745', 28, 80, 'a:1:{i:318;i:1;}', NULL),
(2995, '07160745', 28, 81, 'a:1:{i:322;i:1;}', NULL),
(2996, '07160745', 28, 82, 'a:1:{i:327;i:1;}', NULL),
(2997, '07160745', 28, 84, 'a:1:{i:334;i:1;}', NULL),
(2998, '07160745', 28, 85, 'a:1:{i:338;i:1;}', NULL),
(2999, '07160745', 28, 86, 'a:2:{i:344;i:1;i:343;i:0;}', NULL),
(3000, '07160745', 28, 87, 'a:1:{i:347;i:1;}', NULL),
(3001, '07160745', 28, 88, 'a:1:{i:350;i:1;}', NULL),
(3002, '07160745', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(3003, '07160745', 28, 90, 'a:1:{i:358;i:1;}', NULL),
(3004, '07160745', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(3005, '07160745', 28, 92, 'a:1:{i:367;i:1;}', NULL),
(3006, '07160745', 28, 93, 'a:1:{i:372;i:1;}', NULL),
(3007, '07160745', 28, 94, 'a:1:{i:374;i:1;}', NULL),
(3008, '07160745', 28, 95, 'a:1:{i:378;i:1;}', NULL),
(3009, '07160745', 28, 96, 'a:1:{i:381;i:1;}', NULL),
(3010, '07160745', 28, 97, 'a:1:{i:387;i:1;}', NULL),
(3011, '07160745', 28, 98, 'a:1:{i:390;i:1;}', NULL),
(3012, '07160745', 28, 99, 'a:2:{i:396;i:1;i:395;i:0;}', NULL),
(3013, '07160745', 28, 100, 'a:1:{i:398;i:1;}', NULL),
(3014, '07160745', 28, 101, 'a:1:{i:401;i:1;}', NULL),
(3015, '07160745', 28, 102, 'a:1:{i:407;i:1;}', NULL),
(3016, '07160745', 28, 103, 'a:1:{i:411;i:1;}', NULL),
(3017, '07160745', 28, 104, 'a:1:{i:415;i:1;}', NULL),
(3018, '07160727', 27, 40, 'a:2:{i:160;i:0;i:159;i:1;}', NULL),
(3019, '07160727', 27, 41, 'a:2:{i:163;i:0;i:161;i:1;}', NULL),
(3020, '07160727', 27, 42, 'a:2:{i:165;i:0;i:166;i:1;}', NULL),
(3021, '07160727', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(3022, '07160727', 27, 44, 'a:2:{i:174;i:0;i:173;i:1;}', NULL),
(3023, '07160727', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(3024, '07160727', 27, 46, 'a:2:{i:183;i:0;i:182;i:1;}', NULL),
(3025, '07160727', 27, 47, 'a:2:{i:187;i:0;i:188;i:1;}', NULL),
(3026, '07160727', 27, 48, 'a:1:{i:190;i:1;}', NULL),
(3027, '07160727', 27, 49, 'a:2:{i:193;i:0;i:194;i:1;}', NULL),
(3028, '07160727', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(3029, '07160727', 27, 51, 'a:2:{i:202;i:0;i:201;i:1;}', NULL),
(3030, '07160727', 27, 52, 'a:4:{i:205;i:0;i:206;i:1;i:207;i:0;i:208;i:0;}', NULL),
(3031, '07160727', 27, 53, 'a:2:{i:211;i:0;i:209;i:1;}', NULL),
(3032, '07160727', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(3033, '07160727', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(3034, '07160727', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(3035, '07160727', 27, 57, 'a:3:{i:226;i:0;i:227;i:0;i:228;i:1;}', NULL),
(3036, '07160727', 27, 58, 'a:2:{i:232;i:0;i:230;i:1;}', NULL),
(3037, '07160727', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(3038, '07160727', 27, 60, 'a:3:{i:237;i:0;i:239;i:0;i:240;i:1;}', NULL),
(3039, '07160727', 27, 61, 'a:2:{i:243;i:0;i:244;i:1;}', NULL),
(3040, '07160727', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(3041, '07160727', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(3042, '07160727', 27, 64, 'a:2:{i:253;i:0;i:256;i:1;}', NULL),
(3043, '07160727', 27, 65, 'a:2:{i:260;i:0;i:259;i:1;}', NULL),
(3044, '07160727', 27, 66, 'a:2:{i:264;i:0;i:263;i:1;}', NULL),
(3045, '07160727', 27, 67, 'a:2:{i:266;i:0;i:268;i:1;}', NULL),
(3046, '07160727', 27, 68, 'a:2:{i:272;i:0;i:269;i:1;}', NULL),
(3047, '07160727', 27, 69, 'a:1:{i:273;i:1;}', NULL),
(3048, '07160727', 27, 70, 'a:2:{i:278;i:0;i:279;i:1;}', NULL),
(3049, '07160727', 27, 71, 'a:2:{i:282;i:0;i:281;i:1;}', NULL),
(3050, '07160727', 27, 72, 'a:4:{i:286;i:0;i:285;i:0;i:287;i:1;i:288;i:0;}', NULL),
(3051, '07160727', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(3052, '07160735', 27, 40, '', NULL),
(3053, '07160735', 27, 41, '', NULL),
(3054, '07160735', 27, 42, '', NULL),
(3055, '07160735', 27, 43, '', NULL),
(3056, '07160735', 27, 44, '', NULL),
(3057, '07160735', 27, 45, '', NULL),
(3058, '07160735', 27, 46, '', NULL),
(3059, '07160735', 27, 47, '', NULL),
(3060, '07160735', 27, 48, '', NULL),
(3061, '07160735', 27, 49, '', NULL),
(3062, '07160735', 27, 50, '', NULL),
(3063, '07160735', 27, 51, '', NULL),
(3064, '07160735', 27, 52, '', NULL),
(3065, '07160735', 27, 53, '', NULL),
(3066, '07160735', 27, 54, '', NULL),
(3067, '07160735', 27, 55, '', NULL),
(3068, '07160735', 27, 56, '', NULL),
(3069, '07160735', 27, 57, '', NULL),
(3070, '07160735', 27, 58, '', NULL),
(3071, '07160735', 27, 59, '', NULL),
(3072, '07160735', 27, 60, '', NULL),
(3073, '07160735', 27, 61, '', NULL),
(3074, '07160735', 27, 62, '', NULL),
(3075, '07160735', 27, 63, '', NULL),
(3076, '07160735', 27, 64, '', NULL),
(3077, '07160735', 27, 65, '', NULL),
(3078, '07160735', 27, 66, '', NULL),
(3079, '07160735', 27, 67, '', NULL),
(3080, '07160735', 27, 68, '', NULL),
(3081, '07160735', 27, 69, '', NULL),
(3082, '07160735', 27, 70, '', NULL),
(3083, '07160735', 27, 71, '', NULL),
(3084, '07160735', 27, 72, '', NULL),
(3085, '07160735', 27, 73, '', NULL),
(3086, '07160733', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(3087, '07160733', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(3088, '07160733', 28, 68, 'a:3:{i:272;i:0;i:270;i:0;i:269;i:1;}', NULL),
(3089, '07160733', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(3090, '07160733', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(3091, '07160733', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(3092, '07160733', 28, 72, 'a:2:{i:285;i:0;i:288;i:1;}', NULL),
(3093, '07160733', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(3094, '07160733', 28, 74, 'a:2:{i:296;i:0;i:295;i:1;}', NULL),
(3095, '07160733', 28, 75, 'a:1:{i:300;i:1;}', NULL),
(3096, '07160733', 28, 76, 'a:1:{i:302;i:1;}', NULL),
(3097, '07160733', 28, 77, 'a:2:{i:307;i:0;i:308;i:1;}', NULL),
(3098, '07160733', 28, 78, 'a:3:{i:311;i:0;i:310;i:0;i:312;i:1;}', NULL),
(3099, '07160733', 28, 79, 'a:1:{i:314;i:1;}', NULL),
(3100, '07160733', 28, 80, 'a:2:{i:320;i:0;i:319;i:1;}', NULL),
(3101, '07160733', 28, 81, 'a:2:{i:323;i:0;i:322;i:1;}', NULL),
(3102, '07160733', 28, 82, 'a:3:{i:327;i:0;i:325;i:0;i:326;i:1;}', NULL),
(3103, '07160733', 28, 84, 'a:2:{i:333;i:0;i:334;i:1;}', NULL),
(3104, '07160733', 28, 85, 'a:1:{i:338;i:1;}', NULL),
(3105, '07160733', 28, 86, 'a:1:{i:342;i:1;}', NULL),
(3106, '07160733', 28, 87, 'a:1:{i:346;i:1;}', NULL),
(3107, '07160733', 28, 88, 'a:1:{i:350;i:1;}', NULL),
(3108, '07160733', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(3109, '07160733', 28, 90, 'a:1:{i:359;i:1;}', NULL),
(3110, '07160733', 28, 91, 'a:2:{i:364;i:0;i:361;i:1;}', NULL),
(3111, '07160733', 28, 92, 'a:1:{i:367;i:1;}', NULL),
(3112, '07160733', 28, 93, 'a:4:{i:369;i:0;i:371;i:0;i:370;i:0;i:372;i:1;}', NULL),
(3113, '07160733', 28, 94, 'a:1:{i:374;i:1;}', NULL),
(3114, '07160733', 28, 95, 'a:1:{i:378;i:1;}', NULL),
(3115, '07160733', 28, 96, 'a:1:{i:384;i:1;}', NULL),
(3116, '07160733', 28, 97, 'a:2:{i:386;i:0;i:387;i:1;}', NULL),
(3117, '07160733', 28, 98, 'a:1:{i:389;i:1;}', NULL),
(3118, '07160733', 28, 99, 'a:2:{i:396;i:0;i:393;i:1;}', NULL),
(3119, '07160733', 28, 100, 'a:1:{i:397;i:1;}', NULL),
(3120, '07160733', 28, 101, 'a:2:{i:404;i:0;i:402;i:1;}', NULL),
(3121, '07160733', 28, 102, 'a:2:{i:407;i:0;i:406;i:1;}', NULL),
(3122, '07160733', 28, 103, 'a:3:{i:409;i:0;i:411;i:0;i:410;i:1;}', NULL),
(3123, '07160733', 28, 104, 'a:1:{i:414;i:1;}', NULL),
(3124, '07160708', 30, 130, 'a:1:{i:515;i:1;}', NULL),
(3125, '07160708', 30, 131, 'a:1:{i:519;i:1;}', NULL),
(3126, '07160708', 30, 132, 'a:1:{i:525;i:1;}', NULL),
(3127, '07160708', 30, 133, 'a:1:{i:526;i:1;}', NULL),
(3128, '07160708', 30, 134, 'a:1:{i:531;i:1;}', NULL),
(3129, '07160708', 30, 135, 'a:1:{i:534;i:1;}', NULL),
(3130, '07160708', 30, 136, 'a:1:{i:541;i:1;}', NULL),
(3131, '07160708', 30, 137, 'a:2:{i:542;i:0;i:543;i:1;}', NULL),
(3132, '07160708', 30, 138, 'a:2:{i:548;i:0;i:549;i:1;}', NULL),
(3133, '07160708', 30, 139, 'a:2:{i:552;i:0;i:553;i:1;}', NULL),
(3134, '07160708', 30, 140, 'a:2:{i:555;i:0;i:554;i:1;}', NULL),
(3135, '07160708', 30, 141, 'a:3:{i:559;i:0;i:560;i:0;i:561;i:1;}', NULL),
(3136, '07160708', 30, 142, 'a:1:{i:563;i:1;}', NULL),
(3137, '07160708', 30, 143, 'a:3:{i:569;i:0;i:566;i:0;i:568;i:1;}', NULL),
(3138, '07160708', 30, 144, 'a:2:{i:571;i:1;i:572;i:0;}', NULL),
(3139, '07160708', 30, 145, 'a:2:{i:574;i:0;i:577;i:1;}', NULL),
(3140, '07160708', 30, 146, 'a:2:{i:580;i:0;i:578;i:1;}', NULL),
(3141, '07160708', 30, 147, 'a:1:{i:582;i:1;}', NULL),
(3142, '07160708', 30, 148, 'a:1:{i:587;i:1;}', NULL),
(3143, '07160708', 30, 149, 'a:2:{i:590;i:0;i:593;i:1;}', NULL),
(3144, '07160708', 30, 150, 'a:2:{i:595;i:0;i:597;i:1;}', NULL),
(3145, '07160708', 30, 151, 'a:4:{i:600;i:0;i:599;i:0;i:601;i:0;i:598;i:1;}', NULL),
(3146, '07160708', 30, 152, 'a:1:{i:604;i:1;}', NULL),
(3147, '07160708', 30, 153, 'a:3:{i:607;i:0;i:606;i:0;i:608;i:1;}', NULL),
(3148, '07160708', 30, 154, 'a:2:{i:611;i:0;i:612;i:1;}', NULL),
(3149, '07160708', 30, 155, 'a:1:{i:615;i:1;}', NULL),
(3150, '07160708', 30, 156, 'a:1:{i:621;i:1;}', NULL),
(3151, '07160708', 30, 157, 'a:2:{i:624;i:0;i:623;i:1;}', NULL),
(3152, '07160708', 30, 158, 'a:1:{i:627;i:1;}', NULL),
(3153, '07160708', 30, 159, 'a:3:{i:633;i:0;i:631;i:0;i:632;i:1;}', NULL),
(3154, '07160708', 30, 160, 'a:1:{i:634;i:1;}', NULL),
(3155, '07160708', 30, 161, 'a:4:{i:638;i:0;i:639;i:0;i:640;i:0;i:641;i:1;}', NULL),
(3156, '07160708', 30, 162, 'a:3:{i:644;i:0;i:643;i:0;i:645;i:1;}', NULL),
(3157, '07160708', 30, 163, 'a:2:{i:648;i:0;i:646;i:1;}', NULL),
(3158, '07160708', 30, 164, 'a:1:{i:652;i:1;}', NULL),
(3159, '07160708', 30, 165, 'a:2:{i:656;i:0;i:654;i:1;}', NULL),
(3160, '07160708', 30, 166, 'a:1:{i:661;i:1;}', NULL),
(3161, '07160732', 32, 200, '', NULL),
(3162, '07160732', 32, 201, '', NULL),
(3163, '07160732', 32, 202, '', NULL),
(3164, '07160732', 32, 203, '', NULL),
(3165, '07160732', 32, 204, '', NULL),
(3166, '07160732', 32, 205, '', NULL),
(3167, '07160732', 32, 206, '', NULL),
(3168, '07160732', 32, 207, '', NULL),
(3169, '07160732', 32, 208, '', NULL),
(3170, '07160732', 32, 209, '', NULL),
(3171, '07160732', 32, 210, '', NULL),
(3172, '07160732', 32, 211, '', NULL),
(3173, '07160732', 32, 212, '', NULL),
(3174, '07160732', 32, 213, '', NULL),
(3175, '07160732', 32, 214, '', NULL),
(3176, '07160732', 32, 215, '', NULL),
(3177, '07160732', 32, 216, '', NULL),
(3178, '07160732', 32, 217, '', NULL),
(3179, '07160732', 32, 218, '', NULL),
(3180, '07160732', 32, 219, '', NULL),
(3181, '07160732', 32, 220, '', NULL),
(3182, '07160732', 32, 221, '', NULL),
(3183, '07160732', 32, 222, '', NULL),
(3184, '07160732', 32, 223, '', NULL),
(3185, '07160732', 32, 224, '', NULL),
(3186, '07160732', 32, 225, '', NULL),
(3187, '07160732', 32, 226, '', NULL),
(3188, '07160732', 32, 227, '', NULL),
(3189, '07160732', 32, 228, '', NULL),
(3190, '07160732', 32, 229, '', NULL),
(3191, '07160710', 27, 40, 'a:1:{i:159;i:1;}', NULL),
(3192, '07160710', 27, 41, 'a:2:{i:164;i:0;i:161;i:1;}', NULL),
(3193, '07160710', 27, 42, 'a:2:{i:167;i:0;i:166;i:1;}', NULL),
(3194, '07160710', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(3195, '07160710', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(3196, '07160710', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(3197, '07160710', 27, 46, 'a:2:{i:183;i:0;i:182;i:1;}', NULL),
(3198, '07160710', 27, 47, 'a:1:{i:188;i:1;}', NULL),
(3199, '07160710', 27, 48, 'a:1:{i:189;i:1;}', NULL),
(3200, '07160710', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(3201, '07160710', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(3202, '07160710', 27, 51, 'a:1:{i:201;i:1;}', NULL),
(3203, '07160710', 27, 52, 'a:2:{i:208;i:0;i:206;i:1;}', NULL),
(3204, '07160710', 27, 53, 'a:2:{i:210;i:0;i:209;i:1;}', NULL),
(3205, '07160710', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(3206, '07160710', 27, 55, 'a:2:{i:219;i:0;i:217;i:1;}', NULL),
(3207, '07160710', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(3208, '07160710', 27, 57, 'a:1:{i:228;i:1;}', NULL),
(3209, '07160710', 27, 58, 'a:2:{i:230;i:1;i:229;i:0;}', NULL),
(3210, '07160710', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(3211, '07160710', 27, 60, 'a:1:{i:240;i:1;}', NULL),
(3212, '07160710', 27, 61, 'a:2:{i:243;i:0;i:244;i:1;}', NULL),
(3213, '07160710', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(3214, '07160710', 27, 63, 'a:2:{i:252;i:0;i:251;i:1;}', NULL),
(3215, '07160710', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(3216, '07160710', 27, 65, 'a:3:{i:260;i:0;i:258;i:0;i:259;i:1;}', NULL),
(3217, '07160710', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(3218, '07160710', 27, 67, 'a:2:{i:265;i:0;i:268;i:1;}', NULL),
(3219, '07160710', 27, 68, 'a:1:{i:269;i:1;}', NULL),
(3220, '07160710', 27, 69, 'a:2:{i:275;i:0;i:273;i:1;}', NULL),
(3221, '07160710', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(3222, '07160710', 27, 71, 'a:1:{i:281;i:1;}', NULL),
(3223, '07160710', 27, 72, 'a:4:{i:287;i:0;i:285;i:0;i:286;i:0;i:288;i:1;}', NULL),
(3224, '07160710', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(3225, '07160719', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(3226, '07160719', 28, 67, 'a:1:{i:265;i:1;}', NULL),
(3227, '07160719', 28, 68, 'a:3:{i:271;i:1;i:270;i:0;i:269;i:0;}', NULL),
(3228, '07160719', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(3229, '07160719', 28, 70, 'a:1:{i:277;i:1;}', NULL),
(3230, '07160719', 28, 71, 'a:1:{i:283;i:1;}', NULL),
(3231, '07160719', 28, 72, 'a:4:{i:286;i:0;i:287;i:0;i:285;i:1;i:288;i:0;}', NULL),
(3232, '07160719', 28, 73, 'a:2:{i:289;i:0;i:291;i:1;}', NULL),
(3233, '07160719', 28, 74, 'a:2:{i:295;i:0;i:296;i:1;}', NULL),
(3234, '07160719', 28, 75, 'a:3:{i:297;i:0;i:300;i:0;i:298;i:1;}', NULL),
(3235, '07160719', 28, 76, 'a:1:{i:302;i:1;}', NULL),
(3236, '07160719', 28, 77, 'a:1:{i:308;i:1;}', NULL),
(3237, '07160719', 28, 78, 'a:1:{i:312;i:1;}', NULL),
(3238, '07160719', 28, 79, 'a:2:{i:313;i:0;i:316;i:1;}', NULL),
(3239, '07160719', 28, 80, 'a:1:{i:318;i:1;}', NULL),
(3240, '07160719', 28, 81, 'a:2:{i:324;i:0;i:322;i:1;}', NULL),
(3241, '07160719', 28, 82, 'a:1:{i:325;i:1;}', NULL),
(3242, '07160719', 28, 84, 'a:1:{i:336;i:1;}', NULL),
(3243, '07160719', 28, 85, '', NULL),
(3244, '07160719', 28, 86, '', NULL),
(3245, '07160719', 28, 87, '', NULL),
(3246, '07160719', 28, 88, '', NULL),
(3247, '07160719', 28, 89, '', NULL),
(3248, '07160719', 28, 90, '', NULL),
(3249, '07160719', 28, 91, '', NULL),
(3250, '07160719', 28, 92, '', NULL),
(3251, '07160719', 28, 93, '', NULL),
(3252, '07160719', 28, 94, '', NULL),
(3253, '07160719', 28, 95, '', NULL),
(3254, '07160719', 28, 96, '', NULL),
(3255, '07160719', 28, 97, '', NULL),
(3256, '07160719', 28, 98, '', NULL),
(3257, '07160719', 28, 99, '', NULL),
(3258, '07160719', 28, 100, '', NULL),
(3259, '07160719', 28, 101, '', NULL),
(3260, '07160719', 28, 102, '', NULL),
(3261, '07160719', 28, 103, '', NULL),
(3262, '07160719', 28, 104, '', NULL),
(3263, '07160708', 31, 163, 'a:1:{i:646;i:1;}', NULL),
(3264, '07160708', 31, 164, 'a:1:{i:652;i:1;}', NULL),
(3265, '07160708', 31, 165, 'a:1:{i:654;i:1;}', NULL),
(3266, '07160708', 31, 166, 'a:1:{i:661;i:1;}', NULL),
(3267, '07160708', 31, 167, 'a:1:{i:664;i:1;}', NULL),
(3268, '07160708', 31, 168, 'a:2:{i:669;i:0;i:666;i:1;}', NULL),
(3269, '07160708', 31, 169, 'a:1:{i:672;i:1;}', NULL),
(3270, '07160708', 31, 170, 'a:1:{i:674;i:1;}', NULL),
(3271, '07160708', 31, 171, 'a:1:{i:681;i:1;}', NULL),
(3272, '07160708', 31, 172, 'a:1:{i:683;i:1;}', NULL),
(3273, '07160708', 31, 173, 'a:1:{i:688;i:1;}', NULL),
(3274, '07160708', 31, 174, 'a:2:{i:690;i:0;i:692;i:1;}', NULL),
(3275, '07160708', 31, 175, 'a:3:{i:695;i:0;i:694;i:0;i:697;i:1;}', NULL),
(3276, '07160708', 31, 176, 'a:2:{i:699;i:1;i:700;i:0;}', NULL),
(3277, '07160708', 31, 177, 'a:1:{i:704;i:1;}', NULL),
(3278, '07160708', 31, 178, 'a:3:{i:707;i:0;i:706;i:0;i:709;i:1;}', NULL),
(3279, '07160708', 31, 179, 'a:3:{i:710;i:1;i:711;i:0;i:713;i:0;}', NULL),
(3280, '07160708', 31, 180, 'a:1:{i:714;i:1;}', NULL),
(3281, '07160708', 31, 181, 'a:1:{i:721;i:1;}', NULL),
(3282, '07160708', 31, 182, 'a:2:{i:725;i:0;i:724;i:1;}', NULL),
(3283, '07160708', 31, 183, 'a:1:{i:726;i:1;}', NULL),
(3284, '07160708', 31, 184, 'a:1:{i:732;i:1;}', NULL),
(3285, '07160708', 31, 185, 'a:3:{i:735;i:0;i:734;i:0;i:736;i:1;}', NULL),
(3286, '07160708', 31, 186, 'a:1:{i:739;i:1;}', NULL),
(3287, '07160708', 31, 187, 'a:2:{i:743;i:1;i:745;i:0;}', NULL),
(3288, '07160708', 31, 188, 'a:2:{i:747;i:0;i:749;i:1;}', NULL),
(3289, '07160708', 31, 189, 'a:2:{i:751;i:0;i:752;i:1;}', NULL),
(3290, '07160708', 31, 190, 'a:1:{i:757;i:1;}', NULL),
(3291, '07160708', 31, 191, 'a:1:{i:759;i:1;}', NULL),
(3292, '07160708', 31, 192, 'a:2:{i:764;i:0;i:763;i:1;}', NULL),
(3293, '07160708', 31, 193, 'a:1:{i:768;i:1;}', NULL),
(3294, '07160708', 31, 194, '', NULL),
(3295, '07160708', 31, 195, '', NULL),
(3296, '07160708', 31, 196, 'a:1:{i:780;i:1;}', NULL),
(3297, '07160708', 31, 197, 'a:1:{i:783;i:1;}', NULL),
(3298, '07160708', 31, 198, 'a:2:{i:786;i:0;i:787;i:1;}', NULL),
(3299, '07160708', 31, 199, 'a:2:{i:792;i:0;i:791;i:1;}', NULL),
(3300, '07160717', 28, 66, 'a:2:{i:262;i:0;i:263;i:1;}', NULL),
(3301, '07160717', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(3302, '07160717', 28, 68, '', NULL),
(3303, '07160717', 28, 69, '', NULL),
(3304, '07160717', 28, 70, '', NULL),
(3305, '07160717', 28, 71, '', NULL),
(3306, '07160717', 28, 72, '', NULL),
(3307, '07160717', 28, 73, '', NULL),
(3308, '07160717', 28, 74, '', NULL),
(3309, '07160717', 28, 75, '', NULL),
(3310, '07160717', 28, 76, '', NULL),
(3311, '07160717', 28, 77, '', NULL),
(3312, '07160717', 28, 78, '', NULL),
(3313, '07160717', 28, 79, '', NULL),
(3314, '07160717', 28, 80, '', NULL),
(3315, '07160717', 28, 81, '', NULL),
(3316, '07160717', 28, 82, '', NULL),
(3317, '07160717', 28, 84, '', NULL),
(3318, '07160717', 28, 85, '', NULL),
(3319, '07160717', 28, 86, '', NULL),
(3320, '07160717', 28, 87, '', NULL),
(3321, '07160717', 28, 88, '', NULL),
(3322, '07160717', 28, 89, '', NULL),
(3323, '07160717', 28, 90, '', NULL),
(3324, '07160717', 28, 91, '', NULL),
(3325, '07160717', 28, 92, '', NULL),
(3326, '07160717', 28, 93, '', NULL),
(3327, '07160717', 28, 94, '', NULL),
(3328, '07160717', 28, 95, '', NULL),
(3329, '07160717', 28, 96, '', NULL),
(3330, '07160717', 28, 97, '', NULL),
(3331, '07160717', 28, 98, '', NULL),
(3332, '07160717', 28, 99, '', NULL),
(3333, '07160717', 28, 100, '', NULL),
(3334, '07160717', 28, 101, '', NULL),
(3335, '07160717', 28, 102, '', NULL),
(3336, '07160717', 28, 103, '', NULL),
(3337, '07160717', 28, 104, '', NULL),
(3338, '07160707', 33, 230, '', NULL),
(3339, '07160707', 33, 231, '', NULL),
(3340, '07160707', 33, 232, '', NULL),
(3341, '07160707', 33, 233, '', NULL),
(3342, '07160707', 33, 234, '', NULL),
(3343, '07160707', 33, 235, '', NULL),
(3344, '07160707', 33, 236, '', NULL),
(3345, '07160707', 33, 237, '', NULL),
(3346, '07160707', 33, 238, '', NULL),
(3347, '07160707', 33, 239, '', NULL),
(3348, '07160707', 33, 240, '', NULL),
(3349, '07160707', 33, 241, '', NULL),
(3350, '07160707', 33, 242, '', NULL),
(3351, '07160707', 33, 243, '', NULL),
(3352, '07160707', 33, 244, '', NULL),
(3353, '07160707', 33, 245, '', NULL),
(3354, '07160707', 33, 246, '', NULL),
(3355, '07160707', 33, 247, '', NULL),
(3356, '07160707', 33, 248, '', NULL),
(3357, '07160707', 33, 249, '', NULL),
(3358, '07160707', 33, 250, '', NULL),
(3359, '07160707', 33, 251, '', NULL),
(3360, '07160707', 33, 252, '', NULL),
(3361, '07160707', 33, 253, '', NULL),
(3362, '07160707', 33, 254, '', NULL),
(3363, '07160707', 33, 255, '', NULL),
(3364, '07160707', 33, 256, '', NULL),
(3365, '07160707', 33, 257, '', NULL),
(3366, '07160707', 33, 258, '', NULL),
(3367, '07160707', 33, 259, '', NULL),
(3368, '07160707', 33, 260, '', NULL),
(3369, '07160707', 33, 261, '', NULL),
(3370, '07160724', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(3371, '07160724', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(3372, '07160724', 28, 68, '', NULL),
(3373, '07160724', 28, 69, '', NULL),
(3374, '07160724', 28, 70, '', NULL),
(3375, '07160724', 28, 71, '', NULL),
(3376, '07160724', 28, 72, '', NULL),
(3377, '07160724', 28, 73, '', NULL),
(3378, '07160724', 28, 74, '', NULL),
(3379, '07160724', 28, 75, '', NULL),
(3380, '07160724', 28, 76, '', NULL),
(3381, '07160724', 28, 77, '', NULL),
(3382, '07160724', 28, 78, '', NULL),
(3383, '07160724', 28, 79, '', NULL),
(3384, '07160724', 28, 80, '', NULL),
(3385, '07160724', 28, 81, '', NULL),
(3386, '07160724', 28, 82, '', NULL),
(3387, '07160724', 28, 84, '', NULL),
(3388, '07160724', 28, 85, '', NULL),
(3389, '07160724', 28, 86, '', NULL),
(3390, '07160724', 28, 87, '', NULL),
(3391, '07160724', 28, 88, '', NULL),
(3392, '07160724', 28, 89, '', NULL),
(3393, '07160724', 28, 90, '', NULL),
(3394, '07160724', 28, 91, '', NULL),
(3395, '07160724', 28, 92, '', NULL),
(3396, '07160724', 28, 93, '', NULL),
(3397, '07160724', 28, 94, '', NULL),
(3398, '07160724', 28, 95, '', NULL),
(3399, '07160724', 28, 96, '', NULL),
(3400, '07160724', 28, 97, '', NULL),
(3401, '07160724', 28, 98, '', NULL),
(3402, '07160724', 28, 99, '', NULL),
(3403, '07160724', 28, 100, '', NULL),
(3404, '07160724', 28, 101, '', NULL),
(3405, '07160724', 28, 102, '', NULL),
(3406, '07160724', 28, 103, '', NULL),
(3407, '07160724', 28, 104, '', NULL),
(3408, '07160743', 27, 40, 'a:2:{i:160;i:0;i:159;i:1;}', NULL),
(3409, '07160743', 27, 41, 'a:1:{i:161;i:1;}', NULL),
(3410, '07160743', 27, 42, 'a:3:{i:165;i:0;i:167;i:0;i:166;i:1;}', NULL),
(3411, '07160743', 27, 43, 'a:2:{i:172;i:0;i:171;i:1;}', NULL),
(3412, '07160743', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(3413, '07160743', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(3414, '07160743', 27, 46, 'a:2:{i:183;i:0;i:182;i:1;}', NULL),
(3415, '07160743', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(3416, '07160743', 27, 48, 'a:1:{i:189;i:1;}', NULL),
(3417, '07160743', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(3418, '07160743', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(3419, '07160743', 27, 51, 'a:3:{i:204;i:0;i:202;i:0;i:201;i:1;}', NULL),
(3420, '07160743', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(3421, '07160743', 27, 53, 'a:2:{i:211;i:0;i:209;i:1;}', NULL),
(3422, '07160743', 27, 54, 'a:2:{i:213;i:0;i:216;i:1;}', NULL),
(3423, '07160743', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(3424, '07160743', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(3425, '07160743', 27, 57, 'a:1:{i:228;i:1;}', NULL),
(3426, '07160743', 27, 58, 'a:1:{i:230;i:1;}', NULL),
(3427, '07160743', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(3428, '07160743', 27, 60, 'a:1:{i:240;i:1;}', NULL),
(3429, '07160743', 27, 61, 'a:2:{i:241;i:0;i:244;i:1;}', NULL),
(3430, '07160743', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(3431, '07160743', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(3432, '07160743', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(3433, '07160743', 27, 65, 'a:2:{i:257;i:0;i:259;i:1;}', NULL),
(3434, '07160743', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(3435, '07160743', 27, 67, 'a:1:{i:268;i:1;}', NULL),
(3436, '07160743', 27, 68, 'a:1:{i:269;i:1;}', NULL),
(3437, '07160743', 27, 69, 'a:1:{i:273;i:1;}', NULL),
(3438, '07160743', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(3439, '07160743', 27, 71, 'a:1:{i:281;i:1;}', NULL),
(3440, '07160743', 27, 72, 'a:2:{i:285;i:0;i:288;i:1;}', NULL),
(3441, '07160743', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(3442, '07160728', 28, 66, 'a:2:{i:263;i:1;i:262;i:0;}', NULL),
(3443, '07160728', 28, 67, 'a:2:{i:268;i:1;i:267;i:0;}', NULL),
(3444, '07160728', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(3445, '07160728', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(3446, '07160728', 28, 70, 'a:2:{i:278;i:0;i:279;i:1;}', NULL),
(3447, '07160728', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(3448, '07160728', 28, 72, 'a:1:{i:288;i:1;}', NULL),
(3449, '07160728', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(3450, '07160728', 28, 74, 'a:2:{i:296;i:0;i:295;i:1;}', NULL),
(3451, '07160728', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(3452, '07160728', 28, 76, 'a:2:{i:301;i:0;i:302;i:1;}', NULL),
(3453, '07160728', 28, 77, 'a:2:{i:307;i:0;i:308;i:1;}', NULL),
(3454, '07160728', 28, 78, 'a:3:{i:310;i:0;i:309;i:0;i:312;i:1;}', NULL),
(3455, '07160728', 28, 79, 'a:2:{i:313;i:0;i:316;i:1;}', NULL),
(3456, '07160728', 28, 80, 'a:2:{i:318;i:0;i:319;i:1;}', NULL),
(3457, '07160728', 28, 81, 'a:2:{i:322;i:1;i:321;i:0;}', NULL),
(3458, '07160728', 28, 82, 'a:2:{i:327;i:0;i:326;i:1;}', NULL),
(3459, '07160728', 28, 84, 'a:2:{i:333;i:0;i:334;i:1;}', NULL),
(3460, '07160728', 28, 85, 'a:4:{i:339;i:0;i:340;i:0;i:337;i:0;i:338;i:1;}', NULL),
(3461, '07160728', 28, 86, 'a:2:{i:342;i:0;i:343;i:1;}', NULL),
(3462, '07160728', 28, 87, 'a:2:{i:347;i:1;i:345;i:0;}', NULL),
(3463, '07160728', 28, 88, 'a:1:{i:350;i:1;}', NULL),
(3464, '07160728', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(3465, '07160728', 28, 90, 'a:4:{i:357;i:0;i:358;i:0;i:359;i:0;i:360;i:1;}', NULL),
(3466, '07160728', 28, 91, 'a:2:{i:361;i:1;i:362;i:0;}', NULL),
(3467, '07160728', 28, 92, 'a:2:{i:365;i:0;i:367;i:1;}', NULL),
(3468, '07160728', 28, 93, 'a:3:{i:369;i:0;i:372;i:1;i:371;i:0;}', NULL),
(3469, '07160728', 28, 94, 'a:3:{i:376;i:0;i:375;i:0;i:374;i:1;}', NULL),
(3470, '07160728', 28, 95, 'a:2:{i:380;i:0;i:378;i:1;}', NULL),
(3471, '07160728', 28, 96, 'a:2:{i:383;i:0;i:384;i:1;}', NULL),
(3472, '07160728', 28, 97, 'a:1:{i:387;i:1;}', NULL),
(3473, '07160728', 28, 98, 'a:3:{i:391;i:0;i:392;i:1;i:389;i:0;}', NULL),
(3474, '07160728', 28, 99, 'a:1:{i:393;i:1;}', NULL),
(3475, '07160728', 28, 100, 'a:2:{i:397;i:0;i:398;i:1;}', NULL),
(3476, '07160728', 28, 101, 'a:1:{i:402;i:1;}', NULL),
(3477, '07160728', 28, 102, 'a:2:{i:407;i:0;i:406;i:1;}', NULL),
(3478, '07160728', 28, 103, 'a:2:{i:411;i:0;i:410;i:1;}', NULL),
(3479, '07160728', 28, 104, 'a:2:{i:414;i:1;i:415;i:0;}', NULL),
(3480, '07160729', 27, 40, 'a:4:{i:159;i:1;i:158;i:0;i:157;i:0;i:160;i:0;}', NULL),
(3481, '07160729', 27, 41, 'a:3:{i:161;i:1;i:162;i:0;i:163;i:0;}', NULL),
(3482, '07160729', 27, 42, 'a:4:{i:166;i:1;i:165;i:0;i:167;i:0;i:168;i:0;}', NULL),
(3483, '07160729', 27, 43, 'a:3:{i:171;i:1;i:170;i:0;i:169;i:0;}', NULL),
(3484, '07160729', 27, 44, 'a:4:{i:173;i:1;i:174;i:0;i:176;i:0;i:175;i:0;}', NULL),
(3485, '07160729', 27, 45, 'a:3:{i:179;i:0;i:177;i:0;i:178;i:1;}', NULL),
(3486, '07160729', 27, 46, 'a:4:{i:183;i:0;i:184;i:0;i:182;i:1;i:181;i:0;}', NULL),
(3487, '07160729', 27, 47, 'a:3:{i:188;i:1;i:185;i:0;i:186;i:0;}', NULL),
(3488, '07160729', 27, 48, 'a:4:{i:189;i:1;i:190;i:0;i:192;i:0;i:191;i:0;}', NULL),
(3489, '07160729', 27, 49, 'a:3:{i:194;i:1;i:195;i:0;i:196;i:0;}', NULL),
(3490, '07160729', 27, 50, 'a:3:{i:198;i:1;i:199;i:0;i:197;i:0;}', NULL),
(3491, '07160729', 27, 51, 'a:2:{i:201;i:1;i:202;i:0;}', NULL),
(3492, '07160729', 27, 52, 'a:4:{i:206;i:1;i:208;i:0;i:207;i:0;i:205;i:0;}', NULL),
(3493, '07160729', 27, 53, 'a:4:{i:209;i:1;i:210;i:0;i:212;i:0;i:211;i:0;}', NULL),
(3494, '07160729', 27, 54, 'a:3:{i:216;i:1;i:214;i:0;i:213;i:0;}', NULL),
(3495, '07160729', 27, 55, 'a:2:{i:217;i:1;i:218;i:0;}', NULL),
(3496, '07160729', 27, 56, 'a:4:{i:223;i:1;i:224;i:0;i:221;i:0;i:222;i:0;}', NULL),
(3497, '07160729', 27, 57, 'a:3:{i:228;i:1;i:226;i:0;i:225;i:0;}', NULL),
(3498, '07160729', 27, 58, 'a:2:{i:229;i:0;i:230;i:1;}', NULL),
(3499, '07160729', 27, 59, 'a:3:{i:233;i:1;i:234;i:0;i:235;i:0;}', NULL),
(3500, '07160729', 27, 60, 'a:4:{i:240;i:1;i:238;i:0;i:239;i:0;i:237;i:0;}', NULL),
(3501, '07160729', 27, 61, 'a:3:{i:244;i:1;i:241;i:0;i:243;i:0;}', NULL),
(3502, '07160729', 27, 62, 'a:3:{i:246;i:1;i:247;i:0;i:245;i:0;}', NULL),
(3503, '07160729', 27, 63, 'a:3:{i:251;i:1;i:250;i:0;i:249;i:0;}', NULL),
(3504, '07160729', 27, 64, 'a:2:{i:256;i:1;i:253;i:0;}', NULL),
(3505, '07160729', 27, 65, 'a:3:{i:259;i:1;i:258;i:0;i:260;i:0;}', NULL),
(3506, '07160729', 27, 66, 'a:2:{i:263;i:1;i:261;i:0;}', NULL),
(3507, '07160729', 27, 67, 'a:3:{i:268;i:1;i:266;i:0;i:267;i:0;}', NULL),
(3508, '07160729', 27, 68, 'a:2:{i:269;i:1;i:270;i:0;}', NULL),
(3509, '07160729', 27, 69, 'a:4:{i:273;i:1;i:276;i:0;i:274;i:0;i:275;i:0;}', NULL),
(3510, '07160729', 27, 70, 'a:3:{i:279;i:1;i:277;i:0;i:278;i:0;}', NULL),
(3511, '07160729', 27, 71, 'a:3:{i:281;i:1;i:284;i:0;i:282;i:0;}', NULL),
(3512, '07160729', 27, 72, 'a:2:{i:287;i:0;i:288;i:1;}', NULL),
(3513, '07160729', 27, 73, 'a:2:{i:291;i:1;i:290;i:0;}', NULL),
(3514, '07160702', 27, 40, 'a:2:{i:159;i:1;i:158;i:0;}', NULL),
(3515, '07160702', 27, 41, 'a:1:{i:161;i:1;}', NULL),
(3516, '07160702', 27, 42, 'a:2:{i:167;i:0;i:166;i:1;}', NULL),
(3517, '07160702', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(3518, '07160702', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(3519, '07160702', 27, 45, 'a:1:{i:178;i:1;}', NULL),
(3520, '07160702', 27, 46, 'a:2:{i:183;i:0;i:182;i:1;}', NULL),
(3521, '07160702', 27, 47, 'a:2:{i:185;i:0;i:188;i:1;}', NULL),
(3522, '07160702', 27, 48, 'a:1:{i:189;i:1;}', NULL),
(3523, '07160702', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(3524, '07160702', 27, 50, 'a:2:{i:199;i:0;i:198;i:1;}', NULL),
(3525, '07160702', 27, 51, 'a:3:{i:204;i:0;i:202;i:0;i:201;i:1;}', NULL),
(3526, '07160702', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(3527, '07160702', 27, 53, 'a:1:{i:209;i:1;}', NULL),
(3528, '07160702', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(3529, '07160702', 27, 55, 'a:3:{i:219;i:0;i:220;i:0;i:217;i:1;}', NULL),
(3530, '07160702', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(3531, '07160702', 27, 57, 'a:2:{i:227;i:0;i:228;i:1;}', NULL),
(3532, '07160702', 27, 58, 'a:1:{i:230;i:1;}', NULL),
(3533, '07160702', 27, 59, 'a:2:{i:233;i:1;i:234;i:0;}', NULL),
(3534, '07160702', 27, 60, 'a:2:{i:237;i:0;i:240;i:1;}', NULL),
(3535, '07160702', 27, 61, 'a:4:{i:243;i:0;i:241;i:0;i:244;i:1;i:242;i:0;}', NULL),
(3536, '07160702', 27, 62, 'a:2:{i:248;i:0;i:246;i:1;}', NULL),
(3537, '07160702', 27, 63, 'a:3:{i:252;i:0;i:251;i:1;i:250;i:0;}', NULL),
(3538, '07160702', 27, 64, 'a:2:{i:254;i:0;i:256;i:1;}', NULL),
(3539, '07160702', 27, 65, 'a:2:{i:260;i:0;i:259;i:1;}', NULL),
(3540, '07160702', 27, 66, 'a:2:{i:263;i:1;i:264;i:0;}', NULL),
(3541, '07160702', 27, 67, 'a:2:{i:265;i:0;i:268;i:1;}', NULL),
(3542, '07160702', 27, 68, 'a:4:{i:269;i:1;i:272;i:0;i:270;i:0;i:271;i:0;}', NULL),
(3543, '07160702', 27, 69, 'a:3:{i:273;i:0;i:276;i:0;i:275;i:1;}', NULL),
(3544, '07160702', 27, 70, 'a:2:{i:277;i:0;i:279;i:1;}', NULL),
(3545, '07160702', 27, 71, 'a:2:{i:282;i:0;i:281;i:1;}', NULL),
(3546, '07160702', 27, 72, 'a:2:{i:285;i:0;i:288;i:1;}', NULL),
(3547, '07160702', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(3548, '07160731', 27, 40, 'a:4:{i:157;i:0;i:159;i:1;i:158;i:0;i:160;i:0;}', NULL),
(3549, '07160731', 27, 41, 'a:3:{i:163;i:0;i:162;i:0;i:161;i:1;}', NULL),
(3550, '07160731', 27, 42, 'a:2:{i:165;i:0;i:166;i:1;}', NULL),
(3551, '07160731', 27, 43, 'a:2:{i:171;i:1;i:170;i:0;}', NULL),
(3552, '07160731', 27, 44, 'a:3:{i:176;i:0;i:174;i:0;i:173;i:1;}', NULL),
(3553, '07160731', 27, 45, 'a:3:{i:178;i:1;i:179;i:0;i:177;i:0;}', NULL),
(3554, '07160731', 27, 46, 'a:2:{i:182;i:1;i:181;i:0;}', NULL),
(3555, '07160731', 27, 47, 'a:4:{i:185;i:0;i:186;i:0;i:188;i:1;i:187;i:0;}', NULL),
(3556, '07160731', 27, 48, 'a:2:{i:189;i:1;i:190;i:0;}', NULL),
(3557, '07160731', 27, 49, 'a:2:{i:194;i:1;i:193;i:0;}', NULL),
(3558, '07160731', 27, 50, 'a:2:{i:198;i:1;i:197;i:0;}', NULL),
(3559, '07160731', 27, 51, 'a:3:{i:203;i:0;i:201;i:1;i:202;i:0;}', NULL),
(3560, '07160731', 27, 52, 'a:4:{i:208;i:0;i:207;i:0;i:206;i:1;i:205;i:0;}', NULL),
(3561, '07160731', 27, 53, 'a:3:{i:211;i:0;i:210;i:1;i:209;i:0;}', NULL),
(3562, '07160731', 27, 54, 'a:3:{i:213;i:0;i:216;i:0;i:215;i:1;}', NULL),
(3563, '07160731', 27, 55, 'a:3:{i:219;i:0;i:217;i:1;i:218;i:0;}', NULL),
(3564, '07160731', 27, 56, 'a:3:{i:224;i:0;i:223;i:1;i:222;i:0;}', NULL),
(3565, '07160731', 27, 57, 'a:3:{i:225;i:0;i:228;i:1;i:227;i:0;}', NULL),
(3566, '07160731', 27, 58, 'a:4:{i:229;i:0;i:230;i:1;i:232;i:0;i:231;i:0;}', NULL),
(3567, '07160731', 27, 59, 'a:2:{i:233;i:1;i:234;i:0;}', NULL),
(3568, '07160731', 27, 60, 'a:3:{i:238;i:0;i:240;i:1;i:239;i:0;}', NULL),
(3569, '07160731', 27, 61, 'a:2:{i:244;i:1;i:243;i:0;}', NULL),
(3570, '07160731', 27, 62, 'a:3:{i:246;i:1;i:245;i:0;i:247;i:0;}', NULL),
(3571, '07160731', 27, 63, 'a:3:{i:249;i:0;i:251;i:1;i:250;i:0;}', NULL),
(3572, '07160731', 27, 64, 'a:2:{i:256;i:1;i:255;i:0;}', NULL),
(3573, '07160731', 27, 65, 'a:3:{i:259;i:1;i:260;i:0;i:258;i:0;}', NULL),
(3574, '07160731', 27, 66, 'a:3:{i:263;i:1;i:264;i:0;i:262;i:0;}', NULL),
(3575, '07160731', 27, 67, 'a:4:{i:265;i:0;i:266;i:0;i:268;i:1;i:267;i:0;}', NULL),
(3576, '07160731', 27, 68, 'a:2:{i:269;i:1;i:270;i:0;}', NULL),
(3577, '07160731', 27, 69, 'a:2:{i:273;i:1;i:274;i:0;}', NULL),
(3578, '07160731', 27, 70, 'a:2:{i:279;i:1;i:278;i:0;}', NULL),
(3579, '07160731', 27, 71, 'a:2:{i:281;i:1;i:282;i:0;}', NULL),
(3580, '07160731', 27, 72, 'a:4:{i:285;i:0;i:286;i:0;i:288;i:1;i:287;i:0;}', NULL),
(3581, '07160731', 27, 73, 'a:2:{i:291;i:1;i:290;i:0;}', NULL),
(3582, '07160732', 27, 40, 'a:1:{i:160;i:1;}', NULL),
(3583, '07160732', 27, 41, 'a:1:{i:164;i:1;}', NULL),
(3584, '07160732', 27, 42, 'a:1:{i:165;i:1;}', NULL),
(3585, '07160732', 27, 43, 'a:2:{i:172;i:0;i:170;i:1;}', NULL),
(3586, '07160732', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(3587, '07160732', 27, 45, 'a:2:{i:179;i:0;i:178;i:1;}', NULL),
(3588, '07160732', 27, 46, 'a:1:{i:182;i:1;}', NULL),
(3589, '07160732', 27, 47, 'a:1:{i:185;i:1;}', NULL),
(3590, '07160732', 27, 48, 'a:2:{i:190;i:0;i:189;i:1;}', NULL),
(3591, '07160732', 27, 49, 'a:1:{i:193;i:1;}', NULL),
(3592, '07160732', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(3593, '07160732', 27, 51, 'a:1:{i:201;i:1;}', NULL),
(3594, '07160732', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(3595, '07160732', 27, 53, 'a:2:{i:209;i:1;i:211;i:0;}', NULL),
(3596, '07160732', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(3597, '07160732', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(3598, '07160732', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(3599, '07160732', 27, 57, 'a:2:{i:227;i:0;i:228;i:1;}', NULL),
(3600, '07160732', 27, 58, 'a:1:{i:230;i:1;}', NULL),
(3601, '07160732', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(3602, '07160732', 27, 60, 'a:2:{i:240;i:0;i:237;i:1;}', NULL),
(3603, '07160732', 27, 61, 'a:1:{i:243;i:1;}', NULL),
(3604, '07160732', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(3605, '07160732', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(3606, '07160732', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(3607, '07160732', 27, 65, 'a:1:{i:259;i:1;}', NULL),
(3608, '07160732', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(3609, '07160732', 27, 67, 'a:1:{i:268;i:1;}', NULL),
(3610, '07160732', 27, 68, 'a:1:{i:269;i:1;}', NULL),
(3611, '07160732', 27, 69, 'a:2:{i:276;i:0;i:273;i:1;}', NULL),
(3612, '07160732', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(3613, '07160732', 27, 71, 'a:1:{i:281;i:1;}', NULL),
(3614, '07160732', 27, 72, 'a:1:{i:288;i:1;}', NULL),
(3615, '07160732', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(3616, '07160712', 27, 40, 'a:1:{i:159;i:1;}', NULL),
(3617, '07160712', 27, 41, 'a:1:{i:161;i:1;}', NULL),
(3618, '07160712', 27, 42, 'a:1:{i:166;i:1;}', NULL),
(3619, '07160712', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(3620, '07160712', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(3621, '07160712', 27, 45, 'a:1:{i:178;i:1;}', NULL),
(3622, '07160712', 27, 46, 'a:1:{i:183;i:1;}', NULL),
(3623, '07160712', 27, 47, 'a:1:{i:185;i:1;}', NULL),
(3624, '07160712', 27, 48, 'a:1:{i:189;i:1;}', NULL),
(3625, '07160712', 27, 49, 'a:1:{i:195;i:1;}', NULL),
(3626, '07160712', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(3627, '07160712', 27, 51, 'a:1:{i:203;i:1;}', NULL),
(3628, '07160712', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(3629, '07160712', 27, 53, 'a:1:{i:209;i:1;}', NULL),
(3630, '07160712', 27, 54, 'a:1:{i:216;i:1;}', NULL),
(3631, '07160712', 27, 55, 'a:1:{i:217;i:1;}', NULL),
(3632, '07160712', 27, 56, 'a:1:{i:224;i:1;}', NULL),
(3633, '07160712', 27, 57, 'a:1:{i:228;i:1;}', NULL),
(3634, '07160712', 27, 58, 'a:1:{i:232;i:1;}', NULL),
(3635, '07160712', 27, 59, 'a:1:{i:234;i:1;}', NULL),
(3636, '07160712', 27, 60, 'a:1:{i:237;i:1;}', NULL),
(3637, '07160712', 27, 61, 'a:1:{i:241;i:1;}', NULL),
(3638, '07160712', 27, 62, 'a:1:{i:245;i:1;}', NULL),
(3639, '07160712', 27, 63, 'a:2:{i:251;i:1;i:250;i:0;}', NULL),
(3640, '07160712', 27, 64, 'a:1:{i:253;i:1;}', NULL),
(3641, '07160712', 27, 65, 'a:1:{i:258;i:1;}', NULL),
(3642, '07160712', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(3643, '07160712', 27, 67, 'a:1:{i:266;i:1;}', NULL),
(3644, '07160712', 27, 68, 'a:1:{i:269;i:1;}', NULL),
(3645, '07160712', 27, 69, 'a:1:{i:273;i:1;}', NULL),
(3646, '07160712', 27, 70, 'a:1:{i:277;i:1;}', NULL);
INSERT INTO `exercise_answer` (`id`, `studentid`, `paper_id`, `select_question_id`, `answer`, `memo`) VALUES
(3647, '07160712', 27, 71, 'a:1:{i:282;i:1;}', NULL),
(3648, '07160712', 27, 72, 'a:1:{i:286;i:1;}', NULL),
(3649, '07160712', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(3650, '07160725', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(3651, '07160725', 28, 67, 'a:2:{i:268;i:1;i:265;i:0;}', NULL),
(3652, '07160725', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(3653, '07160725', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(3654, '07160725', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(3655, '07160725', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(3656, '07160725', 28, 72, 'a:1:{i:288;i:1;}', NULL),
(3657, '07160725', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(3658, '07160725', 28, 74, 'a:2:{i:296;i:0;i:295;i:1;}', NULL),
(3659, '07160725', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(3660, '07160725', 28, 76, 'a:1:{i:302;i:1;}', NULL),
(3661, '07160725', 28, 77, 'a:1:{i:308;i:1;}', NULL),
(3662, '07160725', 28, 78, 'a:2:{i:309;i:0;i:312;i:1;}', NULL),
(3663, '07160725', 28, 79, 'a:3:{i:314;i:0;i:313;i:0;i:316;i:1;}', NULL),
(3664, '07160725', 28, 80, 'a:3:{i:320;i:0;i:318;i:0;i:319;i:1;}', NULL),
(3665, '07160725', 28, 81, 'a:1:{i:322;i:1;}', NULL),
(3666, '07160725', 28, 82, 'a:1:{i:326;i:1;}', NULL),
(3667, '07160725', 28, 84, 'a:1:{i:334;i:1;}', NULL),
(3668, '07160725', 28, 85, 'a:1:{i:338;i:1;}', NULL),
(3669, '07160725', 28, 86, 'a:2:{i:344;i:0;i:343;i:1;}', NULL),
(3670, '07160725', 28, 87, 'a:1:{i:347;i:1;}', NULL),
(3671, '07160725', 28, 88, 'a:1:{i:350;i:1;}', NULL),
(3672, '07160725', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(3673, '07160725', 28, 90, 'a:1:{i:360;i:1;}', NULL),
(3674, '07160725', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(3675, '07160725', 28, 92, 'a:2:{i:366;i:0;i:367;i:1;}', NULL),
(3676, '07160725', 28, 93, 'a:2:{i:370;i:0;i:372;i:1;}', NULL),
(3677, '07160725', 28, 94, 'a:1:{i:374;i:1;}', NULL),
(3678, '07160725', 28, 95, 'a:1:{i:378;i:1;}', NULL),
(3679, '07160725', 28, 96, 'a:1:{i:384;i:1;}', NULL),
(3680, '07160725', 28, 97, 'a:1:{i:387;i:1;}', NULL),
(3681, '07160725', 28, 98, 'a:2:{i:391;i:0;i:392;i:1;}', NULL),
(3682, '07160725', 28, 99, 'a:2:{i:393;i:1;i:396;i:0;}', NULL),
(3683, '07160725', 28, 100, 'a:1:{i:398;i:1;}', NULL),
(3684, '07160725', 28, 101, 'a:1:{i:402;i:1;}', NULL),
(3685, '07160725', 28, 102, 'a:1:{i:406;i:1;}', NULL),
(3686, '07160725', 28, 103, 'a:1:{i:410;i:1;}', NULL),
(3687, '07160725', 28, 104, 'a:2:{i:415;i:0;i:414;i:1;}', NULL),
(3688, '07160801', 27, 40, 'a:1:{i:160;i:1;}', NULL),
(3689, '07160801', 27, 41, 'a:1:{i:163;i:1;}', NULL),
(3690, '07160801', 27, 42, 'a:1:{i:165;i:1;}', NULL),
(3691, '07160801', 27, 43, 'a:1:{i:171;i:1;}', NULL),
(3692, '07160801', 27, 44, 'a:1:{i:173;i:1;}', NULL),
(3693, '07160801', 27, 45, 'a:1:{i:179;i:1;}', NULL),
(3694, '07160801', 27, 46, 'a:1:{i:183;i:1;}', NULL),
(3695, '07160801', 27, 47, 'a:1:{i:188;i:1;}', NULL),
(3696, '07160801', 27, 48, 'a:1:{i:189;i:1;}', NULL),
(3697, '07160801', 27, 49, 'a:1:{i:194;i:1;}', NULL),
(3698, '07160801', 27, 50, 'a:1:{i:198;i:1;}', NULL),
(3699, '07160801', 27, 51, 'a:1:{i:204;i:1;}', NULL),
(3700, '07160801', 27, 52, 'a:1:{i:206;i:1;}', NULL),
(3701, '07160801', 27, 53, 'a:1:{i:209;i:1;}', NULL),
(3702, '07160801', 27, 54, 'a:1:{i:213;i:1;}', NULL),
(3703, '07160801', 27, 55, 'a:1:{i:220;i:1;}', NULL),
(3704, '07160801', 27, 56, 'a:1:{i:223;i:1;}', NULL),
(3705, '07160801', 27, 57, 'a:1:{i:227;i:1;}', NULL),
(3706, '07160801', 27, 58, 'a:1:{i:230;i:1;}', NULL),
(3707, '07160801', 27, 59, 'a:1:{i:233;i:1;}', NULL),
(3708, '07160801', 27, 60, 'a:1:{i:240;i:1;}', NULL),
(3709, '07160801', 27, 61, 'a:1:{i:244;i:1;}', NULL),
(3710, '07160801', 27, 62, 'a:1:{i:246;i:1;}', NULL),
(3711, '07160801', 27, 63, 'a:1:{i:251;i:1;}', NULL),
(3712, '07160801', 27, 64, 'a:1:{i:256;i:1;}', NULL),
(3713, '07160801', 27, 65, 'a:1:{i:259;i:1;}', NULL),
(3714, '07160801', 27, 66, 'a:1:{i:263;i:1;}', NULL),
(3715, '07160801', 27, 67, 'a:1:{i:268;i:1;}', NULL),
(3716, '07160801', 27, 68, 'a:1:{i:269;i:1;}', NULL),
(3717, '07160801', 27, 69, 'a:1:{i:273;i:1;}', NULL),
(3718, '07160801', 27, 70, 'a:1:{i:279;i:1;}', NULL),
(3719, '07160801', 27, 71, 'a:1:{i:281;i:1;}', NULL),
(3720, '07160801', 27, 72, 'a:1:{i:287;i:1;}', NULL),
(3721, '07160801', 27, 73, 'a:1:{i:291;i:1;}', NULL),
(3722, '07160740', 28, 66, 'a:3:{i:263;i:1;i:262;i:0;i:264;i:0;}', NULL),
(3723, '07160740', 28, 67, 'a:2:{i:268;i:1;i:267;i:0;}', NULL),
(3724, '07160740', 28, 68, 'a:2:{i:269;i:1;i:270;i:0;}', NULL),
(3725, '07160740', 28, 69, 'a:2:{i:273;i:1;i:274;i:0;}', NULL),
(3726, '07160740', 28, 70, 'a:3:{i:278;i:1;i:277;i:0;i:279;i:0;}', NULL),
(3727, '07160740', 28, 71, 'a:3:{i:281;i:1;i:282;i:0;i:284;i:0;}', NULL),
(3728, '07160740', 28, 72, 'a:2:{i:288;i:1;i:287;i:0;}', NULL),
(3729, '07160740', 28, 73, 'a:2:{i:289;i:1;i:290;i:0;}', NULL),
(3730, '07160740', 28, 74, 'a:2:{i:296;i:1;i:295;i:0;}', NULL),
(3731, '07160740', 28, 75, 'a:3:{i:300;i:0;i:298;i:0;i:299;i:1;}', NULL),
(3732, '07160740', 28, 76, 'a:3:{i:301;i:0;i:302;i:1;i:303;i:0;}', NULL),
(3733, '07160740', 28, 77, 'a:2:{i:306;i:0;i:308;i:1;}', NULL),
(3734, '07160740', 28, 78, 'a:3:{i:310;i:1;i:309;i:0;i:311;i:0;}', NULL),
(3735, '07160740', 28, 79, 'a:2:{i:316;i:1;i:315;i:0;}', NULL),
(3736, '07160740', 28, 80, 'a:3:{i:318;i:1;i:319;i:0;i:317;i:0;}', NULL),
(3737, '07160740', 28, 81, 'a:3:{i:322;i:0;i:321;i:0;i:323;i:1;}', NULL),
(3738, '07160740', 28, 82, 'a:2:{i:325;i:1;i:326;i:0;}', NULL),
(3739, '07160740', 28, 84, 'a:2:{i:336;i:1;i:335;i:0;}', NULL),
(3740, '07160740', 28, 85, 'a:3:{i:339;i:0;i:338;i:0;i:337;i:1;}', NULL),
(3741, '07160740', 28, 86, 'a:3:{i:344;i:1;i:343;i:0;i:342;i:0;}', NULL),
(3742, '07160740', 28, 87, 'a:2:{i:345;i:1;i:346;i:0;}', NULL),
(3743, '07160740', 28, 88, 'a:2:{i:350;i:1;i:349;i:0;}', NULL),
(3744, '07160740', 28, 89, 'a:2:{i:355;i:1;i:354;i:0;}', NULL),
(3745, '07160740', 28, 90, 'a:1:{i:359;i:1;}', NULL),
(3746, '07160740', 28, 91, 'a:2:{i:362;i:0;i:361;i:1;}', NULL),
(3747, '07160740', 28, 92, 'a:2:{i:366;i:0;i:367;i:1;}', NULL),
(3748, '07160740', 28, 93, 'a:2:{i:370;i:1;i:371;i:0;}', NULL),
(3749, '07160740', 28, 94, 'a:2:{i:374;i:1;i:375;i:0;}', NULL),
(3750, '07160740', 28, 95, 'a:2:{i:379;i:0;i:378;i:1;}', NULL),
(3751, '07160740', 28, 96, 'a:2:{i:381;i:0;i:384;i:1;}', NULL),
(3752, '07160740', 28, 97, 'a:2:{i:385;i:1;i:387;i:0;}', NULL),
(3753, '07160740', 28, 98, 'a:3:{i:389;i:1;i:390;i:0;i:391;i:0;}', NULL),
(3754, '07160740', 28, 99, 'a:2:{i:396;i:1;i:395;i:0;}', NULL),
(3755, '07160740', 28, 100, 'a:2:{i:399;i:1;i:398;i:0;}', NULL),
(3756, '07160740', 28, 101, 'a:2:{i:402;i:1;i:403;i:0;}', NULL),
(3757, '07160740', 28, 102, 'a:2:{i:408;i:1;i:407;i:0;}', NULL),
(3758, '07160740', 28, 103, 'a:2:{i:411;i:1;i:412;i:0;}', NULL),
(3759, '07160740', 28, 104, 'a:3:{i:414;i:1;i:413;i:0;i:415;i:0;}', NULL),
(3760, '07160706', 28, 66, 'a:4:{i:264;i:0;i:263;i:1;i:262;i:0;i:261;i:0;}', NULL),
(3761, '07160706', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(3762, '07160706', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(3763, '07160706', 28, 69, 'a:3:{i:276;i:0;i:273;i:1;i:275;i:0;}', NULL),
(3764, '07160706', 28, 70, 'a:2:{i:279;i:1;i:278;i:0;}', NULL),
(3765, '07160706', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(3766, '07160706', 28, 72, 'a:2:{i:286;i:0;i:288;i:1;}', NULL),
(3767, '07160706', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(3768, '07160706', 28, 74, 'a:2:{i:296;i:0;i:295;i:1;}', NULL),
(3769, '07160706', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(3770, '07160706', 28, 76, 'a:2:{i:301;i:0;i:302;i:1;}', NULL),
(3771, '07160706', 28, 77, 'a:2:{i:307;i:0;i:308;i:1;}', NULL),
(3772, '07160706', 28, 78, 'a:2:{i:312;i:1;i:309;i:0;}', NULL),
(3773, '07160706', 28, 79, 'a:2:{i:313;i:0;i:316;i:1;}', NULL),
(3774, '07160706', 28, 80, 'a:4:{i:319;i:1;i:318;i:0;i:320;i:0;i:317;i:0;}', NULL),
(3775, '07160706', 28, 81, 'a:1:{i:322;i:1;}', NULL),
(3776, '07160706', 28, 82, 'a:1:{i:326;i:1;}', NULL),
(3777, '07160706', 28, 84, 'a:3:{i:336;i:0;i:335;i:0;i:334;i:1;}', NULL),
(3778, '07160706', 28, 85, 'a:2:{i:337;i:0;i:338;i:1;}', NULL),
(3779, '07160706', 28, 86, 'a:3:{i:344;i:0;i:342;i:0;i:343;i:1;}', NULL),
(3780, '07160706', 28, 87, 'a:2:{i:347;i:1;i:345;i:0;}', NULL),
(3781, '07160706', 28, 88, 'a:2:{i:349;i:0;i:350;i:1;}', NULL),
(3782, '07160706', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(3783, '07160706', 28, 90, 'a:2:{i:358;i:0;i:360;i:1;}', NULL),
(3784, '07160706', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(3785, '07160706', 28, 92, 'a:2:{i:366;i:0;i:367;i:1;}', NULL),
(3786, '07160706', 28, 93, 'a:1:{i:372;i:1;}', NULL),
(3787, '07160706', 28, 94, 'a:1:{i:374;i:1;}', NULL),
(3788, '07160706', 28, 95, 'a:2:{i:377;i:0;i:378;i:1;}', NULL),
(3789, '07160706', 28, 96, 'a:4:{i:384;i:1;i:383;i:0;i:382;i:0;i:381;i:0;}', NULL),
(3790, '07160706', 28, 97, 'a:4:{i:385;i:0;i:386;i:0;i:387;i:1;i:388;i:0;}', NULL),
(3791, '07160706', 28, 98, 'a:1:{i:392;i:1;}', NULL),
(3792, '07160706', 28, 99, 'a:4:{i:395;i:0;i:396;i:0;i:394;i:0;i:393;i:1;}', NULL),
(3793, '07160706', 28, 100, 'a:3:{i:399;i:0;i:397;i:0;i:398;i:1;}', NULL),
(3794, '07160706', 28, 101, 'a:1:{i:402;i:1;}', NULL),
(3795, '07160706', 28, 102, 'a:3:{i:408;i:0;i:407;i:0;i:406;i:1;}', NULL),
(3796, '07160706', 28, 103, 'a:2:{i:411;i:0;i:410;i:1;}', NULL),
(3797, '07160706', 28, 104, 'a:2:{i:415;i:0;i:414;i:1;}', NULL),
(3798, '07160731', 28, 66, '', NULL),
(3799, '07160731', 28, 67, '', NULL),
(3800, '07160731', 28, 68, '', NULL),
(3801, '07160731', 28, 69, '', NULL),
(3802, '07160731', 28, 70, '', NULL),
(3803, '07160731', 28, 71, '', NULL),
(3804, '07160731', 28, 72, '', NULL),
(3805, '07160731', 28, 73, '', NULL),
(3806, '07160731', 28, 74, '', NULL),
(3807, '07160731', 28, 75, '', NULL),
(3808, '07160731', 28, 76, '', NULL),
(3809, '07160731', 28, 77, '', NULL),
(3810, '07160731', 28, 78, '', NULL),
(3811, '07160731', 28, 79, '', NULL),
(3812, '07160731', 28, 80, '', NULL),
(3813, '07160731', 28, 81, '', NULL),
(3814, '07160731', 28, 82, '', NULL),
(3815, '07160731', 28, 84, '', NULL),
(3816, '07160731', 28, 85, '', NULL),
(3817, '07160731', 28, 86, '', NULL),
(3818, '07160731', 28, 87, '', NULL),
(3819, '07160731', 28, 88, '', NULL),
(3820, '07160731', 28, 89, '', NULL),
(3821, '07160731', 28, 90, '', NULL),
(3822, '07160731', 28, 91, '', NULL),
(3823, '07160731', 28, 92, '', NULL),
(3824, '07160731', 28, 93, '', NULL),
(3825, '07160731', 28, 94, '', NULL),
(3826, '07160731', 28, 95, '', NULL),
(3827, '07160731', 28, 96, '', NULL),
(3828, '07160731', 28, 97, '', NULL),
(3829, '07160731', 28, 98, '', NULL),
(3830, '07160731', 28, 99, '', NULL),
(3831, '07160731', 28, 100, '', NULL),
(3832, '07160731', 28, 101, '', NULL),
(3833, '07160731', 28, 102, '', NULL),
(3834, '07160731', 28, 103, '', NULL),
(3835, '07160731', 28, 104, '', NULL),
(3836, '07160801', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(3837, '07160801', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(3838, '07160801', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(3839, '07160801', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(3840, '07160801', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(3841, '07160801', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(3842, '07160801', 28, 72, 'a:1:{i:285;i:1;}', NULL),
(3843, '07160801', 28, 73, 'a:1:{i:289;i:1;}', NULL),
(3844, '07160801', 28, 74, 'a:3:{i:293;i:0;i:296;i:0;i:295;i:1;}', NULL),
(3845, '07160801', 28, 75, 'a:1:{i:297;i:1;}', NULL),
(3846, '07160801', 28, 76, 'a:1:{i:302;i:1;}', NULL),
(3847, '07160801', 28, 77, 'a:1:{i:308;i:1;}', NULL),
(3848, '07160801', 28, 78, 'a:2:{i:312;i:0;i:309;i:1;}', NULL),
(3849, '07160801', 28, 79, 'a:1:{i:313;i:1;}', NULL),
(3850, '07160801', 28, 80, 'a:1:{i:320;i:1;}', NULL),
(3851, '07160801', 28, 81, 'a:2:{i:324;i:0;i:321;i:1;}', NULL),
(3852, '07160801', 28, 82, 'a:1:{i:326;i:1;}', NULL),
(3853, '07160801', 28, 84, 'a:1:{i:336;i:1;}', NULL),
(3854, '07160801', 28, 85, 'a:1:{i:337;i:1;}', NULL),
(3855, '07160801', 28, 86, 'a:1:{i:344;i:1;}', NULL),
(3856, '07160801', 28, 87, 'a:1:{i:345;i:1;}', NULL),
(3857, '07160801', 28, 88, 'a:1:{i:350;i:1;}', NULL),
(3858, '07160801', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(3859, '07160801', 28, 90, 'a:1:{i:357;i:1;}', NULL),
(3860, '07160801', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(3861, '07160801', 28, 92, 'a:1:{i:366;i:1;}', NULL),
(3862, '07160801', 28, 93, 'a:1:{i:372;i:1;}', NULL),
(3863, '07160801', 28, 94, 'a:1:{i:374;i:1;}', NULL),
(3864, '07160801', 28, 95, 'a:1:{i:378;i:1;}', NULL),
(3865, '07160801', 28, 96, 'a:2:{i:383;i:0;i:381;i:1;}', NULL),
(3866, '07160801', 28, 97, 'a:1:{i:386;i:1;}', NULL),
(3867, '07160801', 28, 98, 'a:1:{i:392;i:1;}', NULL),
(3868, '07160801', 28, 99, 'a:2:{i:396;i:0;i:393;i:1;}', NULL),
(3869, '07160801', 28, 100, 'a:1:{i:399;i:1;}', NULL),
(3870, '07160801', 28, 101, 'a:1:{i:403;i:1;}', NULL),
(3871, '07160801', 28, 102, 'a:1:{i:407;i:1;}', NULL),
(3872, '07160801', 28, 103, 'a:2:{i:411;i:0;i:410;i:1;}', NULL),
(3873, '07160801', 28, 104, 'a:1:{i:414;i:1;}', NULL),
(3874, '07160738', 28, 66, 'a:2:{i:263;i:1;i:262;i:0;}', NULL),
(3875, '07160738', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(3876, '07160738', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(3877, '07160738', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(3878, '07160738', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(3879, '07160738', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(3880, '07160738', 28, 72, 'a:1:{i:288;i:1;}', NULL),
(3881, '07160738', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(3882, '07160738', 28, 74, 'a:2:{i:296;i:0;i:295;i:1;}', NULL),
(3883, '07160738', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(3884, '07160738', 28, 76, 'a:1:{i:302;i:1;}', NULL),
(3885, '07160738', 28, 77, 'a:1:{i:308;i:1;}', NULL),
(3886, '07160738', 28, 78, 'a:2:{i:309;i:0;i:312;i:1;}', NULL),
(3887, '07160738', 28, 79, 'a:1:{i:316;i:1;}', NULL),
(3888, '07160738', 28, 80, 'a:2:{i:318;i:0;i:319;i:1;}', NULL),
(3889, '07160738', 28, 81, 'a:2:{i:321;i:0;i:322;i:1;}', NULL),
(3890, '07160738', 28, 82, 'a:2:{i:328;i:0;i:326;i:1;}', NULL),
(3891, '07160738', 28, 84, 'a:2:{i:333;i:0;i:334;i:1;}', NULL),
(3892, '07160738', 28, 85, 'a:1:{i:338;i:1;}', NULL),
(3893, '07160738', 28, 86, 'a:2:{i:344;i:0;i:343;i:1;}', NULL),
(3894, '07160738', 28, 87, 'a:1:{i:347;i:1;}', NULL),
(3895, '07160738', 28, 88, 'a:2:{i:351;i:0;i:350;i:1;}', NULL),
(3896, '07160738', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(3897, '07160738', 28, 90, 'a:3:{i:357;i:0;i:358;i:0;i:360;i:1;}', NULL),
(3898, '07160738', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(3899, '07160738', 28, 92, 'a:2:{i:366;i:0;i:367;i:1;}', NULL),
(3900, '07160738', 28, 93, 'a:2:{i:370;i:0;i:372;i:1;}', NULL),
(3901, '07160738', 28, 94, 'a:2:{i:373;i:0;i:374;i:1;}', NULL),
(3902, '07160738', 28, 95, 'a:1:{i:378;i:1;}', NULL),
(3903, '07160738', 28, 96, 'a:3:{i:381;i:0;i:383;i:0;i:384;i:1;}', NULL),
(3904, '07160738', 28, 97, 'a:2:{i:385;i:0;i:387;i:1;}', NULL),
(3905, '07160738', 28, 98, 'a:3:{i:391;i:0;i:390;i:0;i:392;i:1;}', NULL),
(3906, '07160738', 28, 99, 'a:1:{i:393;i:1;}', NULL),
(3907, '07160738', 28, 100, 'a:2:{i:400;i:0;i:398;i:1;}', NULL),
(3908, '07160738', 28, 101, 'a:1:{i:402;i:1;}', NULL),
(3909, '07160738', 28, 102, 'a:2:{i:407;i:0;i:406;i:1;}', NULL),
(3910, '07160738', 28, 103, 'a:2:{i:411;i:0;i:410;i:1;}', NULL),
(3911, '07160738', 28, 104, 'a:1:{i:414;i:1;}', NULL),
(3912, '07160737', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(3913, '07160737', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(3914, '07160737', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(3915, '07160737', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(3916, '07160737', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(3917, '07160737', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(3918, '07160737', 28, 72, 'a:1:{i:285;i:1;}', NULL),
(3919, '07160737', 28, 73, 'a:1:{i:289;i:1;}', NULL),
(3920, '07160737', 28, 74, 'a:1:{i:295;i:1;}', NULL),
(3921, '07160737', 28, 75, 'a:1:{i:297;i:1;}', NULL),
(3922, '07160737', 28, 76, 'a:1:{i:301;i:1;}', NULL),
(3923, '07160737', 28, 77, 'a:1:{i:305;i:1;}', NULL),
(3924, '07160737', 28, 78, 'a:1:{i:312;i:1;}', NULL),
(3925, '07160737', 28, 79, 'a:1:{i:314;i:1;}', NULL),
(3926, '07160737', 28, 80, 'a:1:{i:317;i:1;}', NULL),
(3927, '07160737', 28, 81, 'a:1:{i:322;i:1;}', NULL),
(3928, '07160737', 28, 82, 'a:1:{i:328;i:1;}', NULL),
(3929, '07160737', 28, 84, 'a:1:{i:336;i:1;}', NULL),
(3930, '07160737', 28, 85, 'a:1:{i:338;i:1;}', NULL),
(3931, '07160737', 28, 86, 'a:2:{i:342;i:0;i:344;i:1;}', NULL),
(3932, '07160737', 28, 87, 'a:1:{i:345;i:1;}', NULL),
(3933, '07160737', 28, 88, 'a:1:{i:350;i:1;}', NULL),
(3934, '07160737', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(3935, '07160737', 28, 90, 'a:1:{i:360;i:1;}', NULL),
(3936, '07160737', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(3937, '07160737', 28, 92, 'a:1:{i:366;i:1;}', NULL),
(3938, '07160737', 28, 93, 'a:1:{i:372;i:1;}', NULL),
(3939, '07160737', 28, 94, 'a:1:{i:373;i:1;}', NULL),
(3940, '07160737', 28, 95, 'a:1:{i:377;i:1;}', NULL),
(3941, '07160737', 28, 96, 'a:1:{i:384;i:1;}', NULL),
(3942, '07160737', 28, 97, 'a:1:{i:385;i:1;}', NULL),
(3943, '07160737', 28, 98, 'a:1:{i:392;i:1;}', NULL),
(3944, '07160737', 28, 99, 'a:1:{i:393;i:1;}', NULL),
(3945, '07160737', 28, 100, 'a:1:{i:400;i:1;}', NULL),
(3946, '07160737', 28, 101, 'a:1:{i:402;i:1;}', NULL),
(3947, '07160737', 28, 102, 'a:1:{i:407;i:1;}', NULL),
(3948, '07160737', 28, 103, 'a:1:{i:411;i:1;}', NULL),
(3949, '07160737', 28, 104, 'a:2:{i:414;i:1;i:413;i:0;}', NULL),
(3950, '07160712', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(3951, '07160712', 28, 67, 'a:2:{i:265;i:0;i:268;i:1;}', NULL),
(3952, '07160712', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(3953, '07160712', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(3954, '07160712', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(3955, '07160712', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(3956, '07160712', 28, 72, 'a:1:{i:288;i:1;}', NULL),
(3957, '07160712', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(3958, '07160712', 28, 74, 'a:1:{i:295;i:1;}', NULL),
(3959, '07160712', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(3960, '07160712', 28, 76, 'a:1:{i:301;i:1;}', NULL),
(3961, '07160712', 28, 77, 'a:1:{i:307;i:1;}', NULL),
(3962, '07160712', 28, 78, 'a:1:{i:309;i:1;}', NULL),
(3963, '07160712', 28, 79, 'a:1:{i:313;i:1;}', NULL),
(3964, '07160712', 28, 80, 'a:1:{i:320;i:1;}', NULL),
(3965, '07160712', 28, 81, 'a:1:{i:324;i:1;}', NULL),
(3966, '07160712', 28, 82, 'a:3:{i:326;i:0;i:328;i:0;i:325;i:1;}', NULL),
(3967, '07160712', 28, 84, 'a:1:{i:333;i:1;}', NULL),
(3968, '07160712', 28, 85, 'a:1:{i:337;i:1;}', NULL),
(3969, '07160712', 28, 86, 'a:1:{i:342;i:1;}', NULL),
(3970, '07160712', 28, 87, 'a:1:{i:345;i:1;}', NULL),
(3971, '07160712', 28, 88, 'a:1:{i:350;i:1;}', NULL),
(3972, '07160712', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(3973, '07160712', 28, 90, '', NULL),
(3974, '07160712', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(3975, '07160712', 28, 92, 'a:1:{i:367;i:1;}', NULL),
(3976, '07160712', 28, 93, 'a:1:{i:372;i:1;}', NULL),
(3977, '07160712', 28, 94, 'a:1:{i:374;i:1;}', NULL),
(3978, '07160712', 28, 95, 'a:1:{i:378;i:1;}', NULL),
(3979, '07160712', 28, 96, 'a:3:{i:382;i:0;i:381;i:0;i:383;i:1;}', NULL),
(3980, '07160712', 28, 97, 'a:1:{i:385;i:1;}', NULL),
(3981, '07160712', 28, 98, 'a:2:{i:389;i:0;i:391;i:1;}', NULL),
(3982, '07160712', 28, 99, 'a:1:{i:396;i:1;}', NULL),
(3983, '07160712', 28, 100, 'a:1:{i:400;i:1;}', NULL),
(3984, '07160712', 28, 101, 'a:1:{i:402;i:1;}', NULL),
(3985, '07160712', 28, 102, 'a:1:{i:407;i:1;}', NULL),
(3986, '07160712', 28, 103, 'a:1:{i:411;i:1;}', NULL),
(3987, '07160712', 28, 104, 'a:1:{i:414;i:1;}', NULL),
(3988, '07160710', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(3989, '07160710', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(3990, '07160710', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(3991, '07160710', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(3992, '07160710', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(3993, '07160710', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(3994, '07160710', 28, 72, 'a:1:{i:288;i:1;}', NULL),
(3995, '07160710', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(3996, '07160710', 28, 74, 'a:1:{i:295;i:1;}', NULL),
(3997, '07160710', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(3998, '07160710', 28, 76, 'a:1:{i:302;i:1;}', NULL),
(3999, '07160710', 28, 77, 'a:1:{i:308;i:1;}', NULL),
(4000, '07160710', 28, 78, 'a:2:{i:311;i:0;i:312;i:1;}', NULL),
(4001, '07160710', 28, 79, 'a:1:{i:316;i:1;}', NULL),
(4002, '07160710', 28, 80, 'a:2:{i:320;i:0;i:319;i:1;}', NULL),
(4003, '07160710', 28, 81, 'a:2:{i:324;i:0;i:322;i:1;}', NULL),
(4004, '07160710', 28, 82, 'a:1:{i:326;i:1;}', NULL),
(4005, '07160710', 28, 84, 'a:1:{i:334;i:1;}', NULL),
(4006, '07160710', 28, 85, 'a:1:{i:338;i:1;}', NULL),
(4007, '07160710', 28, 86, 'a:2:{i:344;i:0;i:343;i:1;}', NULL),
(4008, '07160710', 28, 87, 'a:1:{i:347;i:1;}', NULL),
(4009, '07160710', 28, 88, 'a:2:{i:351;i:0;i:350;i:1;}', NULL),
(4010, '07160710', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(4011, '07160710', 28, 90, 'a:3:{i:359;i:0;i:358;i:0;i:360;i:1;}', NULL),
(4012, '07160710', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(4013, '07160710', 28, 92, 'a:2:{i:366;i:0;i:367;i:1;}', NULL),
(4014, '07160710', 28, 93, 'a:2:{i:372;i:1;i:370;i:0;}', NULL),
(4015, '07160710', 28, 94, 'a:1:{i:374;i:1;}', NULL),
(4016, '07160710', 28, 95, 'a:1:{i:378;i:1;}', NULL),
(4017, '07160710', 28, 96, 'a:2:{i:381;i:0;i:384;i:1;}', NULL),
(4018, '07160710', 28, 97, 'a:2:{i:385;i:0;i:387;i:1;}', NULL),
(4019, '07160710', 28, 98, 'a:3:{i:391;i:0;i:390;i:0;i:392;i:1;}', NULL),
(4020, '07160710', 28, 99, 'a:1:{i:393;i:1;}', NULL),
(4021, '07160710', 28, 100, 'a:1:{i:398;i:1;}', NULL),
(4022, '07160710', 28, 101, 'a:2:{i:401;i:0;i:402;i:1;}', NULL),
(4023, '07160710', 28, 102, 'a:2:{i:407;i:0;i:406;i:1;}', NULL),
(4024, '07160710', 28, 103, 'a:2:{i:411;i:0;i:410;i:1;}', NULL),
(4025, '07160710', 28, 104, 'a:1:{i:414;i:1;}', NULL),
(4026, '07160732', 28, 66, 'a:1:{i:262;i:1;}', NULL),
(4027, '07160732', 28, 67, 'a:1:{i:265;i:1;}', NULL),
(4028, '07160732', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(4029, '07160732', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(4030, '07160732', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(4031, '07160732', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(4032, '07160732', 28, 72, 'a:1:{i:288;i:1;}', NULL),
(4033, '07160732', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(4034, '07160732', 28, 74, 'a:1:{i:296;i:1;}', NULL),
(4035, '07160732', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(4036, '07160732', 28, 76, 'a:1:{i:301;i:1;}', NULL),
(4037, '07160732', 28, 77, 'a:1:{i:307;i:1;}', NULL),
(4038, '07160732', 28, 78, 'a:1:{i:312;i:1;}', NULL),
(4039, '07160732', 28, 79, 'a:1:{i:314;i:1;}', NULL),
(4040, '07160732', 28, 80, 'a:3:{i:319;i:1;i:318;i:0;i:317;i:0;}', NULL),
(4041, '07160732', 28, 81, 'a:2:{i:322;i:1;i:321;i:0;}', NULL),
(4042, '07160732', 28, 82, 'a:2:{i:325;i:1;i:326;i:0;}', NULL),
(4043, '07160732', 28, 84, 'a:3:{i:333;i:0;i:336;i:1;i:335;i:0;}', NULL),
(4044, '07160732', 28, 85, 'a:3:{i:337;i:0;i:340;i:1;i:339;i:0;}', NULL),
(4045, '07160732', 28, 86, 'a:2:{i:344;i:1;i:343;i:0;}', NULL),
(4046, '07160732', 28, 87, 'a:2:{i:347;i:1;i:346;i:0;}', NULL),
(4047, '07160732', 28, 88, 'a:2:{i:350;i:1;i:349;i:0;}', NULL),
(4048, '07160732', 28, 89, 'a:2:{i:355;i:1;i:354;i:0;}', NULL),
(4049, '07160732', 28, 90, 'a:2:{i:360;i:1;i:359;i:0;}', NULL),
(4050, '07160732', 28, 91, 'a:2:{i:361;i:1;i:362;i:0;}', NULL),
(4051, '07160732', 28, 92, 'a:2:{i:367;i:1;i:366;i:0;}', NULL),
(4052, '07160732', 28, 93, 'a:2:{i:372;i:1;i:371;i:0;}', NULL),
(4053, '07160732', 28, 94, 'a:2:{i:374;i:1;i:375;i:0;}', NULL),
(4054, '07160732', 28, 95, 'a:2:{i:377;i:0;i:378;i:1;}', NULL),
(4055, '07160732', 28, 96, 'a:3:{i:381;i:0;i:384;i:1;i:383;i:0;}', NULL),
(4056, '07160732', 28, 97, 'a:2:{i:386;i:0;i:387;i:1;}', NULL),
(4057, '07160732', 28, 98, 'a:3:{i:389;i:0;i:392;i:1;i:391;i:0;}', NULL),
(4058, '07160732', 28, 99, 'a:1:{i:393;i:1;}', NULL),
(4059, '07160732', 28, 100, 'a:2:{i:398;i:1;i:397;i:0;}', NULL),
(4060, '07160732', 28, 101, 'a:2:{i:402;i:1;i:401;i:0;}', NULL),
(4061, '07160732', 28, 102, 'a:2:{i:407;i:1;i:406;i:0;}', NULL),
(4062, '07160732', 28, 103, 'a:2:{i:410;i:0;i:411;i:1;}', NULL),
(4063, '07160732', 28, 104, 'a:1:{i:414;i:1;}', NULL),
(4064, '07160714', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(4065, '07160714', 28, 67, '', NULL),
(4066, '07160714', 28, 68, '', NULL),
(4067, '07160714', 28, 69, '', NULL),
(4068, '07160714', 28, 70, '', NULL),
(4069, '07160714', 28, 71, '', NULL),
(4070, '07160714', 28, 72, '', NULL),
(4071, '07160714', 28, 73, '', NULL),
(4072, '07160714', 28, 74, '', NULL),
(4073, '07160714', 28, 75, '', NULL),
(4074, '07160714', 28, 76, '', NULL),
(4075, '07160714', 28, 77, '', NULL),
(4076, '07160714', 28, 78, '', NULL),
(4077, '07160714', 28, 79, '', NULL),
(4078, '07160714', 28, 80, '', NULL),
(4079, '07160714', 28, 81, '', NULL),
(4080, '07160714', 28, 82, '', NULL),
(4081, '07160714', 28, 84, '', NULL),
(4082, '07160714', 28, 85, '', NULL),
(4083, '07160714', 28, 86, '', NULL),
(4084, '07160714', 28, 87, '', NULL),
(4085, '07160714', 28, 88, '', NULL),
(4086, '07160714', 28, 89, '', NULL),
(4087, '07160714', 28, 90, '', NULL),
(4088, '07160714', 28, 91, '', NULL),
(4089, '07160714', 28, 92, '', NULL),
(4090, '07160714', 28, 93, '', NULL),
(4091, '07160714', 28, 94, '', NULL),
(4092, '07160714', 28, 95, '', NULL),
(4093, '07160714', 28, 96, '', NULL),
(4094, '07160714', 28, 97, '', NULL),
(4095, '07160714', 28, 98, '', NULL),
(4096, '07160714', 28, 99, '', NULL),
(4097, '07160714', 28, 100, '', NULL),
(4098, '07160714', 28, 101, '', NULL),
(4099, '07160714', 28, 102, '', NULL),
(4100, '07160714', 28, 103, '', NULL),
(4101, '07160714', 28, 104, '', NULL),
(4102, '07160741', 28, 66, 'a:1:{i:264;i:1;}', NULL),
(4103, '07160741', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(4104, '07160741', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(4105, '07160741', 28, 69, 'a:1:{i:276;i:1;}', NULL),
(4106, '07160741', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(4107, '07160741', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(4108, '07160741', 28, 72, 'a:2:{i:287;i:0;i:285;i:1;}', NULL),
(4109, '07160741', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(4110, '07160741', 28, 74, 'a:1:{i:295;i:1;}', NULL),
(4111, '07160741', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(4112, '07160741', 28, 76, 'a:2:{i:301;i:0;i:302;i:1;}', NULL),
(4113, '07160741', 28, 77, 'a:1:{i:308;i:1;}', NULL),
(4114, '07160741', 28, 78, 'a:1:{i:312;i:1;}', NULL),
(4115, '07160741', 28, 79, 'a:1:{i:313;i:1;}', NULL),
(4116, '07160741', 28, 80, 'a:1:{i:320;i:1;}', NULL),
(4117, '07160741', 28, 81, 'a:1:{i:321;i:1;}', NULL),
(4118, '07160741', 28, 82, 'a:1:{i:326;i:1;}', NULL),
(4119, '07160741', 28, 84, 'a:1:{i:336;i:1;}', NULL),
(4120, '07160741', 28, 85, 'a:1:{i:340;i:1;}', NULL),
(4121, '07160741', 28, 86, 'a:1:{i:342;i:1;}', NULL),
(4122, '07160741', 28, 87, 'a:1:{i:347;i:1;}', NULL),
(4123, '07160741', 28, 88, 'a:1:{i:350;i:1;}', NULL),
(4124, '07160741', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(4125, '07160741', 28, 90, 'a:1:{i:357;i:1;}', NULL),
(4126, '07160741', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(4127, '07160741', 28, 92, 'a:1:{i:366;i:1;}', NULL),
(4128, '07160741', 28, 93, 'a:2:{i:372;i:0;i:370;i:1;}', NULL),
(4129, '07160741', 28, 94, 'a:1:{i:373;i:1;}', NULL),
(4130, '07160741', 28, 95, 'a:1:{i:377;i:1;}', NULL),
(4131, '07160741', 28, 96, 'a:1:{i:381;i:1;}', NULL),
(4132, '07160741', 28, 97, 'a:2:{i:385;i:0;i:387;i:1;}', NULL),
(4133, '07160741', 28, 98, 'a:3:{i:391;i:1;i:392;i:0;i:390;i:0;}', NULL),
(4134, '07160741', 28, 99, 'a:2:{i:393;i:0;i:394;i:1;}', NULL),
(4135, '07160741', 28, 100, 'a:1:{i:398;i:1;}', NULL),
(4136, '07160741', 28, 101, '', NULL),
(4137, '07160741', 28, 102, 'a:1:{i:406;i:1;}', NULL),
(4138, '07160741', 28, 103, 'a:1:{i:411;i:1;}', NULL),
(4139, '07160741', 28, 104, 'a:1:{i:414;i:1;}', NULL),
(4140, '07160709', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(4141, '07160709', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(4142, '07160709', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(4143, '07160709', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(4144, '07160709', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(4145, '07160709', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(4146, '07160709', 28, 72, 'a:1:{i:288;i:1;}', NULL),
(4147, '07160709', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(4148, '07160709', 28, 74, 'a:1:{i:296;i:1;}', NULL),
(4149, '07160709', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(4150, '07160709', 28, 76, 'a:1:{i:302;i:1;}', NULL),
(4151, '07160709', 28, 77, 'a:2:{i:306;i:0;i:308;i:1;}', NULL),
(4152, '07160709', 28, 78, 'a:2:{i:312;i:1;i:311;i:0;}', NULL),
(4153, '07160709', 28, 79, 'a:1:{i:313;i:1;}', NULL),
(4154, '07160709', 28, 80, 'a:1:{i:318;i:1;}', NULL),
(4155, '07160709', 28, 81, 'a:2:{i:321;i:0;i:322;i:1;}', NULL),
(4156, '07160709', 28, 82, 'a:1:{i:326;i:1;}', NULL),
(4157, '07160709', 28, 84, 'a:1:{i:333;i:1;}', NULL),
(4158, '07160709', 28, 85, 'a:1:{i:337;i:1;}', NULL),
(4159, '07160709', 28, 86, 'a:1:{i:344;i:1;}', NULL),
(4160, '07160709', 28, 87, 'a:1:{i:347;i:1;}', NULL),
(4161, '07160709', 28, 88, 'a:1:{i:350;i:1;}', NULL),
(4162, '07160709', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(4163, '07160709', 28, 90, 'a:3:{i:359;i:0;i:357;i:0;i:360;i:1;}', NULL),
(4164, '07160709', 28, 91, '', NULL),
(4165, '07160709', 28, 92, '', NULL),
(4166, '07160709', 28, 93, '', NULL),
(4167, '07160709', 28, 94, '', NULL),
(4168, '07160709', 28, 95, '', NULL),
(4169, '07160709', 28, 96, '', NULL),
(4170, '07160709', 28, 97, '', NULL),
(4171, '07160709', 28, 98, '', NULL),
(4172, '07160709', 28, 99, '', NULL),
(4173, '07160709', 28, 100, '', NULL),
(4174, '07160709', 28, 101, '', NULL),
(4175, '07160709', 28, 102, '', NULL),
(4176, '07160709', 28, 103, '', NULL),
(4177, '07160709', 28, 104, '', NULL),
(4178, '07160739', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(4179, '07160739', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(4180, '07160739', 28, 68, 'a:1:{i:271;i:1;}', NULL),
(4181, '07160739', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(4182, '07160739', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(4183, '07160739', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(4184, '07160739', 28, 72, 'a:1:{i:288;i:1;}', NULL),
(4185, '07160739', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(4186, '07160739', 28, 74, 'a:1:{i:295;i:1;}', NULL),
(4187, '07160739', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(4188, '07160739', 28, 76, 'a:1:{i:302;i:1;}', NULL),
(4189, '07160739', 28, 77, 'a:1:{i:308;i:1;}', NULL),
(4190, '07160739', 28, 78, 'a:1:{i:312;i:1;}', NULL),
(4191, '07160739', 28, 79, 'a:1:{i:316;i:1;}', NULL),
(4192, '07160739', 28, 80, 'a:2:{i:320;i:0;i:319;i:1;}', NULL),
(4193, '07160739', 28, 81, 'a:1:{i:322;i:1;}', NULL),
(4194, '07160739', 28, 82, 'a:1:{i:326;i:1;}', NULL),
(4195, '07160739', 28, 84, 'a:1:{i:334;i:1;}', NULL),
(4196, '07160739', 28, 85, 'a:1:{i:338;i:1;}', NULL),
(4197, '07160739', 28, 86, 'a:1:{i:342;i:1;}', NULL),
(4198, '07160739', 28, 87, 'a:1:{i:347;i:1;}', NULL),
(4199, '07160739', 28, 88, 'a:1:{i:350;i:1;}', NULL),
(4200, '07160739', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(4201, '07160739', 28, 90, 'a:1:{i:360;i:1;}', NULL),
(4202, '07160739', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(4203, '07160739', 28, 92, 'a:1:{i:367;i:1;}', NULL),
(4204, '07160739', 28, 93, 'a:2:{i:369;i:1;i:370;i:0;}', NULL),
(4205, '07160739', 28, 94, 'a:1:{i:374;i:1;}', NULL),
(4206, '07160739', 28, 95, 'a:1:{i:378;i:1;}', NULL),
(4207, '07160739', 28, 96, 'a:1:{i:384;i:1;}', NULL),
(4208, '07160739', 28, 97, 'a:1:{i:387;i:1;}', NULL),
(4209, '07160739', 28, 98, 'a:1:{i:392;i:1;}', NULL),
(4210, '07160739', 28, 99, 'a:1:{i:393;i:1;}', NULL),
(4211, '07160739', 28, 100, 'a:2:{i:399;i:0;i:398;i:1;}', NULL),
(4212, '07160739', 28, 101, 'a:1:{i:402;i:1;}', NULL),
(4213, '07160739', 28, 102, 'a:2:{i:407;i:0;i:406;i:1;}', NULL),
(4214, '07160739', 28, 103, 'a:1:{i:410;i:1;}', NULL),
(4215, '07160739', 28, 104, 'a:1:{i:413;i:1;}', NULL),
(4216, '07160720', 28, 66, 'a:4:{i:263;i:0;i:262;i:1;i:261;i:0;i:264;i:0;}', NULL),
(4217, '07160720', 28, 67, 'a:2:{i:267;i:0;i:268;i:1;}', NULL),
(4218, '07160720', 28, 68, 'a:2:{i:270;i:0;i:269;i:1;}', NULL),
(4219, '07160720', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(4220, '07160720', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(4221, '07160720', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(4222, '07160720', 28, 72, 'a:1:{i:288;i:1;}', NULL),
(4223, '07160720', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(4224, '07160720', 28, 74, 'a:1:{i:295;i:1;}', NULL),
(4225, '07160720', 28, 75, 'a:2:{i:300;i:0;i:298;i:1;}', NULL),
(4226, '07160720', 28, 76, 'a:1:{i:302;i:1;}', NULL),
(4227, '07160720', 28, 77, 'a:1:{i:308;i:1;}', NULL),
(4228, '07160720', 28, 78, 'a:2:{i:309;i:0;i:312;i:1;}', NULL),
(4229, '07160720', 28, 79, 'a:1:{i:316;i:1;}', NULL),
(4230, '07160720', 28, 80, 'a:2:{i:319;i:1;i:317;i:0;}', NULL),
(4231, '07160720', 28, 81, 'a:3:{i:323;i:0;i:324;i:0;i:322;i:1;}', NULL),
(4232, '07160720', 28, 82, 'a:2:{i:325;i:0;i:326;i:1;}', NULL),
(4233, '07160720', 28, 84, 'a:2:{i:336;i:0;i:334;i:1;}', NULL),
(4234, '07160720', 28, 85, 'a:1:{i:338;i:1;}', NULL),
(4235, '07160720', 28, 86, 'a:2:{i:344;i:0;i:343;i:1;}', NULL),
(4236, '07160720', 28, 87, 'a:1:{i:347;i:1;}', NULL),
(4237, '07160720', 28, 88, 'a:1:{i:350;i:1;}', NULL),
(4238, '07160720', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(4239, '07160720', 28, 90, 'a:1:{i:360;i:1;}', NULL),
(4240, '07160720', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(4241, '07160720', 28, 92, 'a:2:{i:366;i:0;i:367;i:1;}', NULL),
(4242, '07160720', 28, 93, 'a:1:{i:372;i:1;}', NULL),
(4243, '07160720', 28, 94, 'a:1:{i:374;i:1;}', NULL),
(4244, '07160720', 28, 95, 'a:1:{i:378;i:1;}', NULL),
(4245, '07160720', 28, 96, 'a:2:{i:381;i:0;i:384;i:1;}', NULL),
(4246, '07160720', 28, 97, 'a:2:{i:385;i:0;i:387;i:1;}', NULL),
(4247, '07160720', 28, 98, 'a:3:{i:392;i:1;i:391;i:0;i:390;i:0;}', NULL),
(4248, '07160720', 28, 99, 'a:1:{i:393;i:1;}', NULL),
(4249, '07160720', 28, 100, 'a:2:{i:397;i:0;i:398;i:1;}', NULL),
(4250, '07160720', 28, 101, 'a:1:{i:402;i:1;}', NULL),
(4251, '07160720', 28, 102, 'a:2:{i:407;i:0;i:406;i:1;}', NULL),
(4252, '07160720', 28, 103, 'a:2:{i:411;i:0;i:410;i:1;}', NULL),
(4253, '07160720', 28, 104, 'a:2:{i:413;i:0;i:414;i:1;}', NULL),
(4254, '07160720', 29, 100, 'a:1:{i:398;i:1;}', NULL),
(4255, '07160720', 29, 101, 'a:1:{i:402;i:1;}', NULL),
(4256, '07160720', 29, 102, 'a:1:{i:406;i:1;}', NULL),
(4257, '07160720', 29, 103, 'a:1:{i:410;i:1;}', NULL),
(4258, '07160720', 29, 104, 'a:1:{i:415;i:1;}', NULL),
(4259, '07160720', 29, 105, '', NULL),
(4260, '07160720', 29, 106, '', NULL),
(4261, '07160720', 29, 107, '', NULL),
(4262, '07160720', 29, 108, '', NULL),
(4263, '07160720', 29, 109, '', NULL),
(4264, '07160720', 29, 110, '', NULL),
(4265, '07160720', 29, 111, '', NULL),
(4266, '07160720', 29, 112, '', NULL),
(4267, '07160720', 29, 113, '', NULL),
(4268, '07160720', 29, 114, '', NULL),
(4269, '07160720', 29, 115, '', NULL),
(4270, '07160720', 29, 116, '', NULL),
(4271, '07160720', 29, 117, '', NULL),
(4272, '07160720', 29, 118, '', NULL),
(4273, '07160720', 29, 119, '', NULL),
(4274, '07160720', 29, 120, '', NULL),
(4275, '07160720', 29, 123, '', NULL),
(4276, '07160720', 29, 124, '', NULL),
(4277, '07160720', 29, 125, '', NULL),
(4278, '07160720', 29, 126, '', NULL),
(4279, '07160720', 29, 127, '', NULL),
(4280, '07160720', 29, 128, '', NULL),
(4281, '07160720', 29, 129, '', NULL),
(4282, '07160720', 29, 130, '', NULL),
(4283, '07160720', 29, 131, '', NULL),
(4284, '07160720', 29, 132, '', NULL),
(4285, '07160720', 29, 133, '', NULL),
(4286, '07160720', 29, 134, '', NULL),
(4287, '07160720', 29, 135, '', NULL),
(4288, '07160720', 29, 136, '', NULL),
(4289, '07160729', 28, 66, 'a:2:{i:263;i:1;i:261;i:0;}', NULL),
(4290, '07160729', 28, 67, 'a:2:{i:268;i:1;i:265;i:0;}', NULL),
(4291, '07160729', 28, 68, 'a:2:{i:269;i:1;i:270;i:0;}', NULL),
(4292, '07160729', 28, 69, 'a:3:{i:273;i:1;i:275;i:0;i:274;i:0;}', NULL),
(4293, '07160729', 28, 70, 'a:2:{i:279;i:1;i:278;i:0;}', NULL),
(4294, '07160729', 28, 71, 'a:3:{i:281;i:1;i:283;i:0;i:282;i:0;}', NULL),
(4295, '07160729', 28, 72, 'a:3:{i:288;i:1;i:286;i:0;i:287;i:0;}', NULL),
(4296, '07160729', 28, 73, 'a:2:{i:291;i:1;i:290;i:0;}', NULL),
(4297, '07160729', 28, 74, 'a:2:{i:295;i:1;i:293;i:0;}', NULL),
(4298, '07160729', 28, 75, 'a:3:{i:300;i:0;i:298;i:1;i:299;i:0;}', NULL),
(4299, '07160729', 28, 76, 'a:2:{i:302;i:1;i:303;i:0;}', NULL),
(4300, '07160729', 28, 77, 'a:3:{i:308;i:1;i:305;i:0;i:307;i:0;}', NULL),
(4301, '07160729', 28, 78, 'a:3:{i:312;i:1;i:310;i:0;i:311;i:0;}', NULL),
(4302, '07160729', 28, 79, 'a:3:{i:316;i:1;i:314;i:0;i:315;i:0;}', NULL),
(4303, '07160729', 28, 80, 'a:2:{i:318;i:0;i:319;i:1;}', NULL),
(4304, '07160729', 28, 81, 'a:4:{i:322;i:1;i:324;i:0;i:323;i:0;i:321;i:0;}', NULL),
(4305, '07160729', 28, 82, 'a:3:{i:328;i:0;i:327;i:0;i:326;i:1;}', NULL),
(4306, '07160729', 28, 84, 'a:3:{i:335;i:0;i:334;i:1;i:333;i:0;}', NULL),
(4307, '07160729', 28, 85, 'a:2:{i:338;i:1;i:337;i:0;}', NULL),
(4308, '07160729', 28, 86, 'a:3:{i:342;i:0;i:343;i:1;i:344;i:0;}', NULL),
(4309, '07160729', 28, 87, 'a:3:{i:347;i:1;i:345;i:0;i:348;i:0;}', NULL),
(4310, '07160729', 28, 88, 'a:3:{i:350;i:1;i:351;i:0;i:349;i:0;}', NULL),
(4311, '07160729', 28, 89, 'a:3:{i:355;i:1;i:354;i:0;i:356;i:0;}', NULL),
(4312, '07160729', 28, 90, 'a:2:{i:359;i:0;i:360;i:1;}', NULL),
(4313, '07160729', 28, 91, 'a:2:{i:361;i:1;i:362;i:0;}', NULL),
(4314, '07160729', 28, 92, 'a:3:{i:366;i:0;i:367;i:1;i:368;i:0;}', NULL),
(4315, '07160729', 28, 93, 'a:3:{i:372;i:1;i:370;i:0;i:371;i:0;}', NULL),
(4316, '07160729', 28, 94, 'a:2:{i:374;i:1;i:373;i:0;}', NULL),
(4317, '07160729', 28, 95, 'a:3:{i:378;i:1;i:377;i:0;i:379;i:0;}', NULL),
(4318, '07160729', 28, 96, 'a:2:{i:383;i:0;i:384;i:1;}', NULL),
(4319, '07160729', 28, 97, 'a:3:{i:385;i:0;i:387;i:1;i:388;i:0;}', NULL),
(4320, '07160729', 28, 98, 'a:2:{i:392;i:1;i:391;i:0;}', NULL),
(4321, '07160729', 28, 99, 'a:3:{i:393;i:1;i:394;i:0;i:395;i:0;}', NULL),
(4322, '07160729', 28, 100, 'a:3:{i:400;i:0;i:398;i:1;i:399;i:0;}', NULL),
(4323, '07160729', 28, 101, 'a:2:{i:401;i:0;i:402;i:1;}', NULL),
(4324, '07160729', 28, 102, 'a:3:{i:407;i:0;i:406;i:1;i:405;i:0;}', NULL),
(4325, '07160729', 28, 103, 'a:3:{i:411;i:0;i:410;i:1;i:412;i:0;}', NULL),
(4326, '07160729', 28, 104, 'a:2:{i:414;i:1;i:413;i:0;}', NULL),
(4327, '07160739', 29, 100, 'a:1:{i:398;i:1;}', NULL),
(4328, '07160739', 29, 101, 'a:1:{i:402;i:1;}', NULL),
(4329, '07160739', 29, 102, 'a:1:{i:406;i:1;}', NULL),
(4330, '07160739', 29, 103, 'a:1:{i:410;i:1;}', NULL),
(4331, '07160739', 29, 104, 'a:1:{i:414;i:1;}', NULL),
(4332, '07160739', 29, 105, 'a:1:{i:417;i:1;}', NULL),
(4333, '07160739', 29, 106, 'a:2:{i:423;i:0;i:424;i:1;}', NULL),
(4334, '07160739', 29, 107, 'a:1:{i:427;i:1;}', NULL),
(4335, '07160739', 29, 108, 'a:1:{i:432;i:1;}', NULL),
(4336, '07160739', 29, 109, 'a:2:{i:433;i:0;i:436;i:1;}', NULL),
(4337, '07160739', 29, 110, 'a:1:{i:438;i:1;}', NULL),
(4338, '07160739', 29, 111, 'a:1:{i:441;i:1;}', NULL),
(4339, '07160739', 29, 112, 'a:1:{i:445;i:1;}', NULL),
(4340, '07160739', 29, 113, 'a:2:{i:451;i:0;i:449;i:1;}', NULL),
(4341, '07160739', 29, 114, 'a:1:{i:454;i:1;}', NULL),
(4342, '07160739', 29, 115, 'a:2:{i:458;i:0;i:459;i:1;}', NULL),
(4343, '07160739', 29, 116, 'a:2:{i:462;i:0;i:464;i:1;}', NULL),
(4344, '07160739', 29, 117, 'a:2:{i:468;i:0;i:465;i:1;}', NULL),
(4345, '07160739', 29, 118, 'a:2:{i:470;i:0;i:472;i:1;}', NULL),
(4346, '07160739', 29, 119, 'a:1:{i:474;i:1;}', NULL),
(4347, '07160739', 29, 120, 'a:2:{i:480;i:0;i:479;i:1;}', NULL),
(4348, '07160739', 29, 123, 'a:2:{i:487;i:0;i:489;i:1;}', NULL),
(4349, '07160739', 29, 124, 'a:2:{i:493;i:0;i:492;i:1;}', NULL),
(4350, '07160739', 29, 125, 'a:2:{i:495;i:0;i:497;i:1;}', NULL),
(4351, '07160739', 29, 126, 'a:1:{i:501;i:1;}', NULL),
(4352, '07160739', 29, 127, 'a:1:{i:502;i:1;}', NULL),
(4353, '07160739', 29, 128, 'a:2:{i:506;i:0;i:508;i:1;}', NULL),
(4354, '07160739', 29, 129, 'a:2:{i:512;i:0;i:513;i:1;}', NULL),
(4355, '07160739', 29, 130, 'a:1:{i:515;i:1;}', NULL),
(4356, '07160739', 29, 131, 'a:3:{i:521;i:0;i:518;i:0;i:519;i:1;}', NULL),
(4357, '07160739', 29, 132, 'a:1:{i:525;i:1;}', NULL),
(4358, '07160739', 29, 133, 'a:1:{i:526;i:1;}', NULL),
(4359, '07160739', 29, 134, 'a:2:{i:533;i:0;i:531;i:1;}', NULL),
(4360, '07160739', 29, 135, 'a:1:{i:534;i:1;}', NULL),
(4361, '07160739', 29, 136, 'a:1:{i:539;i:1;}', NULL),
(4362, '07160728', 29, 100, 'a:1:{i:398;i:1;}', NULL),
(4363, '07160728', 29, 101, 'a:1:{i:402;i:1;}', NULL),
(4364, '07160728', 29, 102, 'a:1:{i:406;i:1;}', NULL),
(4365, '07160728', 29, 103, 'a:1:{i:410;i:1;}', NULL),
(4366, '07160728', 29, 104, 'a:1:{i:414;i:1;}', NULL),
(4367, '07160728', 29, 105, 'a:1:{i:418;i:1;}', NULL),
(4368, '07160728', 29, 106, 'a:1:{i:422;i:1;}', NULL),
(4369, '07160728', 29, 107, 'a:1:{i:427;i:1;}', NULL),
(4370, '07160728', 29, 108, 'a:1:{i:432;i:1;}', NULL),
(4371, '07160728', 29, 109, 'a:1:{i:433;i:1;}', NULL),
(4372, '07160728', 29, 110, 'a:1:{i:438;i:1;}', NULL),
(4373, '07160728', 29, 111, 'a:1:{i:441;i:1;}', NULL),
(4374, '07160728', 29, 112, 'a:1:{i:447;i:1;}', NULL),
(4375, '07160728', 29, 113, 'a:1:{i:449;i:1;}', NULL),
(4376, '07160728', 29, 114, 'a:1:{i:454;i:1;}', NULL),
(4377, '07160728', 29, 115, 'a:1:{i:459;i:1;}', NULL),
(4378, '07160728', 29, 116, 'a:1:{i:462;i:1;}', NULL),
(4379, '07160728', 29, 117, 'a:2:{i:468;i:0;i:467;i:1;}', NULL),
(4380, '07160728', 29, 118, 'a:1:{i:472;i:1;}', NULL),
(4381, '07160728', 29, 119, 'a:1:{i:473;i:1;}', NULL),
(4382, '07160728', 29, 120, 'a:1:{i:477;i:1;}', NULL),
(4383, '07160728', 29, 123, 'a:2:{i:488;i:0;i:489;i:1;}', NULL),
(4384, '07160728', 29, 124, 'a:1:{i:492;i:1;}', NULL),
(4385, '07160728', 29, 125, 'a:1:{i:495;i:1;}', NULL),
(4386, '07160728', 29, 126, '', NULL),
(4387, '07160728', 29, 127, '', NULL),
(4388, '07160728', 29, 128, '', NULL),
(4389, '07160728', 29, 129, '', NULL),
(4390, '07160728', 29, 130, '', NULL),
(4391, '07160728', 29, 131, '', NULL),
(4392, '07160728', 29, 132, '', NULL),
(4393, '07160728', 29, 133, '', NULL),
(4394, '07160728', 29, 134, 'a:1:{i:531;i:1;}', NULL),
(4395, '07160728', 29, 135, '', NULL),
(4396, '07160728', 29, 136, 'a:1:{i:540;i:1;}', NULL),
(4397, '07160721', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(4398, '07160721', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(4399, '07160721', 28, 68, 'a:1:{i:269;i:1;}', NULL),
(4400, '07160721', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(4401, '07160721', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(4402, '07160721', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(4403, '07160721', 28, 72, 'a:1:{i:288;i:1;}', NULL),
(4404, '07160721', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(4405, '07160721', 28, 74, 'a:1:{i:295;i:1;}', NULL),
(4406, '07160721', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(4407, '07160721', 28, 76, 'a:2:{i:301;i:0;i:302;i:1;}', NULL),
(4408, '07160721', 28, 77, 'a:2:{i:307;i:0;i:308;i:1;}', NULL),
(4409, '07160721', 28, 78, 'a:2:{i:309;i:0;i:312;i:1;}', NULL),
(4410, '07160721', 28, 79, 'a:2:{i:313;i:0;i:316;i:1;}', NULL),
(4411, '07160721', 28, 80, 'a:1:{i:317;i:1;}', NULL),
(4412, '07160721', 28, 81, 'a:2:{i:323;i:0;i:322;i:1;}', NULL),
(4413, '07160721', 28, 82, 'a:2:{i:327;i:0;i:326;i:1;}', NULL),
(4414, '07160721', 28, 84, 'a:1:{i:334;i:1;}', NULL),
(4415, '07160721', 28, 85, 'a:2:{i:337;i:0;i:338;i:1;}', NULL),
(4416, '07160721', 28, 86, 'a:1:{i:344;i:1;}', NULL),
(4417, '07160721', 28, 87, 'a:2:{i:346;i:0;i:347;i:1;}', NULL),
(4418, '07160721', 28, 88, 'a:1:{i:350;i:1;}', NULL),
(4419, '07160721', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(4420, '07160721', 28, 90, 'a:2:{i:359;i:0;i:358;i:1;}', NULL),
(4421, '07160721', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(4422, '07160721', 28, 92, 'a:2:{i:365;i:0;i:366;i:1;}', NULL),
(4423, '07160721', 28, 93, 'a:1:{i:372;i:1;}', NULL),
(4424, '07160721', 28, 94, 'a:2:{i:374;i:1;i:373;i:0;}', NULL),
(4425, '07160721', 28, 95, 'a:2:{i:377;i:0;i:378;i:1;}', NULL),
(4426, '07160721', 28, 96, 'a:2:{i:381;i:0;i:383;i:1;}', NULL),
(4427, '07160721', 28, 97, 'a:2:{i:386;i:0;i:387;i:1;}', NULL),
(4428, '07160721', 28, 98, 'a:2:{i:389;i:0;i:392;i:1;}', NULL),
(4429, '07160721', 28, 99, 'a:1:{i:394;i:1;}', NULL),
(4430, '07160721', 28, 100, 'a:1:{i:398;i:1;}', NULL),
(4431, '07160721', 28, 101, 'a:2:{i:404;i:0;i:402;i:1;}', NULL),
(4432, '07160721', 28, 102, 'a:2:{i:407;i:0;i:406;i:1;}', NULL),
(4433, '07160721', 28, 103, 'a:2:{i:411;i:0;i:410;i:1;}', NULL),
(4434, '07160721', 28, 104, 'a:2:{i:413;i:0;i:414;i:1;}', NULL),
(4435, '07160801', 29, 100, 'a:2:{i:397;i:1;i:398;i:0;}', NULL),
(4436, '07160801', 29, 101, 'a:2:{i:402;i:1;i:401;i:0;}', NULL),
(4437, '07160801', 29, 102, 'a:2:{i:406;i:1;i:405;i:0;}', NULL),
(4438, '07160801', 29, 103, 'a:2:{i:410;i:1;i:409;i:0;}', NULL),
(4439, '07160801', 29, 104, 'a:3:{i:415;i:0;i:414;i:1;i:413;i:0;}', NULL),
(4440, '07160801', 29, 105, 'a:2:{i:417;i:1;i:418;i:0;}', NULL),
(4441, '07160801', 29, 106, 'a:2:{i:421;i:1;i:422;i:0;}', NULL),
(4442, '07160801', 29, 107, 'a:2:{i:427;i:1;i:426;i:0;}', NULL),
(4443, '07160801', 29, 108, 'a:2:{i:432;i:1;i:431;i:0;}', NULL),
(4444, '07160801', 29, 109, 'a:2:{i:433;i:1;i:434;i:0;}', NULL),
(4445, '07160801', 29, 110, 'a:2:{i:438;i:1;i:437;i:0;}', NULL),
(4446, '07160801', 29, 111, 'a:1:{i:441;i:1;}', NULL),
(4447, '07160801', 29, 112, 'a:2:{i:445;i:1;i:446;i:0;}', NULL),
(4448, '07160801', 29, 113, 'a:2:{i:449;i:1;i:450;i:0;}', NULL),
(4449, '07160801', 29, 114, 'a:2:{i:454;i:1;i:453;i:0;}', NULL),
(4450, '07160801', 29, 115, 'a:2:{i:459;i:1;i:458;i:0;}', NULL),
(4451, '07160801', 29, 116, 'a:2:{i:464;i:1;i:463;i:0;}', NULL),
(4452, '07160801', 29, 117, 'a:2:{i:467;i:1;i:466;i:0;}', NULL),
(4453, '07160801', 29, 118, 'a:2:{i:470;i:1;i:469;i:0;}', NULL),
(4454, '07160801', 29, 119, 'a:2:{i:473;i:1;i:474;i:0;}', NULL),
(4455, '07160801', 29, 120, 'a:2:{i:479;i:1;i:478;i:0;}', NULL),
(4456, '07160801', 29, 123, 'a:2:{i:489;i:1;i:488;i:0;}', NULL),
(4457, '07160801', 29, 124, 'a:2:{i:492;i:1;i:491;i:0;}', NULL),
(4458, '07160801', 29, 125, 'a:2:{i:496;i:1;i:497;i:0;}', NULL),
(4459, '07160801', 29, 126, 'a:2:{i:501;i:1;i:500;i:0;}', NULL),
(4460, '07160801', 29, 127, 'a:2:{i:503;i:1;i:504;i:0;}', NULL),
(4461, '07160801', 29, 128, 'a:2:{i:507;i:1;i:508;i:0;}', NULL),
(4462, '07160801', 29, 129, 'a:2:{i:511;i:0;i:510;i:1;}', NULL),
(4463, '07160801', 29, 130, 'a:2:{i:515;i:1;i:514;i:0;}', NULL),
(4464, '07160801', 29, 131, 'a:1:{i:521;i:1;}', NULL),
(4465, '07160801', 29, 132, 'a:2:{i:525;i:1;i:524;i:0;}', NULL),
(4466, '07160801', 29, 133, 'a:2:{i:529;i:1;i:528;i:0;}', NULL),
(4467, '07160801', 29, 134, 'a:2:{i:531;i:1;i:532;i:0;}', NULL),
(4468, '07160801', 29, 135, 'a:2:{i:536;i:1;i:535;i:0;}', NULL),
(4469, '07160801', 29, 136, 'a:2:{i:541;i:1;i:540;i:0;}', NULL),
(4470, '07160734', 28, 66, 'a:2:{i:263;i:1;i:262;i:0;}', NULL),
(4471, '07160734', 28, 67, 'a:2:{i:268;i:1;i:267;i:0;}', NULL),
(4472, '07160734', 28, 68, 'a:3:{i:272;i:0;i:269;i:1;i:270;i:0;}', NULL),
(4473, '07160734', 28, 69, 'a:2:{i:273;i:1;i:274;i:0;}', NULL),
(4474, '07160734', 28, 70, 'a:2:{i:279;i:1;i:280;i:0;}', NULL),
(4475, '07160734', 28, 71, 'a:2:{i:281;i:1;i:282;i:0;}', NULL),
(4476, '07160734', 28, 72, 'a:3:{i:285;i:0;i:288;i:1;i:287;i:0;}', NULL),
(4477, '07160734', 28, 73, 'a:2:{i:291;i:1;i:292;i:0;}', NULL),
(4478, '07160734', 28, 74, 'a:4:{i:293;i:0;i:296;i:0;i:295;i:1;i:294;i:0;}', NULL),
(4479, '07160734', 28, 75, 'a:2:{i:298;i:1;i:299;i:0;}', NULL),
(4480, '07160734', 28, 76, 'a:2:{i:301;i:0;i:302;i:1;}', NULL),
(4481, '07160734', 28, 77, 'a:2:{i:307;i:0;i:308;i:1;}', NULL),
(4482, '07160734', 28, 78, 'a:2:{i:312;i:1;i:311;i:0;}', NULL),
(4483, '07160734', 28, 79, 'a:3:{i:313;i:0;i:316;i:1;i:315;i:0;}', NULL),
(4484, '07160734', 28, 80, 'a:2:{i:320;i:0;i:319;i:1;}', NULL),
(4485, '07160734', 28, 81, 'a:3:{i:324;i:0;i:323;i:0;i:322;i:1;}', NULL),
(4486, '07160734', 28, 82, 'a:3:{i:325;i:0;i:326;i:1;i:327;i:0;}', NULL),
(4487, '07160734', 28, 84, 'a:2:{i:334;i:1;i:335;i:0;}', NULL),
(4488, '07160734', 28, 85, 'a:2:{i:338;i:1;i:339;i:0;}', NULL),
(4489, '07160734', 28, 86, 'a:2:{i:344;i:0;i:343;i:1;}', NULL),
(4490, '07160734', 28, 87, 'a:3:{i:347;i:1;i:345;i:0;i:348;i:0;}', NULL),
(4491, '07160734', 28, 88, 'a:2:{i:350;i:1;i:351;i:0;}', NULL),
(4492, '07160734', 28, 89, 'a:2:{i:355;i:1;i:356;i:0;}', NULL),
(4493, '07160734', 28, 90, 'a:3:{i:357;i:0;i:360;i:1;i:359;i:0;}', NULL),
(4494, '07160734', 28, 91, 'a:2:{i:361;i:1;i:362;i:0;}', NULL),
(4495, '07160734', 28, 92, 'a:3:{i:366;i:0;i:367;i:1;i:368;i:0;}', NULL),
(4496, '07160734', 28, 93, 'a:3:{i:370;i:0;i:371;i:0;i:372;i:1;}', NULL),
(4497, '07160734', 28, 94, 'a:3:{i:374;i:1;i:373;i:0;i:375;i:0;}', NULL),
(4498, '07160734', 28, 95, 'a:3:{i:377;i:0;i:378;i:1;i:379;i:0;}', NULL),
(4499, '07160734', 28, 96, 'a:3:{i:381;i:0;i:384;i:1;i:383;i:0;}', NULL),
(4500, '07160734', 28, 97, 'a:3:{i:385;i:0;i:387;i:1;i:388;i:0;}', NULL),
(4501, '07160734', 28, 98, 'a:3:{i:389;i:0;i:390;i:0;i:392;i:1;}', NULL),
(4502, '07160734', 28, 99, 'a:2:{i:393;i:1;i:394;i:0;}', NULL),
(4503, '07160734', 28, 100, 'a:3:{i:397;i:0;i:398;i:1;i:399;i:0;}', NULL),
(4504, '07160734', 28, 101, 'a:2:{i:402;i:1;i:401;i:0;}', NULL),
(4505, '07160734', 28, 102, 'a:3:{i:407;i:0;i:405;i:0;i:406;i:1;}', NULL),
(4506, '07160734', 28, 103, 'a:3:{i:411;i:0;i:409;i:0;i:410;i:1;}', NULL),
(4507, '07160734', 28, 104, 'a:2:{i:414;i:1;i:415;i:0;}', NULL),
(4508, '07160723', 28, 66, 'a:2:{i:263;i:1;i:264;i:0;}', NULL),
(4509, '07160723', 28, 67, 'a:1:{i:268;i:1;}', NULL),
(4510, '07160723', 28, 68, 'a:2:{i:269;i:1;i:270;i:0;}', NULL),
(4511, '07160723', 28, 69, 'a:1:{i:273;i:1;}', NULL),
(4512, '07160723', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(4513, '07160723', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(4514, '07160723', 28, 72, 'a:2:{i:286;i:0;i:288;i:1;}', NULL),
(4515, '07160723', 28, 73, 'a:1:{i:290;i:1;}', NULL),
(4516, '07160723', 28, 74, 'a:1:{i:296;i:1;}', NULL),
(4517, '07160723', 28, 75, 'a:1:{i:300;i:1;}', NULL),
(4518, '07160723', 28, 76, 'a:1:{i:303;i:1;}', NULL),
(4519, '07160723', 28, 77, 'a:1:{i:308;i:1;}', NULL),
(4520, '07160723', 28, 78, 'a:1:{i:310;i:1;}', NULL),
(4521, '07160723', 28, 79, 'a:1:{i:314;i:1;}', NULL),
(4522, '07160723', 28, 80, 'a:1:{i:319;i:1;}', NULL),
(4523, '07160723', 28, 81, 'a:2:{i:323;i:1;i:324;i:0;}', NULL),
(4524, '07160723', 28, 82, 'a:1:{i:327;i:1;}', NULL),
(4525, '07160723', 28, 84, 'a:1:{i:336;i:1;}', NULL),
(4526, '07160723', 28, 85, 'a:1:{i:337;i:1;}', NULL),
(4527, '07160723', 28, 86, 'a:3:{i:342;i:1;i:343;i:0;i:344;i:0;}', NULL),
(4528, '07160723', 28, 87, 'a:1:{i:347;i:1;}', NULL),
(4529, '07160723', 28, 88, 'a:2:{i:351;i:0;i:349;i:1;}', NULL),
(4530, '07160723', 28, 89, 'a:1:{i:355;i:1;}', NULL),
(4531, '07160723', 28, 90, 'a:2:{i:358;i:0;i:360;i:1;}', NULL),
(4532, '07160723', 28, 91, 'a:1:{i:361;i:1;}', NULL),
(4533, '07160723', 28, 92, 'a:1:{i:366;i:1;}', NULL),
(4534, '07160723', 28, 93, 'a:1:{i:369;i:1;}', NULL),
(4535, '07160723', 28, 94, 'a:1:{i:374;i:1;}', NULL),
(4536, '07160723', 28, 95, 'a:1:{i:378;i:1;}', NULL),
(4537, '07160723', 28, 96, 'a:1:{i:384;i:1;}', NULL),
(4538, '07160723', 28, 97, 'a:1:{i:385;i:1;}', NULL),
(4539, '07160723', 28, 98, 'a:1:{i:392;i:1;}', NULL),
(4540, '07160723', 28, 99, 'a:1:{i:393;i:1;}', NULL),
(4541, '07160723', 28, 100, 'a:1:{i:400;i:1;}', NULL),
(4542, '07160723', 28, 101, 'a:1:{i:402;i:1;}', NULL),
(4543, '07160723', 28, 102, 'a:1:{i:407;i:1;}', NULL),
(4544, '07160723', 28, 103, 'a:1:{i:411;i:1;}', NULL),
(4545, '07160723', 28, 104, 'a:1:{i:415;i:1;}', NULL),
(4546, '07160739', 30, 130, 'a:1:{i:515;i:1;}', NULL),
(4547, '07160739', 30, 131, 'a:1:{i:519;i:1;}', NULL),
(4548, '07160739', 30, 132, 'a:1:{i:525;i:1;}', NULL),
(4549, '07160739', 30, 133, 'a:1:{i:526;i:1;}', NULL),
(4550, '07160739', 30, 134, 'a:1:{i:531;i:1;}', NULL),
(4551, '07160739', 30, 135, 'a:1:{i:534;i:1;}', NULL),
(4552, '07160739', 30, 136, 'a:1:{i:541;i:1;}', NULL),
(4553, '07160739', 30, 137, 'a:2:{i:542;i:0;i:543;i:1;}', NULL),
(4554, '07160739', 30, 138, 'a:1:{i:548;i:1;}', NULL),
(4555, '07160739', 30, 139, 'a:1:{i:553;i:1;}', NULL),
(4556, '07160739', 30, 140, 'a:3:{i:554;i:0;i:555;i:0;i:557;i:1;}', NULL),
(4557, '07160739', 30, 141, 'a:1:{i:558;i:1;}', NULL),
(4558, '07160739', 30, 142, 'a:1:{i:563;i:1;}', NULL),
(4559, '07160739', 30, 143, 'a:1:{i:566;i:1;}', NULL);
INSERT INTO `exercise_answer` (`id`, `studentid`, `paper_id`, `select_question_id`, `answer`, `memo`) VALUES
(4560, '07160739', 30, 144, 'a:1:{i:571;i:1;}', NULL),
(4561, '07160739', 30, 145, 'a:1:{i:575;i:1;}', NULL),
(4562, '07160739', 30, 146, 'a:1:{i:580;i:1;}', NULL),
(4563, '07160739', 30, 147, 'a:1:{i:582;i:1;}', NULL),
(4564, '07160739', 30, 148, 'a:1:{i:587;i:1;}', NULL),
(4565, '07160739', 30, 149, 'a:1:{i:590;i:1;}', NULL),
(4566, '07160739', 30, 150, 'a:1:{i:597;i:1;}', NULL),
(4567, '07160739', 30, 151, '', NULL),
(4568, '07160739', 30, 152, '', NULL),
(4569, '07160739', 30, 153, '', NULL),
(4570, '07160739', 30, 154, '', NULL),
(4571, '07160739', 30, 155, '', NULL),
(4572, '07160739', 30, 156, '', NULL),
(4573, '07160739', 30, 157, '', NULL),
(4574, '07160739', 30, 158, '', NULL),
(4575, '07160739', 30, 159, '', NULL),
(4576, '07160739', 30, 160, '', NULL),
(4577, '07160739', 30, 161, '', NULL),
(4578, '07160739', 30, 162, '', NULL),
(4579, '07160739', 30, 163, '', NULL),
(4580, '07160739', 30, 164, '', NULL),
(4581, '07160739', 30, 165, '', NULL),
(4582, '07160739', 30, 166, '', NULL),
(4583, '07160729', 29, 100, 'a:4:{i:398;i:1;i:400;i:0;i:397;i:0;i:399;i:0;}', NULL),
(4584, '07160729', 29, 101, 'a:2:{i:402;i:1;i:401;i:0;}', NULL),
(4585, '07160729', 29, 102, 'a:3:{i:406;i:1;i:407;i:0;i:405;i:0;}', NULL),
(4586, '07160729', 29, 103, 'a:2:{i:410;i:1;i:409;i:0;}', NULL),
(4587, '07160729', 29, 104, 'a:3:{i:414;i:1;i:415;i:0;i:413;i:0;}', NULL),
(4588, '07160729', 29, 105, 'a:3:{i:418;i:0;i:419;i:0;i:417;i:1;}', NULL),
(4589, '07160729', 29, 106, 'a:3:{i:423;i:1;i:422;i:0;i:421;i:0;}', NULL),
(4590, '07160729', 29, 107, 'a:4:{i:427;i:1;i:426;i:0;i:428;i:0;i:425;i:0;}', NULL),
(4591, '07160729', 29, 108, 'a:4:{i:432;i:1;i:430;i:0;i:429;i:0;i:431;i:0;}', NULL),
(4592, '07160729', 29, 109, 'a:4:{i:433;i:0;i:434;i:0;i:435;i:0;i:436;i:1;}', NULL),
(4593, '07160729', 29, 110, 'a:4:{i:438;i:1;i:437;i:0;i:439;i:0;i:440;i:0;}', NULL),
(4594, '07160729', 29, 111, 'a:3:{i:444;i:0;i:442;i:0;i:441;i:1;}', NULL),
(4595, '07160729', 29, 112, 'a:4:{i:445;i:1;i:448;i:0;i:446;i:0;i:447;i:0;}', NULL),
(4596, '07160729', 29, 113, 'a:2:{i:449;i:1;i:450;i:0;}', NULL),
(4597, '07160729', 29, 114, 'a:4:{i:454;i:1;i:455;i:0;i:456;i:0;i:453;i:0;}', NULL),
(4598, '07160729', 29, 115, 'a:3:{i:459;i:1;i:457;i:0;i:458;i:0;}', NULL),
(4599, '07160729', 29, 116, 'a:4:{i:463;i:0;i:461;i:0;i:464;i:1;i:462;i:0;}', NULL),
(4600, '07160729', 29, 117, 'a:3:{i:468;i:0;i:466;i:0;i:465;i:1;}', NULL),
(4601, '07160729', 29, 118, 'a:4:{i:472;i:1;i:469;i:0;i:471;i:0;i:470;i:0;}', NULL),
(4602, '07160729', 29, 119, 'a:3:{i:475;i:1;i:476;i:0;i:474;i:0;}', NULL),
(4603, '07160729', 29, 120, 'a:3:{i:477;i:0;i:478;i:0;i:479;i:1;}', NULL),
(4604, '07160729', 29, 123, 'a:4:{i:489;i:1;i:486;i:0;i:487;i:0;i:488;i:0;}', NULL),
(4605, '07160729', 29, 124, 'a:4:{i:493;i:0;i:492;i:1;i:490;i:0;i:491;i:0;}', NULL),
(4606, '07160729', 29, 125, 'a:3:{i:497;i:1;i:494;i:0;i:496;i:0;}', NULL),
(4607, '07160729', 29, 126, 'a:3:{i:499;i:0;i:500;i:0;i:501;i:1;}', NULL),
(4608, '07160729', 29, 127, 'a:2:{i:502;i:1;i:503;i:0;}', NULL),
(4609, '07160729', 29, 128, 'a:4:{i:506;i:0;i:507;i:0;i:508;i:1;i:509;i:0;}', NULL),
(4610, '07160729', 29, 129, 'a:3:{i:512;i:1;i:511;i:0;i:513;i:0;}', NULL),
(4611, '07160729', 29, 130, 'a:3:{i:515;i:1;i:514;i:0;i:516;i:0;}', NULL),
(4612, '07160729', 29, 131, 'a:3:{i:518;i:0;i:519;i:1;i:520;i:0;}', NULL),
(4613, '07160729', 29, 132, 'a:4:{i:525;i:1;i:523;i:0;i:524;i:0;i:522;i:0;}', NULL),
(4614, '07160729', 29, 133, 'a:4:{i:526;i:1;i:529;i:0;i:528;i:0;i:527;i:0;}', NULL),
(4615, '07160729', 29, 134, 'a:3:{i:531;i:1;i:532;i:0;i:530;i:0;}', NULL),
(4616, '07160729', 29, 135, 'a:2:{i:534;i:1;i:535;i:0;}', NULL),
(4617, '07160729', 29, 136, 'a:3:{i:539;i:0;i:540;i:0;i:541;i:1;}', NULL),
(4618, '07160729', 30, 130, 'a:2:{i:515;i:1;i:516;i:0;}', NULL),
(4619, '07160729', 30, 131, 'a:2:{i:519;i:1;i:520;i:0;}', NULL),
(4620, '07160729', 30, 132, 'a:2:{i:525;i:1;i:524;i:0;}', NULL),
(4621, '07160729', 30, 133, 'a:2:{i:526;i:1;i:527;i:0;}', NULL),
(4622, '07160729', 30, 134, 'a:2:{i:531;i:1;i:532;i:0;}', NULL),
(4623, '07160729', 30, 135, 'a:2:{i:534;i:1;i:535;i:0;}', NULL),
(4624, '07160729', 30, 136, 'a:2:{i:541;i:1;i:540;i:0;}', NULL),
(4625, '07160729', 30, 137, 'a:2:{i:543;i:1;i:544;i:0;}', NULL),
(4626, '07160729', 30, 138, 'a:2:{i:548;i:1;i:547;i:0;}', NULL),
(4627, '07160729', 30, 139, 'a:2:{i:553;i:1;i:552;i:0;}', NULL),
(4628, '07160729', 30, 140, 'a:2:{i:557;i:1;i:556;i:0;}', NULL),
(4629, '07160729', 30, 141, 'a:1:{i:559;i:1;}', NULL),
(4630, '07160729', 30, 142, 'a:1:{i:562;i:1;}', NULL),
(4631, '07160729', 30, 143, 'a:1:{i:568;i:1;}', NULL),
(4632, '07160729', 30, 144, 'a:1:{i:571;i:1;}', NULL),
(4633, '07160729', 30, 145, 'a:1:{i:575;i:1;}', NULL),
(4634, '07160729', 30, 146, 'a:1:{i:580;i:1;}', NULL),
(4635, '07160729', 30, 147, 'a:1:{i:585;i:1;}', NULL),
(4636, '07160729', 30, 148, 'a:1:{i:587;i:1;}', NULL),
(4637, '07160729', 30, 149, 'a:1:{i:593;i:1;}', NULL),
(4638, '07160729', 30, 150, '', NULL),
(4639, '07160729', 30, 151, '', NULL),
(4640, '07160729', 30, 152, '', NULL),
(4641, '07160729', 30, 153, '', NULL),
(4642, '07160729', 30, 154, '', NULL),
(4643, '07160729', 30, 155, '', NULL),
(4644, '07160729', 30, 156, '', NULL),
(4645, '07160729', 30, 157, '', NULL),
(4646, '07160729', 30, 158, '', NULL),
(4647, '07160729', 30, 159, '', NULL),
(4648, '07160729', 30, 160, '', NULL),
(4649, '07160729', 30, 161, '', NULL),
(4650, '07160729', 30, 162, '', NULL),
(4651, '07160729', 30, 163, '', NULL),
(4652, '07160729', 30, 164, '', NULL),
(4653, '07160729', 30, 165, '', NULL),
(4654, '07160729', 30, 166, '', NULL),
(4655, '07160710', 29, 100, 'a:1:{i:398;i:1;}', NULL),
(4656, '07160710', 29, 101, 'a:1:{i:402;i:1;}', NULL),
(4657, '07160710', 29, 102, 'a:1:{i:406;i:1;}', NULL),
(4658, '07160710', 29, 103, 'a:1:{i:410;i:1;}', NULL),
(4659, '07160710', 29, 104, 'a:1:{i:414;i:1;}', NULL),
(4660, '07160710', 29, 105, 'a:1:{i:417;i:1;}', NULL),
(4661, '07160710', 29, 106, 'a:1:{i:423;i:1;}', NULL),
(4662, '07160710', 29, 107, 'a:1:{i:427;i:1;}', NULL),
(4663, '07160710', 29, 108, 'a:1:{i:432;i:1;}', NULL),
(4664, '07160710', 29, 109, 'a:1:{i:436;i:1;}', NULL),
(4665, '07160710', 29, 110, 'a:1:{i:438;i:1;}', NULL),
(4666, '07160710', 29, 111, 'a:1:{i:441;i:1;}', NULL),
(4667, '07160710', 29, 112, 'a:1:{i:445;i:1;}', NULL),
(4668, '07160710', 29, 113, 'a:2:{i:449;i:1;i:451;i:0;}', NULL),
(4669, '07160710', 29, 114, 'a:1:{i:454;i:1;}', NULL),
(4670, '07160710', 29, 115, 'a:1:{i:459;i:1;}', NULL),
(4671, '07160710', 29, 116, 'a:1:{i:464;i:1;}', NULL),
(4672, '07160710', 29, 117, 'a:1:{i:465;i:1;}', NULL),
(4673, '07160710', 29, 118, 'a:1:{i:472;i:1;}', NULL),
(4674, '07160710', 29, 119, 'a:2:{i:473;i:0;i:475;i:1;}', NULL),
(4675, '07160710', 29, 120, 'a:1:{i:479;i:1;}', NULL),
(4676, '07160710', 29, 123, 'a:1:{i:489;i:1;}', NULL),
(4677, '07160710', 29, 124, 'a:1:{i:492;i:1;}', NULL),
(4678, '07160710', 29, 125, 'a:2:{i:494;i:0;i:497;i:1;}', NULL),
(4679, '07160710', 29, 126, 'a:1:{i:501;i:1;}', NULL),
(4680, '07160710', 29, 127, 'a:1:{i:502;i:1;}', NULL),
(4681, '07160710', 29, 128, 'a:1:{i:508;i:1;}', NULL),
(4682, '07160710', 29, 129, 'a:1:{i:513;i:1;}', NULL),
(4683, '07160710', 29, 130, 'a:1:{i:515;i:1;}', NULL),
(4684, '07160710', 29, 131, 'a:1:{i:519;i:1;}', NULL),
(4685, '07160710', 29, 132, 'a:1:{i:525;i:1;}', NULL),
(4686, '07160710', 29, 133, 'a:1:{i:526;i:1;}', NULL),
(4687, '07160710', 29, 134, 'a:1:{i:531;i:1;}', NULL),
(4688, '07160710', 29, 135, 'a:1:{i:534;i:1;}', NULL),
(4689, '07160710', 29, 136, 'a:1:{i:541;i:1;}', NULL),
(4690, '07160721', 29, 100, 'a:1:{i:398;i:1;}', NULL),
(4691, '07160721', 29, 101, 'a:1:{i:402;i:1;}', NULL),
(4692, '07160721', 29, 102, 'a:1:{i:406;i:1;}', NULL),
(4693, '07160721', 29, 103, '', NULL),
(4694, '07160721', 29, 104, 'a:1:{i:414;i:1;}', NULL),
(4695, '07160721', 29, 105, 'a:1:{i:419;i:1;}', NULL),
(4696, '07160721', 29, 106, 'a:1:{i:422;i:1;}', NULL),
(4697, '07160721', 29, 107, 'a:1:{i:427;i:1;}', NULL),
(4698, '07160721', 29, 108, 'a:1:{i:432;i:1;}', NULL),
(4699, '07160721', 29, 109, 'a:1:{i:433;i:1;}', NULL),
(4700, '07160721', 29, 110, 'a:1:{i:438;i:1;}', NULL),
(4701, '07160721', 29, 111, '', NULL),
(4702, '07160721', 29, 112, '', NULL),
(4703, '07160721', 29, 113, '', NULL),
(4704, '07160721', 29, 114, '', NULL),
(4705, '07160721', 29, 115, '', NULL),
(4706, '07160721', 29, 116, '', NULL),
(4707, '07160721', 29, 117, '', NULL),
(4708, '07160721', 29, 118, '', NULL),
(4709, '07160721', 29, 119, '', NULL),
(4710, '07160721', 29, 120, '', NULL),
(4711, '07160721', 29, 123, '', NULL),
(4712, '07160721', 29, 124, '', NULL),
(4713, '07160721', 29, 125, '', NULL),
(4714, '07160721', 29, 126, '', NULL),
(4715, '07160721', 29, 127, '', NULL),
(4716, '07160721', 29, 128, '', NULL),
(4717, '07160721', 29, 129, '', NULL),
(4718, '07160721', 29, 130, '', NULL),
(4719, '07160721', 29, 131, '', NULL),
(4720, '07160721', 29, 132, '', NULL),
(4721, '07160721', 29, 133, '', NULL),
(4722, '07160721', 29, 134, '', NULL),
(4723, '07160721', 29, 135, '', NULL),
(4724, '07160721', 29, 136, '', NULL),
(4725, '07160723', 29, 100, 'a:1:{i:398;i:1;}', NULL),
(4726, '07160723', 29, 101, 'a:1:{i:402;i:1;}', NULL),
(4727, '07160723', 29, 102, 'a:1:{i:406;i:1;}', NULL),
(4728, '07160723', 29, 103, 'a:1:{i:410;i:1;}', NULL),
(4729, '07160723', 29, 104, 'a:1:{i:414;i:1;}', NULL),
(4730, '07160723', 29, 105, 'a:1:{i:418;i:1;}', NULL),
(4731, '07160723', 29, 106, 'a:1:{i:421;i:1;}', NULL),
(4732, '07160723', 29, 107, 'a:1:{i:427;i:1;}', NULL),
(4733, '07160723', 29, 108, 'a:2:{i:431;i:0;i:432;i:1;}', NULL),
(4734, '07160723', 29, 109, 'a:1:{i:433;i:1;}', NULL),
(4735, '07160723', 29, 110, 'a:1:{i:438;i:1;}', NULL),
(4736, '07160723', 29, 111, 'a:1:{i:442;i:1;}', NULL),
(4737, '07160723', 29, 112, 'a:1:{i:445;i:1;}', NULL),
(4738, '07160723', 29, 113, 'a:1:{i:451;i:1;}', NULL),
(4739, '07160723', 29, 114, 'a:1:{i:454;i:1;}', NULL),
(4740, '07160723', 29, 115, 'a:1:{i:459;i:1;}', NULL),
(4741, '07160723', 29, 116, 'a:1:{i:462;i:1;}', NULL),
(4742, '07160723', 29, 117, 'a:1:{i:468;i:1;}', NULL),
(4743, '07160723', 29, 118, 'a:2:{i:469;i:0;i:470;i:1;}', NULL),
(4744, '07160723', 29, 119, 'a:1:{i:473;i:1;}', NULL),
(4745, '07160723', 29, 120, 'a:1:{i:477;i:1;}', NULL),
(4746, '07160723', 29, 123, 'a:1:{i:489;i:1;}', NULL),
(4747, '07160723', 29, 124, 'a:1:{i:493;i:1;}', NULL),
(4748, '07160723', 29, 125, 'a:1:{i:495;i:1;}', NULL),
(4749, '07160723', 29, 126, 'a:2:{i:499;i:0;i:501;i:1;}', NULL),
(4750, '07160723', 29, 127, 'a:1:{i:504;i:1;}', NULL),
(4751, '07160723', 29, 128, 'a:1:{i:508;i:1;}', NULL),
(4752, '07160723', 29, 129, 'a:1:{i:513;i:1;}', NULL),
(4753, '07160723', 29, 130, 'a:1:{i:515;i:1;}', NULL),
(4754, '07160723', 29, 131, 'a:1:{i:519;i:1;}', NULL),
(4755, '07160723', 29, 132, 'a:1:{i:525;i:1;}', NULL),
(4756, '07160723', 29, 133, 'a:2:{i:529;i:0;i:526;i:1;}', NULL),
(4757, '07160723', 29, 134, 'a:1:{i:533;i:1;}', NULL),
(4758, '07160723', 29, 135, 'a:2:{i:534;i:0;i:537;i:1;}', NULL),
(4759, '07160723', 29, 136, 'a:1:{i:540;i:1;}', NULL),
(4760, '07160702', 28, 66, 'a:1:{i:263;i:1;}', NULL),
(4761, '07160702', 28, 67, 'a:2:{i:265;i:0;i:268;i:1;}', NULL),
(4762, '07160702', 28, 68, 'a:1:{i:272;i:1;}', NULL),
(4763, '07160702', 28, 69, 'a:1:{i:276;i:1;}', NULL),
(4764, '07160702', 28, 70, 'a:1:{i:279;i:1;}', NULL),
(4765, '07160702', 28, 71, 'a:1:{i:281;i:1;}', NULL),
(4766, '07160702', 28, 72, 'a:1:{i:285;i:1;}', NULL),
(4767, '07160702', 28, 73, 'a:1:{i:291;i:1;}', NULL),
(4768, '07160702', 28, 74, 'a:1:{i:296;i:1;}', NULL),
(4769, '07160702', 28, 75, 'a:1:{i:298;i:1;}', NULL),
(4770, '07160702', 28, 76, 'a:1:{i:301;i:1;}', NULL),
(4771, '07160702', 28, 77, 'a:1:{i:308;i:1;}', NULL),
(4772, '07160702', 28, 78, '', NULL),
(4773, '07160702', 28, 79, '', NULL),
(4774, '07160702', 28, 80, '', NULL),
(4775, '07160702', 28, 81, '', NULL),
(4776, '07160702', 28, 82, '', NULL),
(4777, '07160702', 28, 84, '', NULL),
(4778, '07160702', 28, 85, '', NULL),
(4779, '07160702', 28, 86, '', NULL),
(4780, '07160702', 28, 87, '', NULL),
(4781, '07160702', 28, 88, '', NULL),
(4782, '07160702', 28, 89, '', NULL),
(4783, '07160702', 28, 90, '', NULL),
(4784, '07160702', 28, 91, '', NULL),
(4785, '07160702', 28, 92, '', NULL),
(4786, '07160702', 28, 93, '', NULL),
(4787, '07160702', 28, 94, '', NULL),
(4788, '07160702', 28, 95, '', NULL),
(4789, '07160702', 28, 96, '', NULL),
(4790, '07160702', 28, 97, '', NULL),
(4791, '07160702', 28, 98, '', NULL),
(4792, '07160702', 28, 99, '', NULL),
(4793, '07160702', 28, 100, '', NULL),
(4794, '07160702', 28, 101, '', NULL),
(4795, '07160702', 28, 102, '', NULL),
(4796, '07160702', 28, 103, '', NULL),
(4797, '07160702', 28, 104, '', NULL),
(4798, '07160738', 29, 100, 'a:1:{i:398;i:1;}', NULL),
(4799, '07160738', 29, 101, 'a:1:{i:402;i:1;}', NULL),
(4800, '07160738', 29, 102, 'a:1:{i:406;i:1;}', NULL),
(4801, '07160738', 29, 103, 'a:1:{i:410;i:1;}', NULL),
(4802, '07160738', 29, 104, 'a:2:{i:414;i:0;i:415;i:1;}', NULL),
(4803, '07160738', 29, 105, 'a:1:{i:419;i:1;}', NULL),
(4804, '07160738', 29, 106, 'a:1:{i:421;i:1;}', NULL),
(4805, '07160738', 29, 107, 'a:1:{i:427;i:1;}', NULL),
(4806, '07160738', 29, 108, 'a:1:{i:432;i:1;}', NULL),
(4807, '07160738', 29, 109, 'a:2:{i:433;i:0;i:436;i:1;}', NULL),
(4808, '07160738', 29, 110, 'a:1:{i:438;i:1;}', NULL),
(4809, '07160738', 29, 111, 'a:1:{i:441;i:1;}', NULL),
(4810, '07160738', 29, 112, 'a:1:{i:445;i:1;}', NULL),
(4811, '07160738', 29, 113, 'a:1:{i:451;i:1;}', NULL),
(4812, '07160738', 29, 114, 'a:1:{i:454;i:1;}', NULL),
(4813, '07160738', 29, 115, 'a:1:{i:459;i:1;}', NULL),
(4814, '07160738', 29, 116, 'a:2:{i:461;i:0;i:463;i:1;}', NULL),
(4815, '07160738', 29, 117, 'a:1:{i:467;i:1;}', NULL),
(4816, '07160738', 29, 118, 'a:1:{i:472;i:1;}', NULL),
(4817, '07160738', 29, 119, 'a:1:{i:473;i:1;}', NULL),
(4818, '07160738', 29, 120, 'a:2:{i:478;i:0;i:477;i:1;}', NULL),
(4819, '07160738', 29, 123, 'a:3:{i:486;i:0;i:488;i:0;i:489;i:1;}', NULL),
(4820, '07160738', 29, 124, 'a:1:{i:492;i:1;}', NULL),
(4821, '07160738', 29, 125, 'a:2:{i:497;i:1;i:494;i:0;}', NULL),
(4822, '07160738', 29, 126, 'a:1:{i:501;i:1;}', NULL),
(4823, '07160738', 29, 127, 'a:1:{i:503;i:1;}', NULL),
(4824, '07160738', 29, 128, 'a:2:{i:506;i:1;i:509;i:0;}', NULL),
(4825, '07160738', 29, 129, 'a:1:{i:513;i:1;}', NULL),
(4826, '07160738', 29, 130, 'a:2:{i:516;i:0;i:515;i:1;}', NULL),
(4827, '07160738', 29, 131, 'a:1:{i:518;i:1;}', NULL),
(4828, '07160738', 29, 132, 'a:1:{i:525;i:1;}', NULL),
(4829, '07160738', 29, 133, 'a:2:{i:529;i:0;i:526;i:1;}', NULL),
(4830, '07160738', 29, 134, 'a:2:{i:531;i:1;i:532;i:0;}', NULL),
(4831, '07160738', 29, 135, '', NULL),
(4832, '07160738', 29, 136, '', NULL),
(4833, '07160723', 30, 130, 'a:1:{i:515;i:1;}', NULL),
(4834, '07160723', 30, 131, 'a:1:{i:521;i:1;}', NULL),
(4835, '07160723', 30, 132, 'a:1:{i:525;i:1;}', NULL),
(4836, '07160723', 30, 133, 'a:1:{i:526;i:1;}', NULL),
(4837, '07160723', 30, 134, 'a:1:{i:531;i:1;}', NULL),
(4838, '07160723', 30, 135, 'a:1:{i:534;i:1;}', NULL),
(4839, '07160723', 30, 136, 'a:1:{i:541;i:1;}', NULL),
(4840, '07160723', 30, 137, 'a:1:{i:542;i:1;}', NULL),
(4841, '07160723', 30, 138, 'a:1:{i:549;i:1;}', NULL),
(4842, '07160723', 30, 139, 'a:1:{i:553;i:1;}', NULL),
(4843, '07160723', 30, 140, 'a:1:{i:554;i:1;}', NULL),
(4844, '07160723', 30, 141, 'a:1:{i:561;i:1;}', NULL),
(4845, '07160723', 30, 142, 'a:1:{i:562;i:1;}', NULL),
(4846, '07160723', 30, 143, 'a:2:{i:569;i:0;i:567;i:1;}', NULL),
(4847, '07160723', 30, 144, 'a:2:{i:570;i:0;i:571;i:1;}', NULL),
(4848, '07160723', 30, 145, 'a:1:{i:577;i:1;}', NULL),
(4849, '07160723', 30, 146, 'a:1:{i:581;i:1;}', NULL),
(4850, '07160723', 30, 147, 'a:1:{i:582;i:1;}', NULL),
(4851, '07160723', 30, 148, 'a:1:{i:587;i:1;}', NULL),
(4852, '07160723', 30, 149, 'a:1:{i:590;i:1;}', NULL),
(4853, '07160723', 30, 150, 'a:1:{i:597;i:1;}', NULL),
(4854, '07160723', 30, 151, 'a:1:{i:598;i:1;}', NULL),
(4855, '07160723', 30, 152, 'a:1:{i:602;i:1;}', NULL),
(4856, '07160723', 30, 153, 'a:1:{i:607;i:1;}', NULL),
(4857, '07160723', 30, 154, 'a:2:{i:612;i:1;i:613;i:0;}', NULL),
(4858, '07160723', 30, 155, 'a:1:{i:615;i:1;}', NULL),
(4859, '07160723', 30, 156, 'a:1:{i:621;i:1;}', NULL),
(4860, '07160723', 30, 157, 'a:1:{i:623;i:1;}', NULL),
(4861, '07160723', 30, 158, 'a:1:{i:626;i:1;}', NULL),
(4862, '07160723', 30, 159, 'a:1:{i:632;i:1;}', NULL),
(4863, '07160723', 30, 160, 'a:1:{i:635;i:1;}', NULL),
(4864, '07160723', 30, 161, 'a:1:{i:638;i:1;}', NULL),
(4865, '07160723', 30, 162, 'a:1:{i:644;i:1;}', NULL),
(4866, '07160723', 30, 163, 'a:1:{i:646;i:1;}', NULL),
(4867, '07160723', 30, 164, 'a:1:{i:653;i:1;}', NULL),
(4868, '07160723', 30, 165, 'a:1:{i:654;i:1;}', NULL),
(4869, '07160723', 30, 166, 'a:1:{i:661;i:1;}', NULL),
(4870, '07160733', 29, 100, 'a:1:{i:397;i:1;}', NULL),
(4871, '07160733', 29, 101, 'a:1:{i:401;i:1;}', NULL),
(4872, '07160733', 29, 102, 'a:1:{i:406;i:1;}', NULL),
(4873, '07160733', 29, 103, 'a:1:{i:410;i:1;}', NULL),
(4874, '07160733', 29, 104, 'a:1:{i:414;i:1;}', NULL),
(4875, '07160733', 29, 105, 'a:1:{i:417;i:1;}', NULL),
(4876, '07160733', 29, 106, 'a:1:{i:422;i:1;}', NULL),
(4877, '07160733', 29, 107, 'a:1:{i:427;i:1;}', NULL),
(4878, '07160733', 29, 108, 'a:1:{i:432;i:1;}', NULL),
(4879, '07160733', 29, 109, 'a:1:{i:433;i:1;}', NULL),
(4880, '07160733', 29, 110, 'a:1:{i:437;i:1;}', NULL),
(4881, '07160733', 29, 111, 'a:1:{i:444;i:1;}', NULL),
(4882, '07160733', 29, 112, 'a:1:{i:448;i:1;}', NULL),
(4883, '07160733', 29, 113, 'a:1:{i:451;i:1;}', NULL),
(4884, '07160733', 29, 114, 'a:1:{i:453;i:1;}', NULL),
(4885, '07160733', 29, 115, 'a:1:{i:459;i:1;}', NULL),
(4886, '07160733', 29, 116, 'a:1:{i:461;i:1;}', NULL),
(4887, '07160733', 29, 117, 'a:1:{i:465;i:1;}', NULL),
(4888, '07160733', 29, 118, 'a:1:{i:470;i:1;}', NULL),
(4889, '07160733', 29, 119, 'a:1:{i:473;i:1;}', NULL),
(4890, '07160733', 29, 120, 'a:1:{i:479;i:1;}', NULL),
(4891, '07160733', 29, 123, 'a:1:{i:486;i:1;}', NULL),
(4892, '07160733', 29, 124, 'a:1:{i:493;i:1;}', NULL),
(4893, '07160733', 29, 125, 'a:1:{i:495;i:1;}', NULL),
(4894, '07160733', 29, 126, 'a:1:{i:501;i:1;}', NULL),
(4895, '07160733', 29, 127, 'a:1:{i:502;i:1;}', NULL),
(4896, '07160733', 29, 128, 'a:1:{i:508;i:1;}', NULL),
(4897, '07160733', 29, 129, 'a:1:{i:512;i:1;}', NULL),
(4898, '07160733', 29, 130, 'a:2:{i:514;i:1;i:516;i:0;}', NULL),
(4899, '07160733', 29, 131, 'a:1:{i:519;i:1;}', NULL),
(4900, '07160733', 29, 132, 'a:3:{i:524;i:0;i:525;i:0;i:523;i:1;}', NULL),
(4901, '07160733', 29, 133, 'a:1:{i:529;i:1;}', NULL),
(4902, '07160733', 29, 134, 'a:1:{i:530;i:1;}', NULL),
(4903, '07160733', 29, 135, 'a:1:{i:537;i:1;}', NULL),
(4904, '07160733', 29, 136, 'a:1:{i:540;i:1;}', NULL),
(4905, 'hzj', 26, 14, 'a:2:{i:55;i:0;i:56;i:1;}', NULL),
(4906, 'hzj', 26, 15, 'a:1:{i:59;i:1;}', NULL),
(4907, 'hzj', 26, 16, '', NULL),
(4908, 'hzj', 26, 17, '', NULL),
(4909, 'hzj', 26, 18, '', NULL),
(4910, 'hzj', 26, 19, '', NULL),
(4911, 'hzj', 26, 20, '', NULL),
(4912, 'hzj', 26, 21, '', NULL),
(4913, 'hzj', 26, 22, '', NULL),
(4914, 'hzj', 26, 23, '', NULL),
(4915, 'hzj', 26, 24, '', NULL),
(4916, 'hzj', 26, 25, '', NULL),
(4917, 'hzj', 26, 26, '', NULL),
(4918, 'hzj', 26, 27, '', NULL),
(4919, 'hzj', 26, 28, '', NULL),
(4920, 'hzj', 26, 29, '', NULL),
(4921, 'hzj', 26, 30, '', NULL),
(4922, 'hzj', 26, 31, '', NULL),
(4923, 'hzj', 26, 32, '', NULL),
(4924, 'hzj', 26, 33, '', NULL),
(4925, 'hzj', 26, 34, '', NULL),
(4926, 'hzj', 26, 35, '', NULL),
(4927, 'hzj', 26, 36, '', NULL),
(4928, 'hzj', 26, 37, '', NULL),
(4929, 'hzj', 26, 38, '', NULL),
(4930, 'hzj', 26, 39, '', NULL),
(4931, 'hzj', 27, 40, '', NULL),
(4932, 'hzj', 27, 41, '', NULL),
(4933, 'hzj', 27, 42, '', NULL),
(4934, 'hzj', 27, 43, '', NULL),
(4935, 'hzj', 27, 44, '', NULL),
(4936, 'hzj', 27, 45, '', NULL),
(4937, 'hzj', 27, 46, '', NULL),
(4938, 'hzj', 27, 47, '', NULL),
(4939, 'hzj', 27, 48, '', NULL),
(4940, 'hzj', 27, 49, '', NULL),
(4941, 'hzj', 27, 50, '', NULL),
(4942, 'hzj', 27, 51, '', NULL),
(4943, 'hzj', 27, 52, '', NULL),
(4944, 'hzj', 27, 53, '', NULL),
(4945, 'hzj', 27, 54, '', NULL),
(4946, 'hzj', 27, 55, '', NULL),
(4947, 'hzj', 27, 56, '', NULL),
(4948, 'hzj', 27, 57, '', NULL),
(4949, 'hzj', 27, 58, '', NULL),
(4950, 'hzj', 27, 59, '', NULL),
(4951, 'hzj', 27, 60, '', NULL),
(4952, 'hzj', 27, 61, '', NULL),
(4953, 'hzj', 27, 62, '', NULL),
(4954, 'hzj', 27, 63, '', NULL),
(4955, 'hzj', 27, 64, '', NULL),
(4956, 'hzj', 27, 65, '', NULL),
(4957, 'hzj', 27, 66, '', NULL),
(4958, 'hzj', 27, 67, '', NULL),
(4959, 'hzj', 27, 68, '', NULL),
(4960, 'hzj', 27, 69, '', NULL),
(4961, 'hzj', 27, 70, '', NULL),
(4962, 'hzj', 27, 71, '', NULL),
(4963, 'hzj', 27, 72, '', NULL),
(4964, 'hzj', 27, 73, '', NULL);

-- --------------------------------------------------------

--
-- 表的结构 `exercise_score`
--

CREATE TABLE `exercise_score` (
  `id` int(10) UNSIGNED NOT NULL,
  `studentId` varchar(8) CHARACTER SET utf8 NOT NULL COMMENT '学号',
  `test_name` varchar(50) CHARACTER SET utf8 NOT NULL COMMENT '测试名称',
  `subject` varchar(50) CHARACTER SET utf8 NOT NULL COMMENT '科目',
  `paper_id` int(10) UNSIGNED NOT NULL COMMENT '试卷id',
  `max_mark` int(11) NOT NULL COMMENT '最高分',
  `times` int(11) NOT NULL COMMENT '测试次数'
) ENGINE=InnoDB DEFAULT CHARSET=gbk;

--
-- 转存表中的数据 `exercise_score`
--

INSERT INTO `exercise_score` (`id`, `studentId`, `test_name`, `subject`, `paper_id`, `max_mark`, `times`) VALUES
(22, '07160801', '练习一', 'java', 26, 26, 5),
(23, '07160701', '练习一', 'java', 26, 17, 2),
(24, '07160712', '练习一', 'java', 26, 9, 3),
(25, '07160702', '练习七', 'java', 32, 30, 2),
(26, '07160742', '练习一', 'java', 26, 18, 1),
(27, '07160741', '练习一', 'java', 26, 26, 3),
(28, '07160721', '练习一', 'java', 26, 26, 3),
(29, '07160708', '练习一', 'java', 26, 26, 3),
(30, '07160722', '练习一', 'java', 26, 26, 2),
(31, '07160738', '练习一', 'java', 26, 26, 3),
(32, '07160706', '练习一', 'java', 26, 26, 8),
(33, '07160719', '练习一', 'java', 26, 26, 5),
(34, '07160746', '练习一', 'java', 26, 26, 3),
(35, '07160714', '练习一', 'java', 26, 26, 2),
(36, '07160734', '练习一', 'java', 26, 26, 3),
(37, '07160707', '练习一', 'java', 26, 26, 8),
(38, '07160748', '练习一', 'java', 26, 25, 5),
(39, '07160717', '练习一', 'java', 26, 25, 4),
(40, '07160743', '练习七', 'java', 32, 30, 3),
(41, '07160737', '练习一', 'java', 26, 21, 1),
(42, '07160718', '练习一', 'java', 26, 14, 1),
(43, '07160727', '练习一', 'java', 26, 25, 2),
(44, '07160726', '练习一', 'java', 26, 19, 1),
(45, '07160724', '练习一', 'java', 26, 26, 4),
(46, '07160725', '练习一', 'java', 26, 26, 3),
(47, '07160729', '练习一', 'java', 26, 26, 3),
(48, '07160705', '练习二', 'java', 27, 34, 4),
(49, '07160740', '练习一', 'java', 26, 20, 3),
(50, '07160711', '练习一', 'java', 26, 26, 3),
(51, '07160715', '练习七', 'java', 32, 14, 1),
(52, '07160713', '练习一', 'java', 26, 24, 2),
(53, '07160723', '练习一', 'java', 26, 18, 1),
(54, '07160736', '练习一', 'java', 26, 17, 1),
(55, '07160709', '练习一', 'java', 26, 24, 3),
(56, '07160733', '练习一', 'java', 26, 26, 7),
(57, '07160739', '练习一', 'java', 26, 23, 1),
(58, '07160732', '练习一', 'java', 26, 25, 4),
(59, '07160730', '练习一', 'java', 26, 26, 3),
(60, '07160703', '练习一', 'java', 26, 16, 1),
(61, '07160710', '练习一', 'java', 26, 26, 2),
(62, '07160741', '练习二', 'java', 27, 27, 2),
(63, '07160728', '练习一', 'java', 26, 26, 2),
(64, '07160743', '练习一', 'java', 26, 26, 2),
(65, '07160708', '练习二', 'java', 27, 34, 3),
(66, '07160702', '练习八', 'java', 33, 14, 1),
(67, '07160720', '练习一', 'java', 26, 26, 4),
(68, '07160742', '练习二', 'java', 27, 24, 2),
(69, '07160706', '练习二', 'java', 27, 34, 5),
(70, '07160731', '练习一', 'java', 26, 26, 2),
(71, '07160722', '练习二', 'java', 27, 34, 3),
(72, '07160734', '练习二', 'java', 27, 34, 6),
(73, '07160735', '练习一', 'java', 26, 20, 2),
(74, '07160707', '练习二', 'java', 27, 34, 6),
(75, '07160702', '练习一', 'java', 26, 26, 4),
(76, '07160736', '练习二', 'java', 27, 14, 1),
(77, '07160714', '练习二', 'java', 27, 33, 2),
(78, '07160723', '练习二', 'java', 27, 31, 4),
(79, '07160709', '练习二', 'java', 27, 33, 3),
(80, '07160737', '练习二', 'java', 27, 19, 1),
(81, '07160715', '练习一', 'java', 26, 14, 1),
(82, '07160721', '练习二', 'java', 27, 34, 9),
(83, '07160708', '练习三', 'java', 28, 38, 4),
(84, '07160719', '练习二', 'java', 27, 30, 2),
(85, '07160707', '练习三', 'java', 28, 38, 6),
(86, '07160730', '练习二', 'java', 27, 32, 6),
(87, '07160726', '练习二', 'java', 27, 33, 3),
(88, '07160740', '练习二', 'java', 27, 26, 2),
(89, '07160733', '练习二', 'java', 27, 34, 6),
(90, '07160738', '练习二', 'java', 27, 34, 3),
(91, '07160745', '练习二', 'java', 27, 12, 1),
(92, '07160705', '练习一', 'java', 26, 26, 2),
(93, '07160745', '练习一', 'java', 26, 18, 1),
(94, '07160708', '练习四', 'java', 29, 35, 3),
(95, '07160736', '练习三', 'java', 28, 21, 1),
(96, '07160725', '练习二', 'java', 27, 34, 2),
(97, '07160746', '练习二', 'java', 27, 12, 1),
(98, '07160717', '练习二', 'java', 27, 21, 1),
(99, '07160732', '练习八', 'java', 33, 29, 2),
(100, '07160728', '练习二', 'java', 27, 34, 5),
(101, '07160708', '练习五', 'java', 30, 37, 3),
(102, '07160724', '练习二', 'java', 27, 33, 2),
(103, '07160705', '练习三', 'java', 28, 18, 1),
(104, '07160733', '练习三', 'java', 28, 31, 4),
(105, '07160727', '练习二', 'java', 27, 32, 2),
(106, '07160745', '练习三', 'java', 28, 16, 1),
(107, '07160715', '练习二', 'java', 27, 14, 1),
(108, '07160710', '练习二', 'java', 27, 34, 4),
(109, '07160712', '练习二', 'java', 27, 18, 1),
(110, '07160702', '练习二', 'java', 27, 33, 2),
(111, '07160748', '练习二', 'java', 27, 18, 1),
(112, '07160732', '练习二', 'java', 27, 26, 1),
(113, '07160801', '练习二', 'java', 27, 24, 1),
(114, '07160731', '练习二', 'java', 27, 32, 3),
(115, '07160725', '练习三', 'java', 28, 38, 2),
(116, '07160706', '练习三', 'java', 28, 38, 3),
(117, '07160743', '练习二', 'java', 27, 34, 3),
(118, '07160801', '练习三', 'java', 28, 20, 1),
(119, '07160738', '练习三', 'java', 28, 38, 3),
(120, '07160728', '练习三', 'java', 28, 38, 5),
(121, '07160710', '练习三', 'java', 28, 38, 4),
(122, '07160737', '练习三', 'java', 28, 20, 1),
(123, '07160739', '练习二', 'java', 27, 28, 1),
(124, '07160720', '练习二', 'java', 27, 34, 4),
(125, '07160720', '练习三', 'java', 28, 37, 2),
(126, '07160729', '练习二', 'java', 27, 34, 4),
(127, '07160729', '练习三', 'java', 28, 38, 3),
(128, '07160739', '练习三', 'java', 28, 34, 2),
(129, '07160721', '练习三', 'java', 28, 32, 2),
(130, '07160732', '练习三', 'java', 28, 26, 1),
(131, '07160801', '练习四', 'java', 29, 22, 1),
(132, '07160740', '练习三', 'java', 28, 18, 3),
(133, '07160734', '练习三', 'java', 28, 38, 5),
(134, '07160739', '练习四', 'java', 29, 32, 2),
(135, '07160729', '练习四', 'java', 29, 34, 5),
(136, '07160710', '练习四', 'java', 29, 35, 2),
(137, '07160723', '练习三', 'java', 28, 19, 1),
(138, '07160723', '练习四', 'java', 29, 19, 1),
(139, '07160723', '练习五', 'java', 30, 24, 1),
(140, '07160733', '练习四', 'java', 29, 13, 1),
(141, 'hzj', '练习一', 'java', 26, 2, 2);

-- --------------------------------------------------------

--
-- 表的结构 `paper`
--

CREATE TABLE `paper` (
  `id` int(10) UNSIGNED NOT NULL COMMENT '主键',
  `name` varchar(100) NOT NULL COMMENT '试卷名',
  `subject` varchar(50) NOT NULL COMMENT '科目',
  `total` int(11) NOT NULL COMMENT '总题量',
  `content` text NOT NULL COMMENT '内容',
  `memo` varchar(50) DEFAULT NULL COMMENT '备注'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `paper`
--

INSERT INTO `paper` (`id`, `name`, `subject`, `total`, `content`, `memo`) VALUES
(26, '练习一', 'java', 20, '14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39', ''),
(27, '练习二', 'java', 60, '40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73', ''),
(28, '练习三', 'java', 90, '66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104', ''),
(29, '练习四', 'java', 120, '100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,135,136', ''),
(30, '练习五', 'java', 150, '130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166', ''),
(31, '练习六', 'java', 180, '163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199', ''),
(32, '练习七', 'java', 210, '200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229', ''),
(33, '练习八', 'java', 250, '230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261', '');

-- --------------------------------------------------------

--
-- 表的结构 `score`
--

CREATE TABLE `score` (
  `id` int(10) UNSIGNED NOT NULL,
  `studentId` varchar(8) CHARACTER SET utf8 NOT NULL,
  `test_name` varchar(50) CHARACTER SET utf8 NOT NULL,
  `subject` varchar(50) CHARACTER SET utf8 NOT NULL,
  `paper_id` int(10) UNSIGNED NOT NULL COMMENT '试卷id',
  `mark` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=gbk;

--
-- 转存表中的数据 `score`
--

INSERT INTO `score` (`id`, `studentId`, `test_name`, `subject`, `paper_id`, `mark`) VALUES
(20, '07160701', '练习一', 'java', 26, 10),
(21, '07160734', '练习一', 'java', 26, 17),
(22, '07160740', '练习一', 'java', 26, 14),
(23, '07160725', '练习一', 'java', 26, 19),
(25, '07160733', '练习一', 'java', 26, 17),
(26, '07160713', '练习一', 'java', 26, 15),
(27, '07160801', '练习一', 'java', 26, 18),
(28, '07160730', '练习一', 'java', 26, 13),
(29, '07160731', '练习一', 'java', 26, 16),
(30, '07160729', '练习一', 'java', 26, 26),
(31, '07160729', '练习二', 'java', 27, 34),
(32, '07160710', '练习一', 'java', 26, 26),
(33, 'hzj', '练习一', 'java', 26, 2),
(34, '07160713', '练习二', 'php', 27, 30),
(38, '07160713', '练习三', 'java', 28, 0),
(39, '07160713', '练习四', 'java', 29, 0),
(40, '07160713', '练习五', 'java', 30, 0),
(41, '07160712', '练习一', 'java', 26, 0),
(42, '07160713', '练习六', 'java', 31, 0),
(43, '07160713', '练习七', 'java', 32, 0),
(44, '07160712', '练习二', 'java', 27, 0);

-- --------------------------------------------------------

--
-- 表的结构 `select_item`
--

CREATE TABLE `select_item` (
  `id` int(10) UNSIGNED NOT NULL COMMENT '主键',
  `select_question_id` int(10) UNSIGNED NOT NULL COMMENT '选择题号',
  `isanswer` tinyint(1) NOT NULL COMMENT '是否答案',
  `content` varchar(1000) NOT NULL COMMENT '选项',
  `memo` varchar(32) DEFAULT NULL COMMENT '备注'
) ENGINE=InnoDB DEFAULT CHARSET=gbk;

--
-- 转存表中的数据 `select_item`
--

INSERT INTO `select_item` (`id`, `select_question_id`, `isanswer`, `content`, `memo`) VALUES
(53, 14, 0, 'start()', NULL),
(54, 14, 0, 'init()', NULL),
(55, 14, 0, 'paint()', NULL),
(56, 14, 1, 'main()', NULL),
(57, 15, 0, '$cardNumber', NULL),
(58, 15, 0, 'point', NULL),
(59, 15, 1, 'Tree&Grass', NULL),
(60, 15, 0, '_getSalary', NULL),
(61, 16, 0, 'BorderLayout', NULL),
(62, 16, 0, 'CardLayout', NULL),
(63, 16, 0, 'GridLayout', NULL),
(64, 16, 1, 'FlowLayout', NULL),
(65, 17, 0, '8', NULL),
(66, 17, 0, '16', NULL),
(67, 17, 1, '32', NULL),
(68, 17, 0, '64', NULL),
(69, 18, 0, '144', ''),
(70, 18, 0, '28', ''),
(71, 18, 1, '140', ''),
(72, 18, 0, '不能执行', ''),
(73, 19, 1, 'Employee e=new Manager()；', ''),
(74, 19, 0, 'Director d=new Manager()；', ''),
(75, 19, 0, 'Director d=new Employee()；', ''),
(76, 19, 0, 'Manager m=new Director()；', ''),
(77, 20, 0, '所有组件，都不允许附加多个监听器', NULL),
(78, 20, 0, '如果多个监听器加在一个组件上，那么事件只会触发一个监听器', NULL),
(79, 20, 0, '组件不允许附加多个监听器', NULL),
(80, 20, 1, '监听器机制允许按照我们的需要，任意调用addXxxxListener 方法多次，而且没有次序区别', NULL),
(81, 21, 0, 'public', NULL),
(82, 21, 0, 'protected', NULL),
(83, 21, 1, 'default', NULL),
(84, 21, 0, 'private', NULL),
(85, 22, 0, 'China2011@', ''),
(86, 22, 0, '@China2011', ''),
(87, 22, 1, 'China@2011', ''),
(88, 22, 0, 'China#2011', ''),
(89, 23, 0, '99331054', NULL),
(90, 23, 1, '45103399', NULL),
(91, 23, 0, '99104335', NULL),
(92, 23, 0, '53341099', NULL),
(93, 24, 0, 'private', NULL),
(94, 24, 0, 'protected', NULL),
(95, 24, 0, 'public', NULL),
(96, 24, 1, '没有访问控制符', NULL),
(97, 25, 1, 'public abstract class Car{}', NULL),
(98, 25, 0, 'bstract private move(){}', NULL),
(99, 25, 0, 'protected private number{}', NULL),
(100, 25, 0, 'abstract final class HI{}', NULL),
(101, 26, 0, 'A类的实例不能访问到B类的实例', NULL),
(102, 26, 0, 'A类的实例能够访问到B类一个实例的x成员', NULL),
(103, 26, 1, 'C类的实例可以访问到B类一个实例的x成员', NULL),
(104, 26, 0, 'C类的实例不能访问到B类的实例', NULL),
(105, 27, 1, 'UnknownHostException', NULL),
(106, 27, 0, 'IOException', NULL),
(107, 27, 0, 'FileNotFoundException', NULL),
(108, 27, 0, 'ClassNotFoundException', NULL),
(109, 28, 0, 'myprog', ''),
(110, 28, 0, 'hello', ''),
(111, 28, 0, 'world', ''),
(112, 28, 1, 'Exception raised: "java.lang.ArrayIndexOutOfBoundsException: 2"', ''),
(113, 29, 0, '2个按钮并排占据整个窗体，左边是Hello按钮，右边是Bye按钮', ''),
(114, 29, 0, 'Hello按钮占据整个窗体', ''),
(115, 29, 1, 'Bye按钮占据整个窗体', ''),
(116, 29, 0, 'Hello和Bye按钮都位于窗体的上部', ''),
(117, 30, 1, 'x[30]为0', NULL),
(118, 30, 0, 'x[30]未定义', NULL),
(119, 30, 0, 'x[31]为0 ', NULL),
(120, 30, 0, 'x[0]为空', NULL),
(121, 31, 1, '编译时发生错误', ''),
(122, 31, 0, '可以运行，按任意键退出', ''),
(123, 31, 0, '可以运行，按任意键，提示"Doing finally"，然后退出', ''),
(124, 31, 0, '刚开始运行，立即退出', ''),
(125, 32, 1, 'double', NULL),
(126, 32, 0, 'char   ', NULL),
(127, 32, 0, 'byte   ', NULL),
(128, 32, 0, 'short ', NULL),
(129, 33, 0, 'package com.org.*;', NULL),
(130, 33, 1, 'import com.org.*;', NULL),
(131, 33, 0, 'com.org import;', NULL),
(132, 33, 0, 'com.org package;', NULL),
(133, 34, 1, 'final 可修饰类、属性、方法', NULL),
(134, 34, 0, 'abstract可修饰类、属性、方法', NULL),
(135, 34, 0, '定义抽象方法需有方法的返回类型、名称、参数列表和方法体', NULL),
(136, 34, 0, '用final修饰的变量，在程序中可对这个变量的值进行更改', NULL),
(137, 35, 0, 'start  ', NULL),
(138, 35, 0, 'stop   ', NULL),
(139, 35, 0, 'yield    ', NULL),
(140, 35, 1, 'run ', NULL),
(141, 36, 0, '编译失败', ''),
(142, 36, 0, '程序运行结果为：one.Threadtwo.Thread ', ''),
(143, 36, 1, '程序运行结果不确定', ''),
(144, 36, 0, '程序运行结果是：one.two.ThreadThread', ''),
(145, 37, 0, 'InputEvent', NULL),
(146, 37, 0, 'KeyEvent', NULL),
(147, 37, 0, 'MouseEvent', NULL),
(148, 37, 1, 'WindowEvent', NULL),
(149, 38, 1, 'BufferedInputStream', NULL),
(150, 38, 0, 'DataOutputStream', NULL),
(151, 38, 0, 'PrintStream', NULL),
(152, 38, 0, 'BufferedOutputStream', NULL),
(153, 39, 0, 'init paint start', NULL),
(154, 39, 0, 'start paint init', NULL),
(155, 39, 0, 'paint start init', NULL),
(156, 39, 1, 'init start paint', NULL),
(157, 40, 0, 'getFile()', NULL),
(158, 40, 0, 'getProtocol()', NULL),
(159, 40, 1, 'getPort()', NULL),
(160, 40, 0, 'getHost()', NULL),
(161, 41, 1, '采用不同的参数列表', NULL),
(162, 41, 0, '返回值类型不同', NULL),
(163, 41, 0, '调用时用类名或对象名做前缀', NULL),
(164, 41, 0, '参数名不同', NULL),
(165, 42, 0, 'List', NULL),
(166, 42, 1, 'Set', NULL),
(167, 42, 0, 'Map', NULL),
(168, 42, 0, 'Vector', NULL),
(169, 43, 0, '创建子类的对象时，先调用子类自己的构造函数，然后调用父类的构造函数', NULL),
(170, 43, 0, '子类无条件地继承父类不含参数的构造函数', NULL),
(171, 43, 1, '子类可以通过super关键字调用父类的构造函数', NULL),
(172, 43, 0, '子类无条件地继承父类带参数的构造函数', NULL),
(173, 44, 1, 'int t1[][]={{1,2},{3,4},{5,6}};', NULL),
(174, 44, 0, 'int t2[][]={1,2,3,4,5,6};', NULL),
(175, 44, 0, 'int t3[3][2]={1,2,3,4,5,6};', NULL),
(176, 44, 0, 'int t4[][]; t4={1,2,3,4,5,6};', NULL),
(177, 45, 0, '35', ''),
(178, 45, 1, '25', ''),
(179, 45, 0, '20', ''),
(180, 45, 0, '5', ''),
(181, 46, 0, '4k', ''),
(182, 46, 1, '7k', ''),
(183, 46, 0, '43k', ''),
(184, 46, 0, '3k', ''),
(185, 47, 0, 'Hello  ', ''),
(186, 47, 0, 'ello   ', ''),
(187, 47, 0, 'elloH   ', ''),
(188, 47, 1, '编译错误', ''),
(189, 48, 1, 'java.lang.Object', NULL),
(190, 48, 0, 'java.lang.Class', NULL),
(191, 48, 0, 'java.applet.Applet', NULL),
(192, 48, 0, 'java.awt.Frame', NULL),
(193, 49, 0, '多重的', NULL),
(194, 49, 1, '单重的', NULL),
(195, 49, 0, '线程的', NULL),
(196, 49, 0, '不能继承', NULL),
(197, 50, 0, 'Caught in main（）', ''),
(198, 50, 1, 'Caught in main（）\r\n         nothing \r\n', ''),
(199, 50, 0, 'nothing', ''),
(200, 50, 0, '没有任何输出', ''),
(201, 51, 1, '编译时将产生错误', ''),
(202, 51, 0, '编译时正确，运行时将产生错误 ', ''),
(203, 51, 0, '可以运行，但什么也没输出', ''),
(204, 51, 0, '输出null', ''),
(205, 52, 0, '小程序内必须有 main() 方法', NULL),
(206, 52, 1, '独立程序必须包含 main() 方法，而Applet小程序的父类一定是Applet ', NULL),
(207, 52, 0, '两者都必须有 main() 方法', NULL),
(208, 52, 0, '小程序必须包含 main() 方法，而独立程序的父类一定是Applet', NULL),
(209, 53, 1, 's += &quot;books&quot;;', NULL),
(210, 53, 0, 'char c = s[1];', NULL),
(211, 53, 0, 'int len = s .length;', NULL),
(212, 53, 0, 's = s - &quot;books&quot;;', NULL),
(213, 54, 0, '编译报错', ''),
(214, 54, 0, '2', ''),
(215, 54, 0, '1', ''),
(216, 54, 1, '0', ''),
(217, 55, 1, '多个监听者可以被附加到一个组件', NULL),
(218, 55, 0, '只有一个监听者可以被附加到一个组件上', NULL),
(219, 55, 0, '一个监听者只能接受一个组件产生的事件', NULL),
(220, 55, 0, '以上描述都不对', NULL),
(221, 56, 0, 'new', NULL),
(222, 56, 0, 'private', NULL),
(223, 56, 1, 'sealed', NULL),
(224, 56, 0, 'transient', NULL),
(225, 57, 0, 'java.lang包', NULL),
(226, 57, 0, 'java.io包', NULL),
(227, 57, 0, 'java.awt包 ', NULL),
(228, 57, 1, 'java.util包', NULL),
(229, 58, 0, '试图添加一个重复的元素时，会抛出一个异常', NULL),
(230, 58, 1, '试图添加一个重复的元素时，重复元素将不能被加入', NULL),
(231, 58, 0, '一个Set可以包含重复元素', NULL),
(232, 58, 0, '编译的时候，重复的元素会导致错误', NULL),
(233, 59, 1, 'Bird', ''),
(234, 59, 0, 'fly', ''),
(235, 59, 0, 'Bird或fly', ''),
(236, 59, 0, '不一定', ''),
(237, 60, 0, '2个文件都可以编译，P2运行输出“What a fancy method”', ''),
(238, 60, 0, '2个文件都不能编译 ', ''),
(239, 60, 0, '2个文件都可以编译，P2运行时报错误', ''),
(240, 60, 1, 'P1编译成功，P2编译时报错误', ''),
(241, 61, 0, 'list.remove(obj);', ''),
(242, 61, 0, 'list.remove(index);', ''),
(243, 61, 0, 'list.remove(it.next());', ''),
(244, 61, 1, 'it.remove();', ''),
(245, 62, 0, '编译错误', ''),
(246, 62, 1, 'vandeleur   ', ''),
(247, 62, 0, 'vandeleur 0  ', ''),
(248, 62, 0, 'vandeleur wiggy 0 1 2 3 ', ''),
(249, 63, 0, 'float f=1.3; ', NULL),
(250, 63, 0, 'char c=&quot;a&quot;; ', NULL),
(251, 63, 1, 'int i=10;', NULL),
(252, 63, 0, 'boolean b=null; ', NULL),
(253, 64, 0, '由于court是私有变量，因此产生一个编译失败错误', ''),
(254, 64, 0, '由于System.out方法被调用时，s未初始化，因此产生一个编译失败错误', ''),
(255, 64, 0, '0', ''),
(256, 64, 1, '99', ''),
(257, 65, 0, 'OutputStream out=new FileOutputStream(“file.txt”);', NULL),
(258, 65, 0, 'OutputStream out=new FileOutputStream(“file.txt”, “append”); ', NULL),
(259, 65, 1, 'OutputStream out=new FileOutputStream(new File(“file.txt”),true); ', NULL),
(260, 65, 0, 'FileOutputStream out=new FileOutputStream(new file(“file.txt”));', NULL),
(261, 66, 0, 'NullPointerException', NULL),
(262, 66, 0, 'ClassCastException ', NULL),
(263, 66, 1, 'FileNotFoundException', NULL),
(264, 66, 0, 'IndexOutOfBoundsException', NULL),
(265, 67, 0, 'FileInputStream in=new FileInputStream(&quot;file.dat&quot;); in.skip(9); int c=in.read();', NULL),
(266, 67, 0, 'FileInputStream in=new FileInputStream(&quot;file.dat&quot;); in.skip(10); int c=in.read();', NULL),
(267, 67, 0, 'FileInputStream in=new FileInputStream(&quot;file.dat&quot;); int c=in.read();', NULL),
(268, 67, 1, 'RandomAccessFile in=new RandomAccessFile(&quot;file.dat&quot;); in.skip(9); int c=in.readByte();', NULL),
(269, 68, 1, 'float  aMethod（float  a，float  b）{ }', ''),
(270, 68, 0, 'public  int  aMethod（int a，int b）throws  Exception{ } ', ''),
(271, 68, 0, 'public  float  aMethod（float  p，float q）{ }', ''),
(272, 68, 0, 'public  int  aMethod（int a，int  b）throws IOException{ } ', ''),
(273, 69, 1, 'final void methoda() {}', NULL),
(274, 69, 0, 'void final methoda() {} ', NULL),
(275, 69, 0, 'static void methoda() {} ', NULL),
(276, 69, 0, 'final abstract void methoda() {} ', NULL),
(277, 70, 0, '行4与行6都将执行', ''),
(278, 70, 0, '行4执行，行6不执行 ', ''),
(279, 70, 1, '行6执行，行4不执行 ', ''),
(280, 70, 0, '行4、行6都不执行', ''),
(281, 71, 1, 'const  ', NULL),
(282, 71, 0, '$double', NULL),
(283, 71, 0, 'hello', NULL),
(284, 71, 0, 'BigMeaninglessName', NULL),
(285, 72, 0, 'interface  B                        \r\n       {  void print() { } ;} \r\n', NULL),
(286, 72, 0, 'abstract  interface  B\r\n       { void print() ;} \r\n', NULL),
(287, 72, 0, 'abstract  interface  B  extends  A1,A2  //A1、A2为已定义的接口\r\n       { abstract  void  print(){  };}\r\n', NULL),
(288, 72, 1, 'interface  B\r\n       {  void  print();}\r\n', NULL),
(289, 73, 0, '这段程序的功能是：每隔500秒打印0123', ''),
(290, 73, 0, '这段程序的功能是：每隔1秒打印0123 ', ''),
(291, 73, 1, '这段程序的功能是：每隔半秒打印0123 ', ''),
(292, 73, 0, '这段程序的功能是：每隔半分钟打印0123    ', ''),
(293, 74, 0, '//… ', NULL),
(294, 74, 0, '/* … */ ', NULL),
(295, 74, 1, '/** … **/ ', NULL),
(296, 74, 0, '/** … */ ', NULL),
(297, 75, 0, '不需定义类，就能创建对象', NULL),
(298, 75, 1, '属性可以是简单变量，也可以是一个对象 ', NULL),
(299, 75, 0, '属性必须是简单变量', NULL),
(300, 75, 0, '对象中必有属性和方法', NULL),
(301, 76, 0, '9', NULL),
(302, 76, 1, '12', NULL),
(303, 76, 0, '15', NULL),
(304, 76, 0, '18', NULL),
(305, 77, 0, '1', NULL),
(306, 77, 0, '23', NULL),
(307, 77, 0, '18', NULL),
(308, 77, 1, '5', NULL),
(309, 78, 0, '字符型变量', NULL),
(310, 78, 0, '整型变量', NULL),
(311, 78, 0, '整型常量', NULL),
(312, 78, 1, '逻辑型常量', NULL),
(313, 79, 0, 'x称为类变量，y为实例变量', NULL),
(314, 79, 0, 'x,y均为类变量', NULL),
(315, 79, 0, 'x,y均为实例变量', NULL),
(316, 79, 1, 'x为实例变量，y为类变量', NULL),
(317, 80, 0, '继承具有传递性', NULL),
(318, 80, 0, '继承关系也称为“即是”关系', NULL),
(319, 80, 1, '继承具有多支持的特性', NULL),
(320, 80, 0, '继承提高了系统的可重用性', NULL),
(321, 81, 0, 'init（）', NULL),
(322, 81, 1, 'start（）', NULL),
(323, 81, 0, 'run（）', NULL),
(324, 81, 0, 'sleep（）', NULL),
(325, 82, 0, 'connect（）', NULL),
(326, 82, 1, 'accept（）', NULL),
(327, 82, 0, 'link（）', NULL),
(328, 82, 0, 'receive（）', NULL),
(333, 84, 0, 'FileNotFoundException', NULL),
(334, 84, 1, 'ClassNotFoundException   ', NULL),
(335, 84, 0, 'ClassCastException   ', NULL),
(336, 84, 0, 'RuntimeException ', NULL),
(337, 85, 0, 'skipBytes（）', NULL),
(338, 85, 1, 'seek（）', NULL),
(339, 85, 0, 'oveBytes（）', NULL),
(340, 85, 0, 'seekBytes（）', NULL),
(341, 86, 0, 'int addValue（ int x, int y ）{// do something...}  ', ''),
(342, 86, 0, 'public void addValue （int x, int y ）{// do something...} ', ''),
(343, 86, 1, 'ublic int addValue（ int x ）{// do something...} ', ''),
(344, 86, 0, 'public int addValue（ int x, int y ）throws MyException {//do something...} ', ''),
(345, 87, 0, 'classA\r\n       classA\r\n', ''),
(346, 87, 0, 'classB\r\n       classB \r\n', ''),
(347, 87, 1, 'classA\r\n       classB \r\n', ''),
(348, 87, 0, 'classB\r\n       classA \r\n', ''),
(349, 88, 0, 'hello throwit caught', ''),
(350, 88, 1, 'hello throwit caught finally after ', ''),
(351, 88, 0, 'hello throwit RuntimeException after ', ''),
(352, 88, 0, 'hello throwit caught finally after RuntimeException ', ''),
(353, 89, 0, '8', NULL),
(354, 89, 0, '16', NULL),
(355, 89, 1, '32', NULL),
(356, 89, 0, '64', NULL),
(357, 90, 0, '如果final修饰变量，则一旦赋值，就等同一个常量', NULL),
(358, 90, 0, '如果final修饰类，则该类不能被子类继承', NULL),
(359, 90, 0, '如果final修饰方法，则该方法不能在子类中被重写', NULL),
(360, 90, 1, '如果final修饰方法，则该方法所在的类不能被继承    ', NULL),
(361, 91, 1, '5', ''),
(362, 91, 0, '6', ''),
(363, 91, 0, '7', ''),
(364, 91, 0, '以上都不对', ''),
(365, 92, 0, '15', ''),
(366, 92, 0, '10', ''),
(367, 92, 1, '0', ''),
(368, 92, 0, '20', ''),
(369, 93, 0, ' B x1=new B（）;', NULL),
(370, 93, 0, 'B x1=new C（）; ', NULL),
(371, 93, 0, 'C x1=new C（）;', NULL),
(372, 93, 1, 'C x1=new B（）; ', NULL),
(373, 94, 0, 'import  ', NULL),
(374, 94, 1, 'package    ', NULL),
(375, 94, 0, 'interface   ', NULL),
(376, 94, 0, 'protected ', NULL),
(377, 95, 0, 'import  ', NULL),
(378, 95, 1, 'package    ', NULL),
(379, 95, 0, 'interface   ', NULL),
(380, 95, 0, 'protected ', NULL),
(381, 96, 0, '编译时将发生错误', ''),
(382, 96, 0, '编译时正确但是运行时出错', ''),
(383, 96, 0, '输出为0 ', ''),
(384, 96, 1, '输出为null', ''),
(385, 97, 0, '运行正确，输出“65”', ''),
(386, 97, 0, '编译出错，原因是构造函数不能用private修饰', ''),
(387, 97, 1, '编译出错，原因是不能把两个short类型用“＋”相加后赋值给short类型', ''),
(388, 97, 0, '运行出错，原因是不能创建构造函数用private修饰的对象               ', ''),
(389, 98, 0, 'final关键字声明该方法是最终方法，不能被重写', NULL),
(390, 98, 0, '所谓方法的覆盖是声明一个方法与其父类中某个方法相同', NULL),
(391, 98, 0, '所谓方法的重载是多个方法可以共用一个方法名 ', NULL),
(392, 98, 1, '所谓构造方法就是类里面的第一个方法', NULL),
(393, 99, 1, '编译失败', ''),
(394, 99, 0, '编译成功，程序输出0 ', ''),
(395, 99, 0, '编译成功，程序输出1 ', ''),
(396, 99, 0, '编译成功，程序输出2', ''),
(397, 100, 0, 'FlowLayout布局方式', NULL),
(398, 100, 1, 'BorderLayout布局方式', NULL),
(399, 100, 0, 'GridLayout布局方式', NULL),
(400, 100, 0, 'CrdLayout布局方式', NULL),
(401, 101, 0, 'byte→int→short→long→float→double ', NULL),
(402, 101, 1, 'byte→short→int→long→float→double ', NULL),
(403, 101, 0, 'byte→short→int→float→long→double', NULL),
(404, 101, 0, 'short→byte→int→long→float→double    ', NULL),
(405, 102, 0, 'flash（）', NULL),
(406, 102, 1, 'flush（）', NULL),
(407, 102, 0, 'write（）', NULL),
(408, 102, 0, 'read（） ', NULL),
(409, 103, 0, 'flash（）', NULL),
(410, 103, 1, 'flush（）', NULL),
(411, 103, 0, 'write（）', NULL),
(412, 103, 0, 'read（） ', NULL),
(413, 104, 0, 'catch', NULL),
(414, 104, 1, 'throw', NULL),
(415, 104, 0, 'try', NULL),
(416, 104, 0, 'finally ', NULL),
(417, 105, 1, 'java中不能强制垃圾回收 ', NULL),
(418, 105, 0, '调用System.gc（）方法 ', NULL),
(419, 105, 0, '调用Runtime.gc（）方法 ', NULL),
(420, 105, 0, '将针对对象的引用设为null', NULL),
(421, 106, 0, '编译错误', ''),
(422, 106, 0, 'True', ''),
(423, 106, 1, 'False', ''),
(424, 106, 0, '抛出异常', ''),
(425, 107, 0, 'ab', NULL),
(426, 107, 0, '$_3 ', NULL),
(427, 107, 1, '3ab', NULL),
(428, 107, 0, 'ab32', NULL),
(429, 108, 0, '1', ''),
(430, 108, 0, '0', ''),
(431, 108, 0, 'true', ''),
(432, 108, 1, 'false', ''),
(433, 109, 0, '12', NULL),
(434, 109, 0, '18', NULL),
(435, 109, 0, '9', NULL),
(436, 109, 1, '15', NULL),
(437, 110, 0, '1', NULL),
(438, 110, 1, '2', NULL),
(439, 110, 0, '3', NULL),
(440, 110, 0, '4', NULL),
(441, 111, 1, 'arr[0]==0', NULL),
(442, 111, 0, 'arr[0]==01 ', NULL),
(443, 111, 0, 'arr[1]==1', NULL),
(444, 111, 0, 'arr[2]==0 ', NULL),
(445, 112, 1, 'public  ', NULL),
(446, 112, 0, 'private   ', NULL),
(447, 112, 0, 'protected   ', NULL),
(448, 112, 0, 'default ', NULL),
(449, 113, 1, 'BorderLayout  ', NULL),
(450, 113, 0, 'GridLayout   ', NULL),
(451, 113, 0, 'FlowLayout    ', NULL),
(452, 113, 0, 'GridbagLayout ', NULL),
(453, 114, 0, 'sleep(1.5)', NULL),
(454, 114, 1, 'sleep(1500) ', NULL),
(455, 114, 0, 'suspend(1.5) ', NULL),
(456, 114, 0, 'suspend(1500)', NULL),
(457, 115, 0, '发送“再见”信息', NULL),
(458, 115, 0, '直接退出程序 ', NULL),
(459, 115, 1, '调用方法close()关闭套接字连接', NULL),
(460, 115, 0, '重新启动计算机以断开通信连接', NULL),
(461, 116, 0, 'DataInput   ', NULL),
(462, 116, 0, 'DataOutput   ', NULL),
(463, 116, 0, 'ObjectOutput   ', NULL),
(464, 116, 1, 'Serializable ', NULL),
(465, 117, 1, '编译时将产生错误', ''),
(466, 117, 0, '编译时正确，运行时将产生错误', ''),
(467, 117, 0, '输出零', ''),
(468, 117, 0, '输出空', ''),
(469, 118, 0, '无法编译，因为没有指定异常', ''),
(470, 118, 0, '无法编译，因为没有catch子句', ''),
(471, 118, 0, ' Hello world ', ''),
(472, 118, 1, 'Hello world Finally executing', ''),
(473, 119, 0, 'public  ', NULL),
(474, 119, 0, 'private    ', NULL),
(475, 119, 1, 'static   ', NULL),
(476, 119, 0, 'final ', NULL),
(477, 120, 0, 'error: cannot read:Test.java', NULL),
(478, 120, 0, '无任何显示', NULL),
(479, 120, 1, 'Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: Test', NULL),
(480, 120, 0, '程序正常执行并显示', NULL),
(486, 123, 0, 'final关键字声明该方法是最终方法，不能被重写', NULL),
(487, 123, 0, '所谓方法的覆盖是声明一个方法与其父类中某个方法相同', NULL),
(488, 123, 0, '所谓方法的重载是多个方法可以共用一个方法名', NULL),
(489, 123, 1, '所谓构造方法就是类里面的第一个方法 ', NULL),
(490, 124, 0, 'MouseListener  ', NULL),
(491, 124, 0, 'KeyListener   ', NULL),
(492, 124, 1, 'ActionListener   ', NULL),
(493, 124, 0, 'FocusListener ', NULL),
(494, 125, 0, 'public float getNum() { return 4.0f;}', ''),
(495, 125, 0, 'public double getNum(float D) { return 3.0f;}', ''),
(496, 125, 0, 'public void getNum(double D) {  }', ''),
(497, 125, 1, 'public void getNum() {   }', ''),
(498, 126, 0, 'x>=0.5', ''),
(499, 126, 0, 'x>=0.3', ''),
(500, 126, 0, 'x>=0.3', ''),
(501, 126, 1, 'x<0.5&x>=0.3 ', ''),
(502, 127, 1, 'package aa;', NULL),
(503, 127, 0, 'import java.io.*; ', NULL),
(504, 127, 0, 'class Exam ', NULL),
(505, 127, 0, '以上语句可以随意放置，没有一定的顺序 ', NULL),
(506, 128, 0, 'protected float setVar(int x,int y,float z) {return z;}', NULL),
(507, 128, 0, 'protected void setVar(int a,int b,float c) {  } ', NULL),
(508, 128, 1, 'protected int setVar(int a,int b,int c) {return a;} ', NULL),
(509, 128, 0, 'protected int setVar(int a,int b,float c) {return b;}   ', NULL),
(510, 129, 0, 'x=4,y=5\r\n       x=4,y=5\r\n', ''),
(511, 129, 0, 'x=4,y=5', ''),
(512, 129, 0, 'x=4,y=5\r\n       x=5,y=6\r\n', ''),
(513, 129, 1, 'x=5,y=6\r\n       x=6,y=7 \r\n', ''),
(514, 130, 0, 'java.awt.*;', NULL),
(515, 130, 1, 'java.awt.event.*;', NULL),
(516, 130, 0, 'javax.swing.*;', NULL),
(517, 130, 0, '以上都不是', NULL),
(518, 131, 0, 'TestStaticCode is loading\r\n       Call Custructor 1\r\n       TestStaticCode is loading\r\n       Call Custructor 2\r\n', ''),
(519, 131, 1, 'TestStaticCode is loading\r\n       Call Custructor 1\r\n       Call Custructor 2 \r\n', ''),
(520, 131, 0, 'TestStaticCode is loading ', ''),
(521, 131, 0, 'Call Custructor 1\r\n       Call Custructor 2\r\n', ''),
(522, 132, 0, 'short s=28;', NULL),
(523, 132, 0, 'char c=’1’; ', NULL),
(524, 132, 0, 'double d=2.3 ', NULL),
(525, 132, 1, 'float f=2.3 ', NULL),
(526, 133, 1, '用来表示与数据库的连接', NULL),
(527, 133, 0, '存储查询结果', NULL),
(528, 133, 0, '在指定的连接中处理SQL语句', NULL),
(529, 133, 0, '建立新数据库连接', NULL),
(530, 134, 0, 'BufferedOutputStream   ', NULL),
(531, 134, 1, 'FileInputStream   ', NULL),
(532, 134, 0, 'FileOuterStream   ', NULL),
(533, 134, 0, 'File ', NULL),
(534, 135, 1, '线程的同步', NULL),
(535, 135, 0, '线程的互斥', NULL),
(536, 135, 0, '线程的调度', NULL),
(537, 135, 0, '线程的就绪', NULL),
(538, 136, 0, '5和3', NULL),
(539, 136, 0, '5和4', NULL),
(540, 136, 0, '4和3', NULL),
(541, 136, 1, '4和5', NULL),
(542, 137, 0, 'BorderLayout   ', NULL),
(543, 137, 1, 'FlowLayout    ', NULL),
(544, 137, 0, 'GridLayout   ', NULL),
(545, 137, 0, 'CardLayout ', NULL),
(546, 138, 0, '由Java语言操作的家用设备', NULL),
(547, 138, 0, '运行Java程序所需的硬件设备', NULL),
(548, 138, 0, 'Java源代码的编译器 ', NULL),
(549, 138, 1, 'Java字节代码的解释程序', NULL),
(550, 139, 0, '源，HTML', NULL),
(551, 139, 0, 'HTML，字节代码', NULL),
(552, 139, 0, '字节代码，源', NULL),
(553, 139, 1, '源，字节代码 ', NULL),
(554, 140, 1, ' Good morning', ''),
(555, 140, 0, 'Good', ''),
(556, 140, 0, 'morning', ''),
(557, 140, 0, 'Exception raised: "java.lang.ArrayIndexOutOfBoundsException: 2" ', ''),
(558, 141, 0, '只有第1行能通过编译', ''),
(559, 141, 0, '第1、2行能通过编译，但第3行编译出错', ''),
(560, 141, 0, '第1、2、3行能通过编译，但第2、3行运行时出错', ''),
(561, 141, 1, '第1行、第2行和第3行的声明都是正确的', ''),
(562, 142, 0, '把x和y按从大到小排列', NULL),
(563, 142, 1, '交换x和y中的值 ', NULL),
(564, 142, 0, '无确定结果', NULL),
(565, 142, 0, '把x和y按从小到大排列', NULL),
(566, 143, 0, '编译错误', ''),
(567, 143, 0, '2', ''),
(568, 143, 1, '3', ''),
(569, 143, 0, '0', ''),
(570, 144, 0, 'public', NULL),
(571, 144, 1, 'static ', NULL),
(572, 144, 0, 'private', NULL),
(573, 144, 0, 'protected ', NULL),
(574, 145, 0, ' private void demo（）{...}', NULL),
(575, 145, 0, 'public int demo（）{...} ', NULL),
(576, 145, 0, 'public void demo2（）{...} ', NULL),
(577, 145, 1, 'public int demo（ int m, float f）{...}     ', NULL),
(578, 146, 1, 'default \r\n        zero\r\n', ''),
(579, 146, 0, ' zero', ''),
(580, 146, 0, 'default ', ''),
(581, 146, 0, '没有输出结果', ''),
(582, 147, 1, 'FlowLayout', NULL),
(583, 147, 0, 'CardLayout', NULL),
(584, 147, 0, 'GridLayout   ', NULL),
(585, 147, 0, 'BorderLayout ', NULL),
(586, 148, 0, 'InputEvent  ', NULL),
(587, 148, 1, 'KeyEvent   ', NULL),
(588, 148, 0, 'MouseEvent   ', NULL),
(589, 148, 0, 'WindowEvent ', NULL),
(590, 149, 0, '返回上级目录的名字', NULL),
(591, 149, 0, '删除一个文件', NULL),
(592, 149, 0, '创建目录', NULL),
(593, 149, 1, '查看一个文件包含的文本或二进制信息 ', NULL),
(594, 150, 0, '用关键字friendly修饰的成员变量和方法，称为私有变量和私有方法', NULL),
(595, 150, 0, '用关键字protected修饰的成员变量和方法，称为私有变量和私有方法', NULL),
(596, 150, 0, '用关键字public修饰的成员变量和方法，称为私有变量和私有方法 ', NULL),
(597, 150, 1, '私有变量不能在类之外通过对象直接访问，只有在本类中创建的自己对象，才能访问自己的私有变量', NULL),
(598, 151, 1, '如果修饰变量，则一旦赋了值，就等同于一个常量', NULL),
(599, 151, 0, '如果修饰方法，则该方法能在子类中被覆盖 ', NULL),
(600, 151, 0, '如果修饰类，则该类只能被一个子类继承', NULL),
(601, 151, 0, '如果修饰方法，则该方法所在的类不能被继承', NULL),
(602, 152, 0, 'PrintStream   ', NULL),
(603, 152, 0, 'DataOutputStream   ', NULL),
(604, 152, 1, 'DataInputStream', NULL),
(605, 152, 0, 'BufferedOutputStream  ', NULL),
(606, 153, 0, '线程调用start（）方法从新建状态进入就绪队列排队', NULL),
(607, 153, 0, '当run（）方法执行完毕，线程就变成死亡状态', NULL),
(608, 153, 1, '程处于新建状态时，调用isAlive（）方法返回true ', NULL),
(609, 153, 0, 'sleep方法可以暂停一个线程的执行，在适当的时候再恢复其执行 ', NULL),
(610, 154, 0, '程序编译失败', ''),
(611, 154, 0, '程序运行结果为：one.Threadtwo.Thread ', ''),
(612, 154, 1, '程序运行结果不确定', ''),
(613, 154, 0, '程序运行结果是：one.two.ThreadThread', ''),
(614, 155, 0, '所有组件都不允许附加多个监听器', NULL),
(615, 155, 1, '监听器机制允许按照我们的需要，任意调用addXxxxListener 方法多次，而且没有次序区别', NULL),
(616, 155, 0, '组件不允许附加多个监听器 ', NULL),
(617, 155, 0, '如果多个监听器加在一个组件上，那么事件只会触发一个监听器', NULL),
(618, 156, 0, 'init（）', NULL),
(619, 156, 0, 'destroy（）', NULL),
(620, 156, 0, 'paint', NULL),
(621, 156, 1, 'stop（）', NULL),
(622, 157, 0, '子类的对象创建时，先调用子类自己的构造函数，然后调用父类的构造函数', NULL),
(623, 157, 1, '子类可以通过super关键字调用父类的构造函数', NULL),
(624, 157, 0, '子类无条件地继承父类不含参数的构造函数 ', NULL),
(625, 157, 0, '父类的对象创建时，先调用父类自己的构造函数，然后调用子类的构造函数', NULL),
(626, 158, 0, 'try语句可以单独存在，不需要其他的附加语句', NULL),
(627, 158, 1, 'try语句不能单独存在，后面必须要和catch或finally语句配合使用 ', NULL),
(628, 158, 0, '在try语句后面的catch语句只能有一句', NULL),
(629, 158, 0, 'finally语句的作用是用来完成一些不能完成的工作', NULL),
(630, 159, 0, 'public class a{\r\n   private int x;\r\n   public abstract int getX();\r\n}', NULL),
(631, 159, 0, 'public abstract class a{\r\n   private int x;\r\n   public abstract int getX();\r\n   public int aMethod(){\r\n   return 0;\r\n}}', NULL),
(632, 159, 1, 'public class a{\r\n  private int x;\r\n  public int x;\r\n  public int getX(){\r\n    return x;\r\n}}', NULL),
(633, 159, 0, 'public interface interfaceA{\r\n  private int x;\r\n  public int getX(){\r\n\r\n  return x;\r\n}}', NULL),
(634, 160, 1, '3', ''),
(635, 160, 0, '4', ''),
(636, 160, 0, '5', ''),
(637, 160, 0, '6', ''),
(638, 161, 0, 'erverSocket ss = new ServerSocket(2001,&quot;localhost&quot;)', NULL),
(639, 161, 0, 'Socket ss = new Socket(2001,&quot;localhost&quot;);', NULL),
(640, 161, 0, 'Socket ss = new Socket(2001); ', NULL),
(641, 161, 1, 'ServerSocket ss = new ServerSocket(2001)', NULL),
(642, 162, 0, 'int a[][]=new int[5][5];', NULL),
(643, 162, 0, 'int [][]b=new int[5][5];', NULL),
(644, 162, 0, 'int []c[]=new int[5][5]; ', NULL),
(645, 162, 1, 'int [][]d=new int[5,5];', NULL),
(646, 163, 1, 'java.sql', NULL),
(647, 163, 0, 'java.awt', NULL),
(648, 163, 0, 'java.lang', NULL),
(649, 163, 0, 'java.swing', NULL),
(650, 164, 0, 'PaintEvent', NULL),
(651, 164, 0, 'TextEvent', NULL),
(652, 164, 1, 'ActionEvent', NULL),
(653, 164, 0, 'KeyEvent', NULL),
(654, 165, 1, 'IOException!', ''),
(655, 165, 0, 'IOException!Exception! ', ''),
(656, 165, 0, 'FileNotFoundException!IOException!', ''),
(657, 165, 0, 'otFoundException!IOException!Exception!', ''),
(658, 166, 0, '行1', ''),
(659, 166, 0, '行4', ''),
(660, 166, 0, '行6', ''),
(661, 166, 1, '行9 ', ''),
(662, 167, 0, 'x%=(k%=5) ', NULL),
(663, 167, 0, ' x%=( k-k%5)', NULL),
(664, 167, 1, '(x%=k)-(k%=5) ', NULL),
(665, 167, 0, 'x%=k-k%5', NULL),
(666, 168, 0, '编译时将产生错误', ''),
(667, 168, 0, '编译时正确，运行时将产生错误 ', ''),
(668, 168, 1, '输出0', ''),
(669, 168, 0, '输出空 ', ''),
(670, 169, 0, 'int', NULL),
(671, 169, 0, 'char', NULL),
(672, 169, 1, 'double ', NULL),
(673, 169, 0, 'short', NULL),
(674, 170, 1, 'init start paint ', NULL),
(675, 170, 0, 'start paint init', NULL),
(676, 170, 0, 'paint start init', NULL),
(677, 170, 0, 'init paint start ', NULL),
(678, 171, 0, 'A类的实例不能访问到B类的实例', NULL),
(679, 171, 0, 'A类的实例能够访问到B类一个实例的x成员', NULL),
(680, 171, 0, 'C类的实例不能访问到B类的实例', NULL),
(681, 171, 1, 'C类的实例可以访问到B类一个实例的x成员', NULL),
(682, 172, 0, 'Java类允许多继承', NULL),
(683, 172, 0, '接口和类都不允许多继承', NULL),
(684, 172, 0, '接口和类都允许多继承', NULL),
(685, 172, 1, 'Java接口允许多继承', NULL),
(686, 173, 0, 'final修饰的变量，在程序中可对这个变量的值进行更改', NULL),
(687, 173, 0, 'abstract可修饰类、属性、方法', NULL),
(688, 173, 0, '定义抽象方法需有方法的返回类型、名称、参数列表和方法体', NULL),
(689, 173, 1, 'final可修饰类、属性、方法 ', NULL),
(690, 174, 0, '实例变量是类的成员变量', NULL),
(691, 174, 0, '在方法中定义的局部变量在该方法被执行时创建', NULL),
(692, 174, 0, '类变量用关键字static声明', NULL),
(693, 174, 1, '局部变量在使用前不需要被初始化', NULL),
(694, 175, 0, '1、2、3、4', ''),
(695, 175, 0, '1、3、2、4', ''),
(696, 175, 1, '3、1、4、2 ', ''),
(697, 175, 0, '1、3、4、2 ', ''),
(698, 176, 0, 'Button  ', NULL),
(699, 176, 1, 'Label   ', NULL),
(700, 176, 0, 'TextField   ', NULL),
(701, 176, 0, 'Checkbox ', NULL),
(702, 177, 0, '只会捕获个别类型的异常', NULL),
(703, 177, 0, '忽略一些异常', NULL),
(704, 177, 1, '捕获try块中产生的所有类型的异常', NULL),
(705, 177, 0, '执行一些程序', NULL),
(706, 178, 0, 'Java语言是面向对象的、解释执行的网络编程语言', NULL),
(707, 178, 0, 'Java语言具有可移植性，是与平台无关的编程语言', NULL),
(708, 178, 1, 'Java语言不能对内存垃圾自动收集', NULL),
(709, 178, 0, 'Java语言编写的程序虽然是“一次编译，到处运行”，但必须要有Java的运行环境', NULL),
(710, 179, 1, 'ItemListener', NULL),
(711, 179, 0, 'ActionListener', NULL),
(712, 179, 0, 'KeyListener', NULL),
(713, 179, 0, 'MouseListener', NULL),
(714, 180, 1, 'java.lang.Object', NULL),
(715, 180, 0, 'java.lang.Class', NULL),
(716, 180, 0, 'java.applet.Applet', NULL),
(717, 180, 0, 'java.awt.Frame', NULL),
(718, 181, 0, 'init（）', NULL),
(719, 181, 0, 'destroy（）', NULL),
(720, 181, 1, 'start（）', NULL),
(721, 181, 0, 'stop （）', NULL),
(722, 182, 0, 'abstract只能修饰类', NULL),
(723, 182, 0, 'abstract只能修饰方法', NULL),
(724, 182, 1, 'abstarct方法所在的类必须用abstract修饰 ', NULL),
(725, 182, 0, 'abstract类中必须有abstract方法', NULL),
(726, 183, 1, 'Serializable接口', NULL),
(727, 183, 0, 'java.io.Externalizable接口', NULL),
(728, 183, 0, 'java.io.DataInput接口', NULL),
(729, 183, 0, 'DataOutput接口', NULL),
(730, 184, 0, 'java.lang包', NULL),
(731, 184, 0, 'java.io包', NULL),
(732, 184, 1, 'java.awt包', NULL),
(733, 184, 0, 'java.util包', NULL),
(734, 185, 0, '行8', ''),
(735, 185, 0, '行9', ''),
(736, 185, 0, '行10', ''),
(737, 185, 1, '行11 ', ''),
(738, 186, 0, 'start   ', NULL),
(739, 186, 1, 'run   ', NULL),
(740, 186, 0, 'init   ', NULL),
(741, 186, 0, 'stop ', NULL),
(742, 187, 0, '参数名不同', NULL),
(743, 187, 0, '返回值类型不同', NULL),
(744, 187, 0, '调用时用类名或对象名做前缀', NULL),
(745, 187, 1, '采用不同的参数列表', NULL),
(746, 188, 0, 'abstract final class HI{}', NULL),
(747, 188, 0, 'abstract private move（）{}', NULL),
(748, 188, 0, 'protected private number;', NULL),
(749, 188, 1, 'public abstract class Car{} ', NULL),
(750, 189, 0, '88 33 10 5 2', NULL),
(751, 189, 0, '2 5 33 88 10 ', NULL),
(752, 189, 1, '2 5 10 33 88', NULL),
(753, 189, 0, '2 5 33 10 88', NULL),
(754, 190, 0, '试图添加一个重复的元素时，会抛出一个异常', NULL),
(755, 190, 0, '编译的时候，重复的元素会导致错误', NULL),
(756, 190, 0, '一个Set可以包含重复元素 ', NULL),
(757, 190, 1, '试图添加一个重复的元素时，重复元素将不能被加入', NULL),
(758, 191, 0, '每次读入的字节数不同', NULL),
(759, 191, 0, '前者带有缓冲，后者没有', NULL),
(760, 191, 1, '前者是字符读写，后者是字节读写', NULL),
(761, 191, 0, '二者没有区别，可以互换使用', NULL),
(762, 192, 0, 'class中的构造方法不可省略', NULL),
(763, 192, 0, '构造方法必须与class同名，但成员方法不能与class同名', NULL),
(764, 192, 1, '构造方法在一个对象被new时执行', NULL),
(765, 192, 0, '一个class只能定义一个构造方法 ', NULL),
(766, 193, 0, '312', ''),
(767, 193, 0, '32', ''),
(768, 193, 0, '432', ''),
(769, 193, 1, '132', ''),
(770, 194, 0, '创建C:\\test.dat ', ''),
(771, 194, 1, '删除C:\\test.dat', ''),
(772, 194, 0, '打开C:\\test.dat文件输出流', ''),
(773, 194, 0, '移动C:\\test.dat', ''),
(774, 195, 0, '多重的', NULL),
(775, 195, 1, '单重的', NULL),
(776, 195, 0, '线程的', NULL),
(777, 195, 0, '不能继承 ', NULL),
(778, 196, 0, '0', ''),
(779, 196, 0, '2', ''),
(780, 196, 0, '4', ''),
(781, 196, 1, '10', ''),
(782, 197, 0, '1', NULL),
(783, 197, 1, '4', NULL),
(784, 197, 0, '2', NULL),
(785, 197, 0, '与机器有关', NULL),
(786, 198, 0, 'The value is 8', ''),
(787, 198, 0, 'The value is 9 ', ''),
(788, 198, 1, 'The value is 10', ''),
(789, 198, 0, 'The value is 11', ''),
(790, 199, 0, '9', NULL),
(791, 199, 1, '12', NULL),
(792, 199, 0, '15', NULL),
(793, 199, 0, '18', NULL),
(794, 200, 0, '1', NULL),
(795, 200, 0, '23', NULL),
(796, 200, 0, '18', NULL),
(797, 200, 1, '7', NULL),
(798, 201, 1, '一个类中可以没有main()方法', NULL),
(799, 201, 0, '所有对象都必须放在main()方法中 ', NULL),
(800, 201, 0, 'main()方法必须放在公共类中 ', NULL),
(801, 201, 0, 'main()方法头的定义可以根据情况任意修改', NULL),
(802, 202, 1, 'final  ', NULL),
(803, 202, 0, 'finally   ', NULL),
(804, 202, 0, 'const   ', NULL),
(805, 202, 0, 'define ', NULL),
(806, 203, 0, 'x为类变量，y为实例变量', NULL),
(807, 203, 0, 'x,y均为类变量', NULL),
(808, 203, 0, 'x,y均为实例变量 ', NULL),
(809, 203, 1, 'x为实例变量,y为类变量', NULL),
(810, 204, 0, 'Person(n,a);', ''),
(811, 204, 0, 'this(Person(n,a)); ', ''),
(812, 204, 1, 'this(n,a);', ''),
(813, 204, 0, 'this(name,age)', ''),
(814, 205, 1, '2', NULL),
(815, 205, 0, '3', NULL),
(816, 205, 0, '4', NULL),
(817, 205, 0, '5', NULL),
(818, 206, 0, '$employee', NULL),
(819, 206, 0, 'OneUser ', NULL),
(820, 206, 1, '*point ', NULL),
(821, 206, 0, '_endline', NULL),
(822, 207, 0, 'update()', NULL),
(823, 207, 1, 'paint() ', NULL),
(824, 207, 0, 'init() ', NULL),
(825, 207, 0, 'repaint()', NULL),
(826, 208, 1, 'North or South', NULL),
(827, 208, 0, 'East or West', NULL),
(828, 208, 0, 'Center ', NULL),
(829, 208, 0, 'North,South or Center A ', NULL),
(830, 209, 0, 'TextListener', NULL),
(831, 209, 1, 'ActionListener ', NULL),
(832, 209, 0, 'MouseListener', NULL),
(833, 209, 0, 'ComponentListener', NULL),
(834, 210, 0, 'addLine()', NULL),
(835, 210, 1, 'addSeparator() ', NULL),
(836, 210, 0, 'insertLine()', NULL),
(837, 210, 0, 'insertItem(String)', NULL),
(838, 211, 0, 'setShape', NULL),
(839, 211, 0, 'setCrosshair', NULL),
(840, 211, 1, 'setCursor', NULL),
(841, 211, 0, 'setWait', NULL),
(842, 212, 0, 'init()', NULL),
(843, 212, 0, 'stop()', NULL),
(844, 212, 1, 'sleep()', NULL),
(845, 212, 0, 'start()', NULL),
(846, 213, 1, 'int t1[][]={{1,2},{3,4},{5,6}};', NULL),
(847, 213, 0, 'int t2[][]={1,2,3,4,5,6}; ', NULL),
(848, 213, 0, 'int t3[3][2]={1,2,3,4,5,6};', NULL),
(849, 213, 0, 'int t4[][]; t4={1,2,3,4,5,6};', NULL),
(850, 214, 0, 'DataSocket', NULL),
(851, 214, 0, 'DatagramSocket', NULL),
(852, 214, 0, 'DataPacket ', NULL),
(853, 214, 1, 'DatagramPacket', NULL),
(854, 215, 1, 'java.lang.Object', NULL),
(855, 215, 0, 'java.lang.Class', NULL),
(856, 215, 0, 'java.applet.Applet', NULL),
(857, 215, 0, 'java.awt.Frame', NULL),
(858, 216, 0, 'stop()', NULL),
(859, 216, 0, 'start()', NULL),
(860, 216, 0, 'init() ', NULL),
(861, 216, 1, 'play() ', NULL),
(862, 217, 0, 'InterruptedException', NULL),
(863, 217, 0, 'NoSuchFieldException', NULL),
(864, 217, 0, 'RuntimeException', NULL),
(865, 217, 1, 'FileNotFoundException', NULL),
(866, 218, 1, '类FilelnputStream和FileOutputStream用来进行文件I/O处理，由它们所提供的方法可以打开本地主机上的文件，并进行顺序的读/写', NULL),
(867, 218, 0, '通过类File的实例或者一个表示文件名称的字符串可以生成文件输入/输出流，在流对象生成的同时，文件被打开，但还不能进行文件读/写', NULL),
(868, 218, 0, '对于InputStream和OutputStream来说，它们的实例都是非顺序访问流，即只能进行非顺序的读/写 ', NULL),
(869, 218, 0, '当从标准输入流读取数据时，从键盘输入的数据直接输入到程序中', NULL),
(870, 219, 0, 'String s = &quot;Gone with the wind&quot;; \r\n       String t = &quot; good &quot;; \r\n       String k = s + t; \r\n', NULL),
(871, 219, 1, 'String s = &quot;Gone with the wind&quot;; \r\n       String t; \r\n       t = s[3] + &quot;one&quot;;\r\n', NULL),
(872, 219, 0, 'String s = &quot;Gone with the wind&quot;; \r\n       String standard = s.toUpperCase(); \r\n', NULL),
(873, 219, 0, 'String s = &quot;home directory&quot;; \r\n       String t = s+5;', NULL),
(874, 220, 0, '第2行', ''),
(875, 220, 0, '第3行 ', ''),
(876, 220, 0, '第6行 ', ''),
(877, 220, 1, '第7行', ''),
(878, 221, 0, '第2行', ''),
(879, 221, 0, '第3行 ', ''),
(880, 221, 0, '第6行 ', ''),
(881, 221, 1, '第7行', ''),
(882, 222, 0, 'transient   ', NULL),
(883, 222, 1, 'synchronized   ', NULL),
(884, 222, 0, 'serialize', NULL),
(885, 222, 0, 'static ', NULL),
(886, 223, 0, '程序开发者必须自己创建一个线程进行内存释放的工作', NULL),
(887, 223, 1, '垃圾收集将检查并释放不再使用的内存', NULL),
(888, 223, 0, '垃圾收集允许程序开发者明确指定并立即释放该内存', NULL),
(889, 223, 0, '垃圾收集能够在期望的时间释放被java对象使用的内存', NULL),
(890, 224, 0, 'skipBytes()', NULL),
(891, 224, 1, 'seek() ', NULL),
(892, 224, 0, 'moveBytes()', NULL),
(893, 224, 0, 'seekBytes()', NULL),
(894, 225, 1, 'condition 1 \r\nfinally', ''),
(895, 225, 0, 'finally', ''),
(896, 225, 0, 'condition 1\r\n       condition 2\r\n       condition 3 \r\n', ''),
(897, 225, 0, 'finally', ''),
(898, 226, 1, '在Java中只允许单一继承', NULL),
(899, 226, 0, '在Java中一个类只能实现一个接口', NULL),
(900, 226, 0, '在Java中一个类不能同时继承一个类和实现一个接口 ', NULL),
(901, 226, 0, 'Java的多重继承使代码更可靠', NULL),
(902, 227, 0, '第4行', ''),
(903, 227, 0, '第6行', ''),
(904, 227, 1, '第7行', ''),
(905, 227, 0, '第8行', ''),
(906, 228, 0, '8位', NULL),
(907, 228, 1, '16位', NULL),
(908, 228, 0, '32位', NULL),
(909, 228, 0, '与机器有关', NULL),
(910, 229, 1, 'final类 ', NULL),
(911, 229, 0, 'abstract类', NULL),
(912, 229, 0, 'public类', NULL),
(913, 229, 0, '用户自定义类', NULL),
(914, 230, 0, 'JFrame  ', NULL),
(915, 230, 0, 'JApplet', NULL),
(916, 230, 0, 'JDialog', NULL),
(917, 230, 1, 'JMenu ', NULL),
(918, 231, 0, '死亡状态', NULL),
(919, 231, 0, '开始状态', NULL),
(920, 231, 1, '就绪状态', NULL),
(921, 231, 0, '运行状态 ', NULL),
(922, 232, 0, '0', NULL),
(923, 232, 0, '12', NULL),
(924, 232, 1, '8', NULL),
(925, 232, 0, '13', NULL),
(926, 233, 0, 'byte', NULL),
(927, 233, 1, 'long', NULL),
(928, 233, 0, 'char', NULL),
(929, 233, 0, 'int', NULL),
(930, 234, 0, '8', ''),
(931, 234, 1, '6', ''),
(932, 234, 0, '7', ''),
(933, 234, 0, 'True', ''),
(934, 235, 0, 'public  ', NULL),
(935, 235, 0, 'private   ', NULL),
(936, 235, 1, 'protected   ', NULL),
(937, 235, 0, '&lt;无修饰&gt;', NULL),
(938, 236, 0, 'java.util ', NULL),
(939, 236, 1, 'java.io', NULL),
(940, 236, 0, 'java.applet', NULL),
(941, 236, 0, 'java.awt ', NULL),
(942, 237, 0, '消息', NULL),
(943, 237, 1, '模块', NULL),
(944, 237, 0, '继承', NULL),
(945, 237, 0, '多态性', NULL),
(946, 238, 0, 'int intArray [ ];  intArray=new int[5];', NULL),
(947, 238, 0, 'int intArray [ ]=new int[5]; ', NULL),
(948, 238, 0, 'int [ ] intArray ={1，2，3，4，5};', NULL),
(949, 238, 1, 'int intArray [5]={1，2，3，4．5};', NULL),
(950, 239, 0, '0122345', ''),
(951, 239, 0, '234567892345 ', ''),
(952, 239, 0, '012234 ', ''),
(953, 239, 1, '23456789234', ''),
(954, 240, 0, 'start（）', NULL),
(955, 240, 0, 'init（）', NULL),
(956, 240, 1, 'resume（）', NULL),
(957, 240, 0, 'run（） ', NULL),
(958, 241, 0, 'u.x=v.y;u.y=v.x;', ''),
(959, 241, 1, 'u=v;', ''),
(960, 241, 0, 'u.copy(v);', ''),
(961, 241, 0, 'v.copy(u)', ''),
(962, 242, 0, 'u.x=v.y;u.y=v.x;', ''),
(963, 242, 1, 'u=v;', ''),
(964, 242, 0, 'u.copy(v);', ''),
(965, 242, 0, 'v.copy(u)', ''),
(966, 243, 1, 'Swing是AWT的提高和扩展', NULL),
(967, 243, 0, '在写GUI程序时，AWT和Swing不能同时使用', NULL),
(968, 243, 0, 'AWT和Swing在不同的平台上都有相同的表示', NULL),
(969, 243, 0, 'AWT中的类是从Swing继承的', NULL),
(970, 244, 1, 'BufferedReader类和BufferedWriter类', NULL),
(971, 244, 0, 'InputStream类和OutputStream类', NULL),
(972, 244, 0, 'FileReader类和FileWriter类 ', NULL),
(973, 244, 0, 'File_Reader类和File_Writer类', NULL),
(974, 245, 1, 'BufferedReader类和BufferedWriter类', NULL),
(975, 245, 0, 'InputStream类和OutputStream类', NULL),
(976, 245, 0, 'FileReader类和FileWriter类 ', NULL),
(977, 245, 0, 'File_Reader类和File_Writer类', NULL),
(978, 246, 0, '声明Thread类的子类，创建Thread子类的实例，让线程调用start()方法', NULL),
(979, 246, 0, '声明Thread类的子类，在子类中重新定义run()方法，创建Thread子类的实例', NULL),
(980, 246, 0, '创建Thread子类的实例，让线程调用start()方法', NULL),
(981, 246, 1, '声明Thread类的子类，在子类中重新定义run()方法，创建Thread子类的实例，让线程调用start()方法', NULL),
(982, 247, 0, 'x、y和s都是成员变量', ''),
(983, 247, 1, 'x、y和s都是成员变量', ''),
(984, 247, 0, 'x和y是实例变量、s是参数', ''),
(985, 247, 0, 'x、y和s都是实例变', ''),
(986, 248, 0, 'x、y和s都是成员变量', ''),
(987, 248, 1, 'x、y和s都是成员变量', ''),
(988, 248, 0, 'x和y是实例变量、s是参数', ''),
(989, 248, 0, 'x、y和s都是实例变', ''),
(990, 249, 0, 'line 1', ''),
(991, 249, 0, 'line 2', ''),
(992, 249, 1, 'line 5', ''),
(993, 249, 0, 'line 8', ''),
(994, 250, 0, '编译时将发生错误', ''),
(995, 250, 0, '编译时正确但是运行时出错', ''),
(996, 250, 1, '输出为0', ''),
(997, 250, 0, '输出为null', ''),
(998, 251, 0, 'int addValue( int a, int b ){// do something...} ', ''),
(999, 251, 1, 'public void addValue (int x){// do something...} ', ''),
(1000, 251, 0, 'public void addValue( int x,int y ){// do something...} ', ''),
(1001, 251, 0, 'public int addValue( int a, int b )throws Exception {//do something...} ', ''),
(1002, 252, 0, 'package testpachage;\r\npublic class Test{//do something...}', NULL),
(1003, 252, 1, 'import java.io.*;\r\npackage testpackage;\r\npublic class Test{//do something...}', NULL),
(1004, 252, 0, 'import java.io.*\r\nclass Person{//do something...}\r\npublic class Test{//do something...}', NULL),
(1005, 252, 0, 'import java.io.*;\r\nimport java,awt.*;\r\npublic class Test{//do something...}', NULL),
(1006, 253, 1, '\'8\'', ''),
(1007, 253, 0, '53', ''),
(1008, 253, 0, '8', ''),
(1009, 253, 0, '56', ''),
(1010, 254, 0, '采用不同的形式参数列表', NULL),
(1011, 254, 0, '返回值类型不同', NULL),
(1012, 254, 0, '调用时用类名或对象名做前缀', NULL),
(1013, 254, 1, '参数名不同 ', NULL),
(1014, 255, 0, 'condition 1\r\n       finally\r\n', ''),
(1015, 255, 0, 'condition 1\r\n       condition 2\r\n       finally \r\n', ''),
(1016, 255, 1, 'condition 3\r\n       finally \r\n', ''),
(1017, 255, 0, 'finally ', ''),
(1018, 256, 0, '编译时出错', ''),
(1019, 256, 0, 'south\r\n        east ', ''),
(1020, 256, 0, 'south to north\r\n　　    east to west ', ''),
(1021, 256, 1, 'south\r\n        east to west ', ''),
(1022, 257, 0, '2个按钮并排占据整个窗体，左边是Hello按钮，右边是Bye按钮', ''),
(1023, 257, 0, 'Hello按钮占据整个窗体 ', ''),
(1024, 257, 1, 'Bye按钮占据整个窗体 ', ''),
(1025, 257, 0, 'ello和Bye按钮都位于窗体的上部 ', ''),
(1026, 258, 1, 'final可修饰类、属性、方法', NULL),
(1027, 258, 0, 'abstract可修饰类、属性、方法', NULL),
(1028, 258, 0, '定义抽象方法需有方法的返回类型、名称、参数列表和方法体', NULL),
(1029, 258, 0, '用final修饰的变量，在程序中可对这个变量的值进行更改 ', NULL),
(1030, 259, 0, 'ClassNotFoundException', NULL),
(1031, 259, 0, 'IOException ', NULL),
(1032, 259, 0, 'FileNotFoundException', NULL),
(1033, 259, 1, 'UnknownHostException', NULL),
(1034, 260, 0, '试图添加一个重复的元素时，会抛出一个异常', NULL),
(1035, 260, 1, '试图添加一个重复的元素时，重复元素将不能被加入', NULL),
(1036, 260, 0, '一个set可以包含重复元素', NULL),
(1037, 260, 0, '编译的时候，重复的元素会导致错误', NULL),
(1038, 261, 0, 'StringBuffer x=new StringBuffer(“test”);\r\n       if(x.equals(“test”))', NULL),
(1039, 261, 0, 'StringBuffer x=new StringBuffer(“test”);\r\n       StringBuffer y=new StringBuffer(“test”);\r\n       if(x==y) ', NULL),
(1040, 261, 1, 'StringBuffer x=new StringBuffer(“test”);\r\n       StringBuffer y=new StringBuffer(“test”);\r\n       if(x.toString().equals(y.toString()));', NULL),
(1041, 261, 0, '以上都不对', NULL),
(1042, 262, 0, '1111111', NULL),
(1043, 262, 0, '2222222', NULL),
(1044, 262, 1, '3333333', NULL),
(1045, 262, 0, '44444444', NULL);

-- --------------------------------------------------------

--
-- 表的结构 `select_question`
--

CREATE TABLE `select_question` (
  `id` int(10) UNSIGNED NOT NULL COMMENT '主键',
  `subject` varchar(50) NOT NULL COMMENT '科目',
  `type` varchar(4) NOT NULL COMMENT '单多',
  `title` text NOT NULL COMMENT '题目',
  `memo` varchar(50) DEFAULT NULL COMMENT '备注'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `select_question`
--

INSERT INTO `select_question` (`id`, `subject`, `type`, `title`, `memo`) VALUES
(14, 'php', '单', '下列属于Java应用程序入口方法的是（     ）', NULL),
(15, 'java', '单', '下列选项中属于Java中不合法标识符的是（      ）', NULL),
(16, 'java', '单', '下列布局管理器按钮中，位置有可能会根据Frame的大小改变而改变的是（      ）', NULL),
(17, 'java', '单', '在Java中，int数据类型所占的位数为 (        )', NULL),
(18, 'java', '单', '下列程序段的输出结果是 （      ）<br/>\r\nint a=10,b=4,c=20,d=6;<br/>\r\nSystem.out.println(a++*b+c*--d);<br/>', NULL),
(19, 'java', '单', '已知类关联如下： <br/>\r\nclass Employee{ } <br/>\r\nclass Manager extends Employee{ } <br/>\r\nclass Director extends Employee{ } <br/>\r\n则下列关于创建对象的语句正确的是（      ）<br/>', NULL),
(20, 'java', '单', '下列关于事件监听的说法中正确的是 （      ）。', NULL),
(21, 'java', '单', '下列关键字中不是用来控制对类成员访问的是（      ）。', NULL),
(22, 'java', '单', '下面程序段执行后输出的结果是（      ）<br/>\r\nStringBuffer buf=new StringBuffer("China2011"); <br/>\r\nbuf.insert(5,"@"); <br/>\r\nSystem.out.println(buf.toString());<br/>', NULL),
(23, 'java', '单', '有整型数组：int[] x={4,33,99,5,10}；则调用方法 Arrays.sort(x) 后，数组x中的元素值依次是（      ）', NULL),
(24, 'java', '单', '在一个类设计中，其中的一些类成员变量需要保证只能够被同类和相同的包中的其他类访问，那么应使用的访问控制符是(        )', NULL),
(25, 'java', '单', '下列类声明正确的是（      ）', NULL),
(26, 'java', '单', '已知A类被打包在packageA ，B类被打包在packageB ，且B类被声明为public ，并有一个成员变量x被声明为protected控制方式。C类也位于packageA包，且继承了B类。则下列说法中正确的是（      ）', NULL),
(27, 'java', '单', '下列系统定义的异常中，有可能是网络原因导致的异常是（      ）', NULL),
(28, 'java', '单', '在命令行输入：java myprog hello world 运行以下代码，则输出结果是（      ）<br/>\r\n<pre>\r\npublic class myprog{\r\n    public static void main(String args[]){\r\n    System.out.println(args[2]);\r\n  }\r\n}\r\n</pre>', NULL),
(29, 'java', '单', '编译和运行下列代码后显示的结果是（      ）。<br/>\r\n import java.awt.*;<br/>\r\npublic class Butt extends Frame{<br/>\r\n    Butt(){<br/>\r\nButton HelloBut=new Button("Hello");<br/>\r\nButton ByeBut=new Button("Bye");<br/>\r\nadd(HelloBut);<br/>\r\nadd(ByeBut);<br/>\r\nsetSize(300,300);<br/>\r\nsetVisible(true);<br/>\r\n    }<br/>\r\n    public static void main(String argv[]){<br/>\r\nButt MyBut=new Butt();<br/>\r\n    }<br/>\r\n}<br/>', NULL),
(30, 'java', '单', '执行完代码int[ ] x = new int[31];后，下列选项中正确的是（      ）', NULL),
(31, 'java', '单', '关于以下代码，下列选项中说法正确的是（      ）。<br/>\r\nimport java.io.*;<br/>\r\nclass ExBase{<br/>\r\n    abstract public void martley(){    <br/>   \r\n    }<br/>\r\n}<br/>\r\npublic class MyEx extends ExBase{<br/>\r\n    public static void main(String argv[]){<br/>\r\n        DataInputStream fi = new DataInputStream(System.in);<br/>\r\n        try{<br/>\r\n     fi.readChar();<br/>\r\n        }catch(IOException e){<br/>\r\n     System.exit(0);<br/>\r\n        }<br/>\r\n        finally {System.out.println("Doing finally");}<br/>\r\n    }<br/>\r\n}  <br/>', NULL),
(32, 'java', '单', '在switch（expression）语句中，expression的数据类型不能是（      ）', NULL),
(33, 'java', '单', '为了使包com.org在当前程序中可见，可以使用的语句是（      ）', NULL),
(34, 'java', '单', '下列说法中正确的是（      ）', NULL),
(35, 'java', '单', '下列属于Runnable接口中抽象方法的是（      ）', NULL),
(36, 'java', '单', '下列程序段输出的结果是（      ）。<br/>\r\nclass MyThread extends Thread{ <br/>\r\npublic static void main(String args[]){ <br/>\r\n   MyThread t = new MyThread(); <br/>\r\n   MyThread s = new MyThread(); <br/>\r\n   t.start(); <br/>\r\n   System.out.print("one."); <br/>\r\n   s.start(); <br/>\r\n   System.out.print("two."); <br/>\r\n} <br/>\r\npublic void run(){ <br/>\r\n    System.out.print("Thread"); <br/>\r\n   } <br/>\r\n}<br/>', NULL),
(37, 'java', '单', '下列Java常见事件类中，属于窗体事件类的是（      ）', NULL),
(38, 'java', '单', '下列选项中属于过滤流FilterInputStream的子类的是（      ）', NULL),
(39, 'java', '单', '任何一个Applet开始执行时必然会被自动调用三个方法，这三个方法被调用的顺序依次是（      ）', NULL),
(40, 'java', '单', '在Java语言网络编程中，URL类是在java.net包中，该类中提供了许多方法用来访问URL对象的各种资源，下列选项中可用来获取URL中端口号的是（      ）', NULL),
(41, 'java', '单', '为了区分重载多态中同名的不同方法，要求（      ）', NULL),
(42, 'java', '单', '创建一个类，来存储唯一的对象元素，元素不需要保持特定顺序，但是必须唯一，最能满足这种要求的接口是（      ）', NULL),
(43, 'java', '单', '下列有关子类继承父类构造函数的描述中正确的是（      ）', NULL),
(44, 'java', '单', '下列数组初始化形式正确的是（     ）', NULL),
(45, 'java', '单', '下列语句序列执行后，x 的值是（     ）。<br/>\r\nint a=3, b=4, x=5; <br/>\r\nif( ++a==b ) x=++a*x; <br/>\r\n', NULL),
(46, 'java', '单', '下列程序执行后，输出结果是（     ）。<br/>\r\nint x = 4;<br/>\r\nint y = 3;<br/>\r\nSystem.out.println(x+ y + "k");<br/>\r\n', NULL),
(47, 'java', '单', '编译和运行下列代码后，其显示结果是（     ）。<br/>\r\npublic class Test{<br/>\r\npublic static void main(String argv[]){<br/>\r\n  Test c=new Test();<br/>\r\n  String s=new String("ello");<br/>\r\n  c.method(s);<br/>\r\n}<br/>\r\n    public void method(String s){<br/>\r\n           char c=ˊHˊ;<br/>\r\n           c+=s;<br/>\r\n           System.out.println(c);<br/>\r\n    }<br/>\r\n}<br/>', NULL),
(48, 'java', '单', '在Java语言中，所有类的根类是（     ）。', NULL),
(49, 'java', '单', '在Java语言中，类间的继承关系是（     ）。', NULL),
(50, 'java', '单', '下列程序段执行后，其输出结果是（     ）。<br/>\r\npublic class Test{<br/>\r\npublic static void main(String[] args) throws Exception{<br/>\r\n    try{<br/>\r\n           throw new Exception();<br/>\r\n    }catch(Exception e){<br/>\r\n        System.out.println("Caught in main()");<br/>\r\n    }<br/>\r\n    System.out.println("nothing");<br/>\r\n  }<br/>\r\n}<br/>\r\n', NULL),
(51, 'java', '单', '阅读下列代码后，下列选项中说法正确的是（     ）。<br/>\r\npublic class Test { <br/>\r\n  String[] s=new String[2]; <br/>\r\n  public static void main(String args[]) <br/>\r\n  { <br/>\r\n      System.out.println(s[0]); <br/>\r\n  } <br/>\r\n}<br/>\r\n', NULL),
(52, 'java', '单', 'Applet小程序 和 Application独立程序的主要区别是（     ）。', NULL),
(53, 'java', '单', '设 String s = &quot;story&quot;; 下列选项中语句书写正确的是（     ）。', NULL),
(54, 'java', '单', '编译和运行下列代码后，其输出的结果是（     ）。<br/>\r\npublic class Test{<br/>\r\n  public static void main(String argv[]){<br/>\r\n      Test inc = new Test();<br/>\r\n      int i =0; <br/>\r\n      inc.fermin(i);<br/>\r\n      i = i++;<br/>\r\n      System.out.println(i);<br/>\r\n    }<br/>\r\n    void fermin(int i){<br/>\r\n       i++;<br/>\r\n    }<br/>\r\n}<br/>\r\n', NULL),
(55, 'java', '单', '下列关于事件监听器的描述中正确的是（     ）。', NULL),
(56, 'java', '单', '下列选项中，不属于Java关键字的是（     ）。', NULL),
(57, 'java', '单', 'Java语言中的一些低级实用工具（如处理时间的Date类，处理变长数组的Vector类等），它们所在的包是（     ）。', NULL),
(58, 'java', '单', '在Java语言中，当Set 集合遇到重复的元素时，处理的方式是（     ）', NULL),
(59, 'java', '单', '下列代码中的“this”指的是（     ）。<br/>\r\nclass Bird{<br/>\r\nint x,y;<br/>\r\nvoid fly(int x,int y){<br/>\r\n   this.x=x;<br/>\r\n   this.y=y;<br/>\r\n  }<br/>\r\n}<br/>\r\n', NULL),
(60, 'java', '单', '下列2个文件位于相同目录下，编译运行后会出现的情况是（     ）。<br/>\r\n//File P1.java<br/>\r\npackage MyPackage;<br/>\r\nclass P1{<br/>\r\n    void afancymethod(){<br/>\r\n       System.out.println("What a fancy method");<br/>\r\n    }<br/>\r\n}<br/>\r\n//File P2.java<br/>\r\npublic class P2 extends P1{<br/>\r\n    public static void main(String argv[]){<br/>\r\n         P2 p2 = new P2();<br/>\r\n         p2.afancymethod();<br/>\r\n      }<br/>\r\n}<br/>\r\n', NULL),
(61, 'java', '单', 'list是一个ArrayList的对象，下列选项中填写到//todo delete处，可以在Iterator遍历的过程中正确并安全的删除一个list中保存对象的是（     ）。<br/>\r\nIterator it = list.iterator();<br/>\r\nint index = 0;<br/>\r\nwhile(it.hasNext()){<br/>\r\n   Object obj = it.next();<br/>\r\n   if(needDelete(obj)){   //needDelete返回boolean，决定是否要删除<br/>\r\n       //todo delete<br/>\r\n   }<br/>\r\n   index ++;<br/>\r\n}<br/>\r\n', NULL),
(62, 'java', '单', '编译和运行下列代码后，其结果是（     ）。<br/>\r\npublic class Tux extends Thread{<br/>\r\nstatic String sName = "vandeleur";<br/>\r\npublic static void main(String argv[]){<br/>\r\n    Tux t = new Tux();<br/>\r\n    t.piggy(sName);<br/>\r\n    System.out.println(sName);<br/>\r\n}<br/>\r\npublic void piggy(String sName){<br/>\r\n    sName = sName + " wiggy";<br/>\r\n    start();<br/>\r\n}<br/>\r\npublic void run(){<br/>\r\n    for(int i=0;i  <  4; i++){<br/>\r\n        sName = sName + " " + i;<br/>\r\n    }<br/>\r\n  }<br/>\r\n}<br/>\r\n', NULL),
(63, 'java', '单', '下列代码行中编译时不会产生警告或错误的是（     ）。', NULL),
(64, 'java', '单', '下列程序执行后的结果是（     ）。<br/>\r\npublic class Sandys{<br/>\r\nprivate int court;<br/>\r\npublic static void main(String argv[]){<br/>\r\n         Sandys s = new Sandys(99);<br/>\r\n         System.out.println(s.court);<br/>\r\n}<br/>\r\nSandys(int ballcount){<br/>\r\n         court=ballcount;<br/>\r\n    }<br/>\r\n}<br/>\r\n', NULL),
(65, 'java', '单', '创建一个向文件“file.txt”追加内容的输出流对象的语句是（     ）。', NULL),
(66, 'java', '单', '下列选项中需要在编写程序时声明的检查型异常是（     ）。', NULL),
(67, 'java', '单', '要从文件&quot;file.dat&quot;中读出第10个字节到变量c中,下列选项中适合的方法是（     ）', NULL),
(68, 'java', '单', '类Test1、Test2定义如下：<br/>\r\n1．public  class  Test1{<br/>\r\n2． public  float  aMethod（float a，float b） throws  IOException { }<br/>\r\n3． } <br/>\r\n4． public  class  Test2  extends  Test1{<br/>\r\n5． <br/>\r\n6．}<br/>\r\n下列选项中插入行5是不合法的是（     ）。<br/>\r\n', NULL),
(69, 'java', '单', '下列选项中，可以限制一个方法重载的声明语句是（     ）。', NULL),
(70, 'java', '单', '关于下列程序段的说法中正确的是（     ）。<br/>\r\n1．  String  s1=”abc”+”def”;<br/>\r\n2．  String  s2=new  String（s1）；<br/>\r\n3．  if（s1= =s2）<br/>\r\n4．  System.out.println(“= = succeeded”);<br/>\r\n5．  if (s1.equals(s2))<br/>\r\n6．  System.out.println(“.equals()  succeeded”);<br/>\r\n', NULL),
(71, 'java', '单', '下列标识符中，不合法的是（     ）。', NULL),
(72, 'java', '单', '下列选项中关于接口的定义正确的是（     ）。', NULL),
(73, 'java', '单', '关于下列程序的功能，说法正确的是（     ）。<br/>\r\npublic class Test extends Thread{ <br/>\r\nint n; <br/>\r\nTest() { <br/>\r\n    Thread td=new Thread(this); <br/>\r\n    td.start(); <br/>\r\n} <br/>\r\npublic void run() { <br/>\r\n    for (n=0;n<4;n++) { <br/>\r\n       try { <br/>\r\n            System.out.print(n); <br/>\r\n            Thread.sleep(500); <br/>\r\n       } catch(InterruptedException e) { <br/>\r\n            System.out.println("Exception"); <br/>\r\n       } <br/>\r\n   } <br/>\r\n} <br/>\r\npublic static void main(String args[]) <br/>\r\n  { <br/>\r\n     new Test(); <br/>\r\n  } <br/>\r\n} <br/>\r\n', NULL),
(74, 'java', '单', '下列选项中，不是Java注释方式的是（     ）。', NULL),
(75, 'java', '单', '下列说法中正确的是（     ）。', NULL),
(76, 'java', '单', '若有定义int x=3,y;则执行语句y=（x++）+（x++）+（x++）;后y=（     ）', NULL),
(77, 'java', '单', '若编译一个定义了5个类和18个方法的Java源代码文件，则编译该源代码文件时会产生的字节码文件有（     ）', NULL),
(78, 'java', '单', '在Java中，switch（exp）语句的exp不能是（     ）', NULL),
(79, 'java', '单', '若有定义如下 class dog { float x; static int y;…}，则下列说法中正确的是（     ）', NULL),
(80, 'java', '单', '在JAVA中，下列关于继承的论述中错误的是（     ）。', NULL),
(81, 'java', '单', '在Java中，使一个线程进入就绪状态调用的方法是（     ）', NULL),
(82, 'java', '单', '在Java中，当服务器的套接字连接建立后，接收客户端的套接字应调用的方法是（      ）。', NULL),
(84, 'java', '单', '在Java中，连接数据库加载JDBC-ODBC桥接驱动器时，可能会发生的异常是（     ）', NULL),
(85, 'java', '单', '将一个RandomAccessFile对象中的文件指针移动到文件中的一个确定位置，应调用方法（     ）。', NULL),
(86, 'java', '单', '阅读下列代码： <br/>\r\n　　    public class Parent { <br/>\r\n　　　    public int addValue（ int a, int b）{ <br/>\r\n　　　　  　int s; <br/>\r\n　　　　  　s = a+b; <br/>\r\n　　　　  　return s; <br/>\r\n　　    　} <br/>\r\n　    　} <br/>\r\n　　    class Child extends Parent { <br/>\r\n　　    } <br/>\r\n　     下列选项中可以加入类Child的是（     ）。<br/>\r\n', NULL),
(87, 'java', '单', '列程序段执行后，其输出结果是（     ）。 <br/>\r\n    class A{<br/>\r\n       void disp（）{<br/>\r\n   System.out.println（"classA"）;<br/>\r\n       } <br/>\r\n} <br/>\r\nclass B extends A{<br/>\r\nvoid disp（）{<br/>\r\nSystem.out.println（"classB"）;<br/>\r\n}<br/>\r\npublic static void main（String[] args）{<br/>\r\nA a=new A（）;<br/>\r\nA a1=new B（）;<br/>\r\na.disp（）;<br/>\r\na1.disp（）;<br/>\r\n}<br/>\r\n}<br/>\r\n', NULL),
(88, 'java', '单', '下列程序段执行后，其输出结果是（     ）。<br/>\r\npublic class Test{<br/>\r\npublic static void throwit（）{<br/>\r\nSystem.out.print（"throwit "）; <br/>\r\nthrow new RuntimeException（）; <br/>\r\n}<br/>\r\npublic static void main（String [] aa）{<br/>\r\ntry{<br/>\r\nSystem.out.print（"hello "）;<br/>\r\nthrowit（）; <br/>\r\n}catch（Exception re）{<br/>\r\nSystem.out.print（"caught "）;  <br/>\r\n}finally{<br/>\r\nSystem.out.print（"finally "）; <br/>\r\n}<br/>\r\nSystem.out.print（"after "）;<br/>\r\n}<br/>\r\n}<br/>\r\n', NULL),
(89, 'java', '单', '在Java中，int数据类型所占的位数是（     ）。', NULL),
(90, 'java', '单', '在Java中，下列说法不正确的是（     ）。', NULL),
(91, 'java', '单', '下列程序段执行后，t5的值是（     ）。  <br/>\r\n    int t1=5,t2=6,t3=7,t4,t5;<br/>\r\n    t4=t1<t2 ? t1 : t2 ;<br/>\r\n    t5=t4<t3 ? t4 : t3;<br/>\r\n', NULL),
(92, 'java', '单', '下列程序段执行后，r的值是（     ）。<br/>\r\n  int x=5,y=10,r=5;<br/>\r\n  switch（x+y）<br/>\r\n{<br/>\r\n   case 15:   r+=x;<br/>\r\n   case 20:   r- =y;<br/>\r\n   case 25:   r*=x/y;<br/>\r\n   default:   r+=r;<br/>\r\n}<br/>\r\n', NULL),
(93, 'java', '单', '设类B是类C的父类，则下列声明对象x1的语句中不正确的是（     ）。', NULL),
(94, 'java', '单', '在Java中，定义一个包的关键字是（     ）。', NULL),
(95, 'java', '单', '在Java中，定义一个包的关键字是（     ）。', NULL),
(96, 'java', '单', '关于下列程序段，说法正确的是（     ）。<br/>\r\nclass Temp{<br/>\r\nstatic String test[]=new String[10];<br/>\r\npublic static void main（String a[]）{<br/>\r\nSystem.out.println（test[0]）;<br/>\r\n}<br/>\r\n}<br/>\r\n', NULL),
(97, 'java', '单', '下列程序段执行后，其输出的结果是（     ）。<br/>\r\npublic class Sub<br/>\r\n {<br/>\r\n   short mValue;<br/>\r\n   private Sub（short mValue）{<br/>\r\n   this.mValue=mValue;<br/>\r\n   }<br/>\r\n   void Show（）{<br/>\r\n   System.out.println（mValue）;<br/>\r\n   }<br/>\r\n  public static void main（String[] args）<br/>\r\n   {<br/>\r\nshort a =52;<br/>\r\nshort b =13;<br/>\r\nshort c=a+b;<br/>\r\nSub os = new Sub（c）;<br/>\r\nos.Show（）;<br/>\r\n}<br/>\r\n', NULL),
(98, 'java', '单', '下列说法中错误的是（     ）。', NULL),
(99, 'java', '单', '}<br/>\r\npublic class Sub extends Super{ <br/>\r\npublic Sub（String text）{ <br/>\r\ni=2; <br/>\r\n} <br/>\r\npublic static void main（String ag[]）{ <br/>\r\nSub sub=new Sub（"Hello"）; <br/>\r\nSystem.out.println（sub.i）; <br/>\r\n}<br/>\r\n}<br/>\r\n', NULL),
(100, 'java', '单', '下列选项中，属于JFrame缺省布局方式的是（     ）', NULL),
(101, 'java', '单', 'Java中数值数据的类型能自动转换，按照从左到右的转换次序是（     ）', NULL),
(102, 'java', '单', '采用缓冲式输出时，如果又想立即写入到文件，则需要调用的方法是（     ）。', NULL),
(103, 'java', '单', '采用缓冲式输出时，如果又想立即写入到文件，则需要调用的方法是（     ）。', NULL),
(104, 'java', '单', '若抛出用户自定义异常，应使用的子句是（     ）。', NULL),
(105, 'java', '单', 'Java中强制垃圾回收应使用的语句是（     ）。', NULL),
(106, 'java', '单', '以下程序的执行结果是（     ）。<br/>\r\npublic class Test{<br/>\r\n  public static void main（String args[]）{<br/>\r\n    Double x=new Double（4.0）;<br/>\r\n    Double y=new Double（4.0）;<br/>\r\n    System.out.println（x==y）;<br/>\r\n}<br/>\r\n}\r\n', NULL),
(107, 'java', '单', '下列选项中不是合法Java标识符的是（     ）。', NULL),
(108, 'java', '单', '若有定义int a=2,b=4;boolean x;<br/>\r\n则执行语句 x=a>b;System.out.println(x);的结果为（     ）。', NULL),
(109, 'java', '单', '若有定义int x=3,y;则执行语句y=(++x)+(++x)+(++x);后y的值是（     ）。', NULL),
(110, 'java', '单', '若a是int型变量，计算表达式a=25/3%3后，a为（     ）。', NULL),
(111, 'java', '单', '关于代码行int []arr={1,2,3}; for(int i=0;i&lt;2;i++) arr[i]=0 ;下列表达式中值为true的是（     ）。', NULL),
(112, 'java', '单', '下列选项中，属于接口中方法默认的访问控制方式的是（     ）。', NULL),
(113, 'java', '单', '若要在容器底端放一个按钮，且不管用户如何改变尺寸，则下列布局管理器中最简单的是（     ）。', NULL),
(114, 'java', '单', '要使一个线程放弃处理器，且休眠1.5秒，应调用的方法是（     ）。', NULL),
(115, 'java', '单', '用套接字方法建立两个程序的通信后，如果双方通信完毕，应（     ）。', NULL),
(116, 'java', '单', '如果一个用户自定义的类以对象为单位进行读写时，该类定义时应实现一个接口（     ）。', NULL),
(117, 'java', '单', '关于下列程序段，说法正确的是（     ）。<br/>\r\nclass Test{<br/>\r\nstatic int a[] = new a[10]; <br/>\r\npublic static void main(String args[]){<br/>\r\n   System.out.println(a[1]); <br/>\r\n }<br/>\r\n}<br/>\r\n', NULL),
(118, 'java', '单', '下列程序段执行后，其输出的结果是（     ）。   <br/>\r\npublic class myprogram{<br/>\r\n  public static void main (String args[]){<br/>\r\n  try{<br/>\r\n    System.out.print("Hello world "); }<br/>\r\n  finally{<br/>\r\n    System.out.println("Finally executing"); <br/>\r\n  }<br/>\r\n } <br/>\r\n}<br/>\r\n', NULL),
(119, 'java', '单', '下列修饰符修饰的变量是所有同一个类生成的对象共享的是（     ）', NULL),
(120, 'java', '单', '对一个Java源文件 Test.java，编辑保存后但未编译，在其所在目录下执行java Test，则接着会出现（     ）。', NULL),
(123, 'java', '单', '下列说法中错误的是（     ）。', NULL),
(124, 'java', '单', '下列接口在Java中不存在相对应的Adapter类的是（     ）', NULL),
(125, 'java', '单', '在下面指定位置添加下列选项中定义的方法，其中在编译时会产生错误的是（     ）。<br/>\r\npublic class C extends B<br/>\r\n{<br/>\r\n //此处添加选项中的方法<br/>\r\n}<br/>\r\nclass B<br/>\r\n{<br/>\r\n      public float getNum()<br/>\r\n     {<br/>\r\n    return 1.0f;<br/>\r\n     }<br/>\r\n}<br/>\r\n', NULL),
(126, 'java', '单', '阅读下列代码   <br/>\r\n   if (Math.random()>=0.5)  <br/>\r\n      System.out.println（”first”）;<br/>\r\n    else if (Math.random()>=0.3)  <br/>\r\n      System.out.println(“second”);<br/>\r\n假设产生的随机数为x，当它的范围为（     ）时，输出结果为second。<br/>\r\n', NULL),
(127, 'java', '单', '当一个程序中含有如下语句，则必须放在程序第一行的语句是（     ）。', NULL),
(128, 'java', '单', '若定义类A及类中的方法setVar()，则下列选项中可以对该方法重载的是（     ）。\r\n  public class A\r\n    {\r\n     public void setVar(int a,int b,float c)\r\n     {……}\r\n  }\r\n', NULL),
(129, 'java', '单', '下列程序段执行后，其输出结果是（     ）。     <br/>                                        \r\npublic class Test implements Runnable{<br/>\r\n  private int x=4;<br/>\r\n  private int y=5;<br/>\r\n  public static void main(String args[]){<br/>\r\n     Test x=new Test();<br/>\r\n     (new Thread(x)).start();<br/>\r\n     (new Thread(x)).start();<br/>\r\n}<br/>\r\npublic void run(){<br/>\r\n    x++;<br/>\r\n    y++;<br/>\r\n    System.out.println("x="+x+",y="+y);<br/>\r\n  }<br/>\r\n}<br/>\r\n', NULL),
(130, 'java', '单', '事件处理模式中提供的事件类和事件监听者在下列选项中哪个包下（     ）。', NULL),
(131, 'java', '单', '下列程序段执行后，其输出结果是（     ）。<br/>\r\nclass TestStaticCode{<br/>\r\n   static{ <br/>\r\n      System.out.println("TestStaticCode is loading"); <br/>\r\n}<br/>\r\nTestStaticCode(){<br/>\r\n      System.out.println("Call Custructor 1 ");<br/>\r\n}<br/>\r\nTestStaticCode(int a){<br/>\r\n      System.out.println("Call Custructor 2 ");<br/>\r\n}<br/>\r\npublic static void main(String [] args){ <br/>\r\n    new TestStaticCode ();<br/>\r\n    new TestStaticCode (2);<br/>\r\n  }<br/>\r\n}<br/>\r\n', NULL),
(132, 'java', '单', '下列定义方式中错误的是（     ）。', NULL),
(133, 'java', '单', '在编写访问数据库的Java程序时，Connection对象的作用是 （     ）。', NULL),
(134, 'java', '单', '下列参数中适合构造BufferedInputStream的是（     ）', NULL),
(135, 'java', '单', '当线程A使用某个对象，而此对象又需要线程B修改后才能符合A线程的需要，这时线程A就要等待线程B完成修改工作，这种现象称为（     ）。', NULL),
(136, 'java', '单', '在Java程序中有定义：int x［］［］=new int［4］［5］;则x.length和x［3］.length的值分别是（     ）。', NULL),
(137, 'java', '单', '容器Panel缺省使用的布局策略是（     ）。', NULL),
(138, 'java', '单', 'Java虚拟机指的是（     ）', NULL),
(139, 'java', '单', '在Java程序设计中，程序员创建（     ）文件，然后编译器把它们转化为（     ）文件。', NULL),
(140, 'java', '单', '运行以下代码，并在命令行输入：java MyProg “Good morning”，则输出结果是（     ）<br/>\r\npublic class MyProg{<br/>\r\n   public static main(String arg[]){<br/>\r\n      System.out.println(arg[0]) ;<br/>\r\n  }<br/>\r\n}<br/>', NULL),
(141, 'java', '单', 'A派生出子类B，B派生出子类C，并且在Java源代码中有如下声明：<br/>\r\n(1)A a0=new A();<br/>\r\n(2)A a1=new B();<br/>\r\n(3)A a2=new C();<br/>\r\n下列说法中正确的是（     ）<br/>\r\n', NULL),
(142, 'java', '单', '设x和y均为int型变量，则语句：x+=y;y=x-y;x-=y;的功能是（     ）。', NULL),
(143, 'java', '单', '下列程序段执行后，其输出的结果是（     ）。<br/>\r\nclass Test{<br/>\r\n   public static void main(String args[]){<br/>\r\n     Test inc = new Test();<br/>\r\n     int i=3;<br/>\r\n     inc.fermin(i);<br/>\r\n     i = i--;<br/>\r\n     System.out.println(i);<br/>\r\n   }<br/>\r\n   void fermin(int i){<br/>\r\n     i--;<br/>\r\n  }<br/>\r\n}<br/>', NULL),
(144, 'java', '单', '在Java语言中，不允许作为类及类成员访问的限制修饰符是（     ）。', NULL),
(145, 'java', '单', '下列选项中，属于public void demo（）{...} 的重载函数的是（     ）。', NULL),
(146, 'java', '单', '下列程序段执行后，其输出的结果是（     ）。<br/>\r\nint i=9;<br/>\r\nswitch(i){<br/>\r\n  default:<br/>\r\n    System.out.println("default");<br/>\r\n  case 0:<br/>\r\n    System.out.println("zero");<br/>\r\n    break;<br/>\r\n case 1:<br/>\r\n    System.out.println("one");<br/>\r\ncase 2:<br/>\r\n    System.out.println("two");<br/>\r\n }<br/>', NULL),
(147, 'java', '单', '下列布局管理器按钮中，位置有可能会根据Frame的大小改变而改变的是（     ）。', NULL),
(148, 'java', '单', '下列Java常见事件类中，属于键盘事件类的是（     ）', NULL),
(149, 'java', '单', '下列选项中，使用File类不可以执行的操作是（     ）', NULL),
(150, 'java', '单', '下列有关私有变量和私有方法声明的说法中，正确的是（     ）。', NULL),
(151, 'java', '单', '在Java中，下列关于final关键字的说法中正确的有（     ）', NULL),
(152, 'java', '单', '下列选项中属于过滤流FilterInputStream的子类的是（     ）', NULL),
(153, 'java', '单', '下列关于线程的叙述中错误的是（     ）。', NULL),
(154, 'java', '单', '下列程序段执行后，其输出结果是（     ）。<br/>\r\nclass MyThread extends Thread{<br/>\r\n  public static void main(String args[]){<br/>\r\n   MyThread t = new Mythread();<br/>\r\n   MyThread s = new Mythread();<br/>\r\n   t.start();<br/>\r\n   System.out.print("one");<br/>\r\n   s.start();<br/>\r\n   System.out.print("two");<br/>\r\n  }<br/>\r\n  public void run(){<br/>\r\n     System.out.println("Thread");<br/>\r\n  }<br/>\r\n}<br/>', NULL),
(155, 'java', '单', '下面关于事件监听的说法中正确的是（     ）。', NULL),
(156, 'java', '单', '当浏览器的用户离开applet所在的HTML页面时都会调用方法（     ）', NULL),
(157, 'java', '单', '下列有关子类继承父类构造函数的描述中正确的是（     ）。', NULL),
(158, 'java', '单', '下列说法中正确的是（     ）', NULL),
(159, 'java', '单', '下列关于类（接口）定义正确的是（     ）。', NULL),
(160, 'java', '单', '下列语句执行后，x 的值是（     ）。<br/>\r\nint a=5, b=4, x=3; <br/>\r\nif（a--==b） x=++a*x;<br/>\r\n', NULL),
(161, 'java', '单', '下列代码中用来实现在本地机上2001端口创建服务器套接字的是（      ）。', NULL),
(162, 'java', '单', '下列语句错误的是（     ）。', NULL),
(163, 'java', '单', '下列选项中，可以提供Java存取数据库能力的包是（     ）', NULL),
(164, 'java', '单', '当点击Applet中一个按钮控件时，下列哪个对象将会被创建（     ）', NULL),
(165, 'java', '单', 'getCustomerInfo()方法如下，try中可以捕获三种类型的异常，如果在该方法运行中产生了一个IOException，则输出的结果是（     ）。<br/>\r\npublic void getCustomerInfo(){<br/>\r\n    try{<br/>\r\n         //do something<br/>\r\n    }catch(java.io.FileNotFoundException ex){<br/>\r\n       System.out.print("FileNotFoundException!");<br/>\r\n    }catch(java.io.IOException ex){<br/>\r\n      System.out.print("IOException!");<br/>\r\n    }catch(java.lang.Exception ex){<br/>\r\n      System.out.printl("Exception!");<br/>\r\n    }<br/>\r\n}<br/>', NULL),
(166, 'java', '单', '阅读下列代码段，编译时会产生错误的段落是（     ）。<br/>\r\n1) public class Test { <br/>\r\n2) int n = 0; <br/>\r\n3) int m = 0; <br/>\r\n4) public Test(int a) { m=a; } <br/>\r\n5) public static void main(String arg[]) { <br/>\r\n6) Test t1,t2; <br/>\r\n7) int j,k; <br/>\r\n8) j=3; k=5; <br/>\r\n9) t1=new Test(); <br/>\r\n10) t2=new Test(k); <br/>\r\n11) } <br/>\r\n12) }<br/>\r\n', NULL),
(167, 'java', '单', '知有变量定义：int k=7,x=12; 则下列选项中值为3的表达式是（     ）', NULL),
(168, 'java', '单', '下列程序段执行后，其输出的结果是（     ）。<br/>\r\npublic class Person <br/>\r\n{ <br/>\r\n  static int arr[] = new int[10];<br/>\r\n  public static void main(String args[]){<br/>\r\n    System.out.println(arr[1]);<br/>\r\n    }<br/>\r\n}<br/>\r\n', NULL),
(169, 'java', '单', '在switch（expression）语句中，expression的数据类型不能是（     ）', NULL),
(170, 'java', '单', '任何一个Applet开始执行时必然会被自动调用三个方法，这三个方法被调用的顺序依次是（     ）', NULL),
(171, 'java', '单', '已知A类被打包在package A，B类被打包在package B，且B类被声明为public，有一个成员变量x被声明为protected控制方式。C类也位于package A包，且继承了B类，则下列说法中正确的是（     ）。', NULL),
(172, 'java', '单', '下列关于类继承的说法中正确的是（     ）', NULL),
(173, 'java', '单', '下列说法中正确的是（     ）', NULL),
(174, 'java', '单', '下列关于变量的叙述中错误的是（     ）', NULL),
(175, 'java', '单', '下面程序代码正确的排列顺序是（     ）。<br/>\r\n（1）import java.applet.*;<br/>\r\n（2）ex12_9_a（）<br/>\r\n（3）package myclasses;<br/>\r\n（4）public class ex12_9 extends java.applet.Applet{}<br/>\r\n', NULL),
(176, 'java', '单', '若要为应用系统设计一个图形用户界面（GUI），则下列选项中可以用来表示标题的组件是（     ）', NULL),
(177, 'java', '单', '在代码中使用catch(Exception e)的好处是（     ）', NULL),
(178, 'java', '单', '下列关于Java语言的说法中错误的是（     ）', NULL),
(179, 'java', '单', '下列选项中，可以处理下拉列表选中某一项事件的事件监听器是（     ）', NULL),
(180, 'java', '单', '在Java语言中，所有类的根类是（     ）', NULL),
(181, 'java', '单', '当浏览器重新返回Applet所在页面时，将调用Applet类的（     ）方法。', NULL),
(182, 'java', '单', '下列关于abstract的说法中正确的是（     ）', NULL),
(183, 'java', '单', '若要串行化某些类的对象，这些类就必须实现（     ）', NULL),
(184, 'java', '单', 'Java语言中建立图形用户界面GUI的工具集所在的包是（     ）', NULL),
(185, 'java', '单', ' 阅读下列代码段，编译时会产生错误的段落是（）<br/>\r\n1）class BaseClass{<br/>\r\n         public String str;<br/>\r\n         public BaseClass(){<br/>\r\n             System.out.println("ok");}<br/>\r\n         public BaseClass(String s){<br/>\r\n           str=s;}}<br/>\r\n   class SubClass extends BaseClass{<br/>\r\n   }<br/>\r\n   public class Example{<br/>\r\n       public void method(){<br/>\r\n          SubClass s = new SubClass("hello");<br/>\r\n          BaseClass = new BaseClass("world");<br/>\r\n      }<br/>\r\n   }<br/>', NULL),
(186, 'java', '单', '下列选项中属于Runnable接口中抽象方法的是（     ）', NULL),
(187, 'java', '单', '为了区分重载多态中同名的不同方法，要求（     ）', NULL),
(188, 'java', '单', '下列类声明正确的是（     ）', NULL),
(189, 'java', '单', '若有整型数组：int[] x={2,33,88,5,10};，则调用方法 Arrays.sort（x）后，数组x中的元素值依次是（     ）', NULL),
(190, 'java', '单', 'Set 集合遇到重复元素时的处理方式是（     ）', NULL),
(191, 'java', '单', 'Character流与Byte流的区别是（     ）', NULL),
(192, 'java', '单', 'Java文件被javac编译为.class后缀的字节码文件，再由JVM执行，则下列说法中正确的是（     ）', NULL),
(193, 'java', '单', '下面是People和child类的定义和构造方法，每个构造方法都输出编号。则程序段new Child("mike")的时候构造方法的调用顺序是（）。<br/>\r\nclass People{<br/>\r\n     String name;<br/>\r\n     public People(){<br/>\r\n          System.out.print(1);}<br/>\r\n     public People(String name){<br/>\r\n          System.out.print(2);<br/>\r\n          this.name = name;<br/>\r\n    }<br/>\r\n}<br/>\r\nclass Child extends People{<br/>\r\n    People father;<br/>\r\n    public Child(String name){<br/>\r\n         System.out.print(3);<br/>\r\n         this.name = name;<br/>\r\n         father = new People(name+":F");<br/>\r\n    }<br/>\r\n    public Child(){System.out.print(4);}<br/>\r\n}<br/>\r\n', NULL),
(194, 'java', '单', '下列代码片段实现的功能是（     ）。<br/>\r\nFile file = new File("C:\\\\test.dat");<br/>\r\nif (file.exists()) {<br/>\r\nfile.delete();<br/>\r\n}<br/>\r\n', NULL),
(195, 'java', '单', '在Java语言中，类间的继承关系是（     ）', NULL),
(196, 'java', '单', '阅读下列程序段，当输入2时，返回的值是（）。<br/>\r\npublic int getValue(int i){<br/>\r\n   int result=0;<br/>\r\n   switch(i){<br/>\r\n      case 1:<br/>\r\n         result = result + i ;<br/>\r\n      case 2: <br/>\r\n         result = result +i*2;<br/>\r\n      case 3:<br/>\r\n        result = result +i*3;<br/>\r\n    }<br/>\r\n    return result;<br/>\r\n }<br/>\r\n', NULL),
(197, 'java', '单', '在Java中，int型变量所占内存多少字节（     ）', NULL),
(198, 'java', '单', '当下列程序执行时，其输出结果是（     ）<br/>\r\npublic class Test{<br/>\r\n   void printVAlue(int m){<br/>\r\n   do{<br/>\r\n      System.out.println("The value is "+m);<br/>\r\n   }while(--m>10);<br/>\r\n}<br/>\r\npublic static void main(String args[]){<br/>\r\n      int i=10;<br/>\r\n      Test t = new Test();<br/>\r\n      t.printValue(i);<br/>\r\n   }<br/>\r\n} <br/>', NULL),
(199, 'java', '单', '若有定义 int x=3,y;则执行语句y=(x++)+(x++)+(x++);后y=（     ）', NULL),
(200, 'java', '单', '编译一个定义了7个类和18个方法的Java源代码文件，编译时会产生几个字节码文件（     ）', NULL),
(201, 'java', '单', '下列关于main()方法的说法中正确的是（     ）。', NULL),
(202, 'java', '单', 'Java中定义常量的修饰符为（     ）', NULL),
(203, 'java', '单', '若有类定义如下\r\n  class Dog {\r\n  float x;  \r\n  static int y;\r\n  …\r\n  }\r\n则下列说法中正确的是（     ）。\r\n', NULL),
(204, 'java', '单', '下列语句中可以加入到构造方法的划线部分的是（     ）<br/>\r\nclass Person{<br/>\r\n  String name,department;<br/>\r\n  int age;<br/>\r\n  public Person(String n){name = n;}<br/>\r\n  public Person(String n,int a){name = n;age = a;}<br/>\r\n  public Person(String n,String d,inta){<br/>\r\n        //调用构造方法Person(String n, int a)实现name=n,age=a<br/>\r\n--------------------------------------<br/>\r\n   department = d;<br/>\r\n   }<br/>\r\n}<br/>', NULL),
(205, 'java', '单', '若有定义 String tom=&quot;I am a good cat &quot;;则tom.indexOf(&quot;a&quot;)的值为（     ）', NULL),
(206, 'java', '单', '下面标识符中不合法的是（     ）', NULL),
(207, 'java', '单', '下列方法中用于显示低层次图片代码的是（     ）', NULL),
(208, 'java', '单', '当把组件放置在BorderLayout的哪个区域时，该组件可以自动调整其水平方向而非垂直方向的尺寸（     ）', NULL),
(209, 'java', '单', '下列监听器接口中不能添加到TextArea对象中的是（     ）', NULL),
(210, 'java', '单', '若要增加菜单分割线可使用方法（     ）', NULL),
(211, 'java', '单', '若要改变鼠标指针形状，可使用方法（     ）', NULL),
(212, 'java', '单', '相同优先级的若干线程都处于就绪状态，如果要使当前线程放弃处理器资源，让给其后的线程，应调用方法（     ）', NULL),
(213, 'java', '单', '下列数组初始化形式正确的是（     ）', NULL),
(214, 'java', '单', '基于UDP通信，可用类创建一个对象表示一个发送数据包，这个类是（     ）。', NULL),
(215, 'java', '单', ' 在Java语言中，所有类的根类是（     ）', NULL),
(216, 'java', '单', '要播放一个音频对象表示的音频文件，应调用的方法是（     ）', NULL),
(217, 'java', '单', '当构造一个输入流的对象时，下列选项中可能产生异常的是（     ）', NULL),
(218, 'java', '单', '下列说法中正确的是（     ）', NULL),
(219, 'java', '单', '下面的程序断可能导致错误的是（     ）', NULL),
(220, 'java', '单', '下列程序中，第十行的语句将调用哪一行的方法（     ）<br/>\r\n1)class Person{<br/>\r\n2)      public void printValue(int i,int j){/*...*/}<br/>\r\n3)      public void printValue(int i){/*...*/}<br/>\r\n4)}<br/>\r\n5)public class Teacher extends Person{<br/>\r\n6)     public void printVAlue(){/*...*/}<br/>\r\n7)     pbulic void printVAlue(int i){/*...*/}<br/>\r\n8)     public static void main(String args[]){<br/>\r\n9)          Person t = new Teacher();<br/>\r\n10)         t.printVAlue(10);<br/>\r\n11)    }<br/>\r\n12)}<br/>\r\n   ', NULL),
(221, 'java', '单', '下列程序中，第十行的语句将调用哪一行的方法（     ）<br/>\r\n1)class Person{<br/>\r\n2)      public void printValue(int i,int j){/*...*/}<br/>\r\n3)      public void printValue(int i){/*...*/}<br/>\r\n4)}<br/>\r\n5)public class Teacher extends Person{<br/>\r\n6)     public void printVAlue(){/*...*/}<br/>\r\n7)     pbulic void printVAlue(int i){/*...*/}<br/>\r\n8)     public static void main(String args[]){<br/>\r\n9)          Person t = new Teacher();<br/>\r\n10)         t.printVAlue(10);<br/>\r\n11)    }<br/>\r\n12)}\r\n   ', NULL),
(222, 'java', '单', '下列关键字中，通常用来对对象加锁，并使对该对象的访问时排他的是（     ）', NULL),
(223, 'java', '单', '下列关于垃圾收集的叙述中正确的是（     ）', NULL),
(224, 'java', '单', '将一个RandomAccessFile对象中的文件指针移动到文件中的一个确定位置，应调用方法（     ）', NULL),
(225, 'java', '单', '阅读下列程序段，在oneMethod()方法运行正常的情况下将显示（　　）<br/>\r\npublic void test(){<br/>\r\n  try{<br/>\r\n      oneMethod();<br/>\r\n      Sytem.out.println("condition 1");<br/>\r\n  }catch(ArrayIndexOutOfBoundException e){<br/>\r\n      System.out.println("condition 2");<br/>\r\n  }catch(Exception e){<br/>\r\n     System.out.println("condition 3");<br/>\r\n  }finally{<br/>\r\n     System.out.println("finally");<br/>\r\n  }<br/>\r\n}<br/>', NULL),
(226, 'java', '单', '下列关于继承的叙述中正确的是（　　）。', NULL),
(227, 'java', '单', '下列代码在编译时哪一行会产生错误（　　）。<br/>\r\n1)public void modify(){<br/>\r\n2)     int i,j,k;<br/>\r\n3)     i = 100;<br/>\r\n4)     while(i>0){<br/>\r\n5)       j = i*2;<br/>\r\n6)       System.out.println(""The value of j is " +j);<br/>\r\n7)       k = k +1;<br/>\r\n8)       i--;<br/>\r\n9)    }<br/>\r\n10)}<br/>\r\n', NULL),
(228, 'java', '单', 'Java语言中，char类型占用的二进制位数是（     ）', NULL),
(229, 'java', '单', '下列选项中，不能被再继承的类是（     ）', NULL),
(230, 'java', '单', '下列Swing提供的GUI组件类和容器类中，不属于顶层容器的是（     ）', NULL),
(231, 'java', '单', '阻塞状态的线程在消除引起阻塞的原因后，会转入（     ）', NULL),
(232, 'java', '单', '表达式 &quot;java程序设计&quot;.1ength() 的值是（     ）', NULL),
(233, 'java', '单', '在switch语句中，switch后面括号内的表达式的类型不能是(      )。', NULL),
(234, 'java', '单', '执行以下代码，其输出的结果是(      )。<br/>\r\nint x=5,y=7,u=9,v=6;<br/>\r\nSystem.out.println(x>y? x+2:u>v?u-3:v+2);<br/>\r\n', NULL),
(235, 'java', '单', 'Java语言中，只限子类或者同一包中的类能访问的访问控制符是(      )。', NULL),
(236, 'java', '单', '在Java的类库中，包含实现输入/输出操作的包是(      )。', NULL),
(237, 'java', '单', '下列选项中，不属于面向对象语言概念的是 (       )。', NULL),
(238, 'java', '单', '下列关于Java语言的语句中,错误的创建数组的方法是 (       )。', NULL),
(239, 'java', '单', '下列字符串运算代码段输出的结果是（      ）。<br/>\r\nString s = "0123456789";<br/>\r\nString s1 = s.substring(2);<br/>\r\nString s2 = s.substring(2,5);<br/>\r\nSystem.out.println(s1+2);<br/>', NULL),
(240, 'java', '单', '下列选项中，能让线程从阻塞状态恢复到就绪状态的方法是（      ）', NULL),
(241, 'java', '单', '设类U声明，及对象u和v的定义如下：<br/>\r\nclass U{<br/>\r\n  int x, int y;<br/>\r\n  U(int a,int b){x=a,y=b;}<br/>\r\n  void copy(U a){ x= a.x;y = a.y;}<br/>\r\n}<br/>\r\nU u = new U(1,2),v = new U(2,3);<br/>\r\n下列选项中，可能引起系统回收内存的是（）<br/>', NULL),
(242, 'java', '单', '设类U声明，及对象u和v的定义如下：<br/>\r\nclass U{<br/>\r\n  int x, int y;<br/>\r\n  U(int a,int b){x=a,y=b;}<br/>\r\n  void copy(U a){ x= a.x;y = a.y;}<br/>\r\n}<br/>\r\nU u = new U(1,2),v = new U(2,3);<br/>\r\n下列选项中，可能引起系统回收内存的是（）<br/>', NULL),
(243, 'java', '单', '下列关于AWT与Swing之间关系的叙述中正确的是(      )。', NULL),
(244, 'java', '单', '程序如果要按行输入输出文件的字符流，最合理的方法是采用(      )', NULL),
(245, 'java', '单', '程序如果要按行输入输出文件的字符流，最合理的方法是采用(      )', NULL),
(246, 'java', '单', '用Thread子类实现多线程的步骤是（　　　）。', NULL),
(247, 'java', '单', '有以下Java代码，下列叙述中最确切的是（　　　）。<br/>\r\nclass A{<br/>\r\n   int x;<br/>\r\n   static int y;<br/>\r\n   void fac(String s){System.out.println("字符中："+s);}<br/>\r\n}<br/>', NULL),
(248, 'java', '单', '有以下Java代码，下列叙述中最确切的是（　　　）。<br/>\r\nclass A{<br/>\r\n   int x;<br/>\r\n   static int y;<br/>\r\n   void fac(String s){System.out.println("字符中："+s);}<br/>\r\n}<br/>', NULL),
(249, 'java', '单', '有如下代码片断，将导致程序错误的行是（　　　）。<br/>\r\n1) String str = null;<br/>\r\n2) if((str != null) && (str.length()>10){<br/>\r\n3)  System.out.println("more than 10");<br/>\r\n4) }<br/>\r\n5) else if((str != null) & (str.length()<5)){<br/>\r\n6)    System.out.println("less than 5");<br/>\r\n7)}<br/>\r\n8) else{System.out.println("end");}<br/>', NULL),
(250, 'java', '单', '下列选项中关于如下代码段叙述正确的是（　　　）<br/>\r\npublic class Person{<br/>\r\n   static int arr[] = new int[10];<br/>\r\n   public static void main(String a[]){<br/>\r\n      System.out.println(arr[1]);<br/>\r\n   }<br/>\r\n}<br/>', NULL),
(251, 'java', '单', '下列方法中可以加入到类Child中的是 （　　）。<br/>\r\npublic class Parent{<br/>\r\n    public int addValue(int a,int b){<br/>\r\n      int s;<br/>\r\n      s = a+b;<br/>\r\n      return s;<br/>\r\n    }<br/>\r\n}\r\nclass Child extends Parent{}', NULL),
(252, 'java', '单', '下列java源文件代码片断错误的是（　　）。', NULL),
(253, 'java', '单', '执行以下代码，c的值是（　　）。<br/>\r\nint a = 3;<br/>\r\nchar b=\'5\';<br/>\r\nchar c=(char)(a+b);<br/>', NULL),
(254, 'java', '单', '为了区分类中重载的同名的不同方法，要求(      )。', NULL),
(255, 'java', '单', '在testMethod()方法运行抛出空指针异常的情况下，程序输出的结果是(      )。<br/>\r\npublic void test(){<br/>\r\n  try{<br/>\r\n      testMethod();<br/>\r\n      System.out.println("condition 1");<br/>\r\n  }catch(ArrayIndexOutOfBoundsException e){<br/>\r\n     System.out.println("condition 2");<br/>\r\n  }catch(Exception e){<br/>\r\n    System.out.println("condition 3");<br/>\r\n  }finally{<br/>\r\n    System,.out.println("finally");<br/>\r\n  }<br/>\r\n}<br/>\r\n', NULL),
(256, 'java', '单', '执行以下代码，其输出结果是（　　）<br/>\r\nclass Parent{<br/>\r\n   String one,two;<br/>\r\n   public Parent(String a,String b){<br/>\r\n       one = a;<br/>\r\n       two = b;<br/>\r\n  }<br/>\r\n  public void print(){<br/>\r\n     System.out.println(one);<br/>\r\n }<br/>\r\n}<br/>\r\n public class Child extends Parent{<br/>\r\n    public Child(String a,String b){<br/>\r\n      super(a,b);<br/>\r\n    }<br/>\r\n    public void print(){<br/>\r\n       System.out.println(one+" to "+two);<br/>\r\n    }<br/>\r\n   public static void main(String args[]){<br/>\r\n      Parent p = new Parent("south","north");<br/>\r\n      Parent t = new Child("east","west");<br/>\r\n      p.print();<br/>\r\n      t.print();<br/>\r\n  }<br/>\r\n}<br/>', NULL),
(257, 'java', '单', '编译和运行下面代码后显示的结果是（    ）。<br/>\r\nimport java.awt.*;<br/>\r\npublic class Test extends Frame{<br/>\r\n   public static void main(String argv[]){<br/>\r\n     Test MyButton = new Test();<br/>\r\n   }<br/>\r\n   public Test(){<br/>\r\n     Button HellowButton = new Button("Hello");<br/>\r\n     Button ByeButton = new Button("Bye");<br/>\r\n     add(HellowButton);<br/>\r\n     add(ByeButton);<br/>\r\n     setSize(300,300);<br/>\r\n     setVisible(true);<br/>\r\n  }<br/>\r\n}<br/>\r\n\r\n', NULL),
(258, 'java', '单', '下列说法中正确的是（      ）。', NULL),
(259, 'java', '单', '下列常见的系统定义异常中，有可能是网络原因导致的异常是（      ）。', NULL),
(260, 'java', '单', 'Set集合遇到重复的元素，处理的方式是（      ）', NULL),
(261, 'java', '单', '下列表达式返回值为true的是（     ）', NULL),
(262, 'android', '单', 'aaa', NULL);

-- --------------------------------------------------------

--
-- 表的结构 `student`
--

CREATE TABLE `student` (
  `id` int(10) UNSIGNED NOT NULL,
  `studentId` varchar(8) NOT NULL,
  `name` varchar(20) NOT NULL,
  `className` varchar(20) NOT NULL,
  `birthday` date NOT NULL,
  `sex` char(1) NOT NULL DEFAULT '男',
  `nation` varchar(10) NOT NULL,
  `password` varchar(40) DEFAULT NULL COMMENT '密码'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `student`
--

INSERT INTO `student` (`id`, `studentId`, `name`, `className`, `birthday`, `sex`, `nation`, `password`) VALUES
(1, '07160801', '张三', '软件1608', '2000-01-01', '男', '汉族', '86f7e437faa5a7fce15d1ddcb9eaeaea377667b8'),
(3, '07160803', '无奇不有', '软件班', '2013-04-22', '男', '汉族', '86f7e437faa5a7fce15d1ddcb9eaeaea377667b8'),
(6, '07160701', '蔡景宜', '软件1607', '1996-12-30', '男', '高山族', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(7, '07160708', '郭锦雄', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(8, '07160707', '方梓煜', '软件1607', '1998-09-09', '女', '回', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(9, '07160706', '方瑞铭', '软件1607', '1997-04-04', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(10, '07160705', '董贤豪', '软件1607', '1666-06-06', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(11, '07160704', '陈铮', '软件1607', '1999-09-09', '女', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(12, '07160703', '陈炯', '软件1607', '1999-09-09', '女', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(13, '07160702', '蔡招豪', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(14, '07160709', '何鸿发', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(15, '07160710', '黄凯锋', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(16, '07160711', '黄启铭', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(17, '07160712', '黄钦源', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(18, '07160713', '黄群展', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(19, '07160714', '黄荣源', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(20, '07160715', '黄锡驹', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(21, '07160716', '黄煜辉', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(22, '07160717', '黄梓槟', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(23, '07160718', '柯冠成', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(24, '07160719', '李超宇', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(25, '07160720', '李坤霖', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(26, '07160721', '李齐斌', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(27, '07160722', '李银亮', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(28, '07160723', '李志戊', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(29, '07160724', '梁澄潮', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(30, '07160725', '梁业宏', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(31, '07160726', '梁友华', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(32, '07160727', '廖伟康', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(33, '07160728', '廖志伟', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(34, '07160729', '林慧茵', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(35, '07160730', '林彦斌', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(36, '07160731', '刘文棋', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(37, '07160732', '施德俊', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(38, '07160733', '石倩倩', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(39, '07160734', '石亿飞', '软件1607', '1666-06-06', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(40, '07160735', '谭文昊', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(41, '07160736', '王华婷', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(42, '07160737', '王泽钒', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(43, '07160738', '肖吉彬', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(44, '07160739', '许思航', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(45, '07160740', '袁曼婷', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(46, '07160741', '张光鹏', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(47, '07160742', '张力源', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(48, '07160743', '张治通', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(49, '07160744', '赵和源', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(50, '07160745', '周铭潘', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(51, '07160746', '周锐荣', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(52, '07160748', '朱英健', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(53, '07160747', '周少栋', '软件1607', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf'),
(54, 'hzj', '胡泽军', '教师组', '1999-09-09', '男', '汉', '81fe8bfe87576c3ecb22426f8e57847382917acf');

-- --------------------------------------------------------

--
-- 表的结构 `user`
--

CREATE TABLE `user` (
  `id` int(10) UNSIGNED NOT NULL,
  `username` varchar(20) NOT NULL,
  `password` varchar(48) NOT NULL,
  `status` tinyint(4) NOT NULL COMMENT '状态'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `user`
--

INSERT INTO `user` (`id`, `username`, `password`, `status`) VALUES
(2, 'administrator', '62102030389c47479e7563261db82c747246b5b5', 1),
(3, 'abcd', '81fe8bfe87576c3ecb22426f8e57847382917acf', 1),
(4, 'rrr', '8578173555a47d4ea49e697badfda270dee0858f', 1),
(5, 'qqqq', '33a9e269dd782e92489a8e547b7ed582e0e1d42b', 1);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `answer_paper`
--
ALTER TABLE `answer_paper`
  ADD PRIMARY KEY (`id`),
  ADD KEY `INDEX_QUESTION_ID` (`select_question_id`) USING BTREE,
  ADD KEY `INDEX_PAPER_ID` (`paper_id`),
  ADD KEY `INDEX_S_ID` (`studentid`);

--
-- Indexes for table `exercise_answer`
--
ALTER TABLE `exercise_answer`
  ADD PRIMARY KEY (`id`),
  ADD KEY `INDEX_QUESTION_ID` (`select_question_id`) USING BTREE,
  ADD KEY `INDEX_PAPER_ID` (`paper_id`),
  ADD KEY `INDEX_S_ID` (`studentid`);

--
-- Indexes for table `exercise_score`
--
ALTER TABLE `exercise_score`
  ADD PRIMARY KEY (`id`),
  ADD KEY `index3_student_id` (`studentId`),
  ADD KEY `index4_paper_id` (`paper_id`);

--
-- Indexes for table `paper`
--
ALTER TABLE `paper`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `score`
--
ALTER TABLE `score`
  ADD PRIMARY KEY (`id`),
  ADD KEY `index3_student_id` (`studentId`),
  ADD KEY `index4_paper_id` (`paper_id`);

--
-- Indexes for table `select_item`
--
ALTER TABLE `select_item`
  ADD PRIMARY KEY (`id`),
  ADD KEY `INDEX_QUESTION_ID` (`select_question_id`);

--
-- Indexes for table `select_question`
--
ALTER TABLE `select_question`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `student`
--
ALTER TABLE `student`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `INDEX_STUDENT_ID` (`studentId`);

--
-- Indexes for table `user`
--
ALTER TABLE `user`
  ADD PRIMARY KEY (`id`);

--
-- 在导出的表使用AUTO_INCREMENT
--

--
-- 使用表AUTO_INCREMENT `answer_paper`
--
ALTER TABLE `answer_paper`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键', AUTO_INCREMENT=1828;
--
-- 使用表AUTO_INCREMENT `exercise_answer`
--
ALTER TABLE `exercise_answer`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键', AUTO_INCREMENT=4965;
--
-- 使用表AUTO_INCREMENT `exercise_score`
--
ALTER TABLE `exercise_score`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=142;
--
-- 使用表AUTO_INCREMENT `paper`
--
ALTER TABLE `paper`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键', AUTO_INCREMENT=34;
--
-- 使用表AUTO_INCREMENT `score`
--
ALTER TABLE `score`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=45;
--
-- 使用表AUTO_INCREMENT `select_item`
--
ALTER TABLE `select_item`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键', AUTO_INCREMENT=1046;
--
-- 使用表AUTO_INCREMENT `select_question`
--
ALTER TABLE `select_question`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键', AUTO_INCREMENT=263;
--
-- 使用表AUTO_INCREMENT `student`
--
ALTER TABLE `student`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=55;
--
-- 使用表AUTO_INCREMENT `user`
--
ALTER TABLE `user`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;
--
-- 限制导出的表
--

--
-- 限制表 `answer_paper`
--
ALTER TABLE `answer_paper`
  ADD CONSTRAINT `answer_paper_ibfk_1` FOREIGN KEY (`select_question_id`) REFERENCES `select_question` (`id`),
  ADD CONSTRAINT `answer_paper_ibfk_2` FOREIGN KEY (`paper_id`) REFERENCES `paper` (`id`),
  ADD CONSTRAINT `answer_paper_ibfk_3` FOREIGN KEY (`studentid`) REFERENCES `student` (`studentId`);

--
-- 限制表 `exercise_answer`
--
ALTER TABLE `exercise_answer`
  ADD CONSTRAINT `exercise_answer_ibfk_1` FOREIGN KEY (`select_question_id`) REFERENCES `select_question` (`id`),
  ADD CONSTRAINT `exercise_answer_ibfk_2` FOREIGN KEY (`paper_id`) REFERENCES `paper` (`id`),
  ADD CONSTRAINT `exercise_answer_ibfk_3` FOREIGN KEY (`studentid`) REFERENCES `student` (`studentId`);

--
-- 限制表 `exercise_score`
--
ALTER TABLE `exercise_score`
  ADD CONSTRAINT `exercise_score_ibfk_1` FOREIGN KEY (`studentId`) REFERENCES `student` (`studentId`),
  ADD CONSTRAINT `exercise_score_ibfk_2` FOREIGN KEY (`paper_id`) REFERENCES `paper` (`id`);

--
-- 限制表 `score`
--
ALTER TABLE `score`
  ADD CONSTRAINT `score_ibfk_1` FOREIGN KEY (`studentId`) REFERENCES `student` (`studentId`),
  ADD CONSTRAINT `score_ibfk_2` FOREIGN KEY (`paper_id`) REFERENCES `paper` (`id`);

--
-- 限制表 `select_item`
--
ALTER TABLE `select_item`
  ADD CONSTRAINT `id_fk` FOREIGN KEY (`select_question_id`) REFERENCES `select_question` (`id`),
  ADD CONSTRAINT `select_item_fk` FOREIGN KEY (`select_question_id`) REFERENCES `select_question` (`id`) ON DELETE CASCADE,
  ADD CONSTRAINT `select_item_ibfk_1` FOREIGN KEY (`select_question_id`) REFERENCES `select_question` (`id`);

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
